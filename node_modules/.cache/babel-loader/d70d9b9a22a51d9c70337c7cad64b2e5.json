{"ast":null,"code":"var _name$computed$method;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport { formatDateToJa } from '../../functions/datetime';\nimport EventFormDialog from '../events/EventFormDialog';\nexport default (_name$computed$method = {\n  name: 'DayEventList',\n  computed: _objectSpread({}, mapGetters('events', ['dayEvents', 'clickedDate'])),\n  methods: _objectSpread(_objectSpread({}, mapActions('events', ['setClickedDate'])), {}, {\n    formatDateToJa: formatDateToJa,\n    closeDialog: function closeDialog() {\n      this.setClickedDate(null);\n    },\n    initEvent: function initEvent(_ref) {\n      var date = _ref.date;\n\n      if (this.clickedDate !== null) {\n        return;\n      }\n\n      date = date.replace(/-/g, '/');\n\n      var _getDefaultStartAndEn = getDefaultStartAndEnd(date),\n          _getDefaultStartAndEn2 = _slicedToArray(_getDefaultStartAndEn, 2),\n          start = _getDefaultStartAndEn2[0],\n          end = _getDefaultStartAndEn2[1];\n\n      this.setEvent({\n        name: '',\n        start: start,\n        end: end,\n        timed: true\n      });\n      this.setEditMode(true);\n    }\n  }),\n  initCalendar: function initCalendar() {\n    this.setCalendar({\n      name: '',\n      visibility: true\n    });\n  }\n}, _defineProperty(_name$computed$method, \"name\", 'Calendar'), _defineProperty(_name$computed$method, \"components\", {\n  EventFormDialog: EventFormDialog\n}), _name$computed$method);","map":{"version":3,"sources":["DayEventList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,cAAA,QAAA,0BAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AAEA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,aAAA,CAAA,CADA,CAFA;AAKA,EAAA,OAAA,kCACA,UAAA,CAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,CADA;AAEA,IAAA,cAAA,EAAA,cAFA;AAGA,IAAA,WAHA,yBAGA;AACA,WAAA,cAAA,CAAA,IAAA;AACA,KALA;AAMA,IAAA,SANA,2BAMA;AAAA,UAAA,IAAA,QAAA,IAAA;;AACA,UAAA,KAAA,WAAA,KAAA,IAAA,EAAA;AACA;AACA;;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AACA,kCAAA,qBAAA,CAAA,IAAA,CAAA;AAAA;AAAA,UAAA,KAAA;AAAA,UAAA,GAAA;;AACA,WAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,WAAA,WAAA,CAAA,IAAA;AACA;AAdA,IALA;AAqBA,EAAA,YArBA,0BAqBA;AACA,SAAA,WAAA,CAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA;AAFA,KAAA;AAIA;AA1BA,kDA2BA,UA3BA,wDA4BA;AACA,EAAA,eAAA,EAAA;AADA,CA5BA","sourcesContent":["<template>\n  <v-card class=\"pb-8\">\n    <v-card-actions class=\"d-flex justify-end\">\n      <v-btn icon @click=\"closeDialog\">\n        <v-icon>mdi-close</v-icon>\n      </v-btn>\n    </v-card-actions>\n    <v-card-title class=\"d-flex justify-center\">\n      {{ formatDateToJa(clickedDate) }}\n    </v-card-title>\n    <v-card-text>\n      <v-list>\n        <v-list-item v-for=\"event in dayEvents\" :key=\"event.id\">\n          <v-list-item-content class=\"pa-0\">\n            <v-btn\n              depressed\n              :color=\"event.color\"\n              class=\"white--text justify-start\"\n            >\n              <template v-if=\"event.timed\">{{ event.startTime }}</template>\n              {{ event.name }}\n            </v-btn>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-card-text>\n\n\n<!-- カレンダー日付選択からの1日リストのプラスボタン機能させたい -->\n      <v-row justify=\"center\">\n        <v-dialog\n          :value=\"event !== null\"\n          fullscreen\n          hide-overlay\n          transition=\"dialog-bottom-transition\"\n        >\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn\n              x-small\n              fab\n              v-bind=\"attrs\"\n              v-on=\"on\"\n              @click:day=\"initEvent\"\n            >\n              <v-icon>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n          </template>\n          <EventDetailDialog v-if=\"event !== null && !isEditMode\" />\n        </v-dialog>\n      </v-row>\n\n\n  </v-card>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport { formatDateToJa } from '../../functions/datetime';\nimport EventFormDialog from '../events/EventFormDialog';\n\nexport default {\n  name: 'DayEventList',\n  computed: {\n    ...mapGetters('events', ['dayEvents', 'clickedDate'])\n  },\n  methods: {\n    ...mapActions('events', ['setClickedDate']),\n    formatDateToJa,\n    closeDialog() {\n      this.setClickedDate(null);\n    },\n    initEvent({ date }) {\n      if (this.clickedDate !== null) {\n        return;\n      }\n      date = date.replace(/-/g, '/');\n      const [start, end] = getDefaultStartAndEnd(date);\n      this.setEvent({ name: '', start, end, timed: true });\n      this.setEditMode(true);\n    },\n  },\n  initCalendar() {\n    this.setCalendar({\n      name: '',\n      visibility: true\n    });\n  },\n  name: 'Calendar',\n  components: {\n    EventFormDialog,\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/components/events"},"metadata":{},"sourceType":"module"}