{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: [],\n  participant: null\n};\nvar getters = {\n  events: function events(state) {\n    return state.events.filter(function (event) {\n      return event;\n    }).map(function (event) {\n      return serializeEvent(event);\n    });\n  },\n  event: function event(state) {\n    return serializeEvent(state.event);\n  },\n  dayEvents: function dayEvents(state) {\n    return state.events.map(function (event) {\n      return serializeEvent(event);\n    }).filter(function (event) {\n      return isDateWithinInterval(state.clickedDate, event.startDate, event.endDate);\n    }).sort(compareDates);\n  },\n  isEditMode: function isEditMode(state) {\n    return state.isEditMode;\n  },\n  clickedDate: function clickedDate(state) {\n    return state.clickedDate;\n  },\n  participants: function participants(state) {\n    return state.participants.map(function (participant) {\n      return _objectSpread(_objectSpread({}, participant), {}, {\n        start: new Date(participant.event.start),\n        end: new Date(participant.event.end)\n      });\n    });\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  }\n};\nvar actions = {\n  fetchEvents: function fetchEvents(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, eventsResponse, events, participantsResponse, participants;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              eventsResponse = _context.sent;\n              events = eventsResponse.data;\n              _context.next = 7;\n              return axios.get(\"\".concat(apiUrl, \"/participants\"));\n\n            case 7:\n              participantsResponse = _context.sent;\n              participants = participantsResponse.data;\n              commit('setEvents', {\n                events: events,\n                participants: participants\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createEvent: function createEvent(_ref2, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createEvent', event);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/events\"), event);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteEvent: function deleteEvent(_ref3, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/events/\").concat(id));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeEvent', response.data);\n              commit('resetEvent');\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateEvent: function updateEvent(_ref4, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/events/\").concat(event.id), event);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  setEvent: function setEvent(_ref5, event) {\n    var commit = _ref5.commit;\n    commit('setEvent', event);\n  },\n  setEditMode: function setEditMode(_ref6, bool) {\n    var commit = _ref6.commit;\n    commit('setEditMode', bool);\n  },\n  setClickedDate: function setClickedDate(_ref7, date) {\n    var commit = _ref7.commit;\n    commit('setClickedDate', date);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/events.js"],"names":["axios","isDateWithinInterval","compareDates","serializeEvent","apiUrl","state","events","event","isEditMode","clickedDate","participants","participant","getters","filter","map","dayEvents","startDate","endDate","sort","start","Date","end","mutations","setEvents","appendEvent","setEvent","removeEvent","e","id","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","actions","fetchEvents","commit","get","eventsResponse","data","participantsResponse","createEvent","console","log","post","response","deleteEvent","put","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: [],\n  participant: null\n};\n\nconst getters = {\n  events: state =>\n    state.events.filter(event => event).map(event => serializeEvent(event)),\n  event: state => serializeEvent(state.event),\n  dayEvents: state =>\n    state.events\n      .map(event => serializeEvent(event))\n      .filter(event =>\n        isDateWithinInterval(state.clickedDate, event.startDate, event.endDate)\n      )\n      .sort(compareDates),\n  isEditMode: state => state.isEditMode,\n  clickedDate: state => state.clickedDate,\n  participants: state => state.participants.map(participant => {\n    return {\n      ...participant,\n      start: new Date(participant.event.start),\n      end: new Date(participant.event.end)\n    };\n  }),\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date)\n};\n\nconst actions = {\n  async fetchEvents({ commit }) {\n    const eventsResponse = await axios.get(`${apiUrl}/events`);\n    const events = eventsResponse.data;\n    const participantsResponse = await axios.get(`${apiUrl}/participants`);\n    const participants = participantsResponse.data;\n    commit('setEvents', { events, participants });\n  },\n  async createEvent({ commit }, event) {\n    console.log('createEvent', event);\n    const response = await axios.post(`${apiUrl}/events`, event);\n    commit('appendEvent', response.data);\n  },\n  async deleteEvent({ commit }, id) {\n    const response = await axios.delete(`${apiUrl}/events/${id}`);\n    commit('removeEvent', response.data);\n    commit('resetEvent');\n  },\n  async updateEvent({ commit }, event) {\n    const response = await axios.put(`${apiUrl}/events/${event.id}`, event);\n    commit('updateEvent', response.data);\n  },\n  setEvent({ commit }, event) {\n    commit('setEvent', event);\n  },\n  setEditMode({ commit }, bool) {\n    commit('setEditMode', bool);\n  },\n  setClickedDate({ commit }, date) {\n    commit('setClickedDate', date);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}