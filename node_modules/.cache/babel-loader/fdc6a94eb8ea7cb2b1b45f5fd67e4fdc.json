{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  props: ['value'],\n  computed: _objectSpread(_objectSpread({}, mapGetters('participants', ['participantUsers'])), {}, {\n    filteredUsers: function filteredUsers() {\n      return this.participantUsers.filter(function (user) {\n        return user.name !== '車' && user.name !== '会議室';\n      });\n    }\n  }),\n  created: function created() {\n    console.log(this.value);\n  },\n  methods: {\n    onSelectionChange: function onSelectionChange(value) {\n      this.$emit('input', value);\n    },\n    removeParticipant: function removeParticipant(index) {\n      var newValue = _toConsumableArray(this.value);\n\n      newValue.splice(index, 1);\n      this.$emit('input', newValue);\n    }\n  }\n};","map":{"version":3,"sources":["FacillitiesForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA,cAAA,EAAA,CAAA,kBAAA,CAAA,CADA;AAEA,IAAA,aAFA,2BAEA;AACA,aAAA,KAAA,gBAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,KAAA,GAAA,IAAA,IAAA,CAAA,IAAA,KAAA,KAAA;AAAA,OAAA,CAAA;AACA;AAJA,IAHA;AASA,EAAA,OATA,qBASA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,iBAJA,6BAIA,KAJA,EAIA;AACA,UAAA,QAAA,sBAAA,KAAA,KAAA,CAAA;;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,QAAA;AACA;AARA;AAZA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"参加者を追加\"\n          item-text=\"name\"\n          item-value=\"id\"\n          multiple\n          :value=\"value\"\n          :items=\"filteredUsers\"\n          @input=\"$emit('input', $event)\"\n          @change=\"onSelectionChange\"\n        >\n          <template v-slot:selection=\"{ item, index }\">\n            <v-chip\n              v-if=\"index < value.length\"\n              :key=\"item.id\"\n              close\n              @click:close=\"removeParticipant(index)\"\n            >\n              {{ item.name }}\n            </v-chip>\n          </template>\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'GuestSelectForm',\n  props: ['value'],\n  computed: {\n    ...mapGetters('participants', ['participantUsers']),\n    filteredUsers() {\n      return this.participantUsers.filter(user => user.name !== '車' && user.name !== '会議室');\n    },\n  },\n  created() {\n    console.log(this.value);\n  },\n  methods: {\n    onSelectionChange(value) {\n      this.$emit('input', value);\n    },\n    removeParticipant(index) {\n      const newValue = [...this.value];\n      newValue.splice(index, 1);\n      this.$emit('input', newValue);\n    },\n  },\n};\n</script> "],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}