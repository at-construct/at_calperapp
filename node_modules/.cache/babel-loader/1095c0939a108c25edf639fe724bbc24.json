{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction inserted(el, binding) {\n  var _ref = binding.modifiers || {},\n      _ref$self = _ref.self,\n      self = _ref$self === void 0 ? false : _ref$self;\n\n  var value = binding.value;\n  var options = _typeof(value) === 'object' && value.options || {\n    passive: true\n  };\n  var handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler;\n  var target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;\n  if (!target) return;\n  target.addEventListener('scroll', handler, options);\n  el._onScroll = {\n    handler: handler,\n    options: options,\n    // Don't reference self\n    target: self ? undefined : target\n  };\n}\n\nfunction unbind(el) {\n  if (!el._onScroll) return;\n  var _el$_onScroll = el._onScroll,\n      handler = _el$_onScroll.handler,\n      options = _el$_onScroll.options,\n      _el$_onScroll$target = _el$_onScroll.target,\n      target = _el$_onScroll$target === void 0 ? el : _el$_onScroll$target;\n  target.removeEventListener('scroll', handler, options);\n  delete el._onScroll;\n}\n\nexport var Scroll = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Scroll;","map":null,"metadata":{},"sourceType":"module"}