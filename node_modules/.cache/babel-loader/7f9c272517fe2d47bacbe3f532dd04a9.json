{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatDateToJa } from '../../functions/datetime';\nexport default {\n  data: function data(vm) {\n    return {\n      date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false\n    };\n  },\n  computed: {\n    computedDateFormatted: function computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n  },\n  watch: {\n    date: function date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n  },\n  methods: {\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split('-'),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return null;\n\n      var _date$split3 = date.split('/'),\n          _date$split4 = _slicedToArray(_date$split3, 3),\n          month = _date$split4[0],\n          day = _date$split4[1],\n          year = _date$split4[2];\n\n      return \"\".concat(year, \"-\").concat(month.padStart(2, '0'), \"-\").concat(day.padStart(2, '0'));\n    }\n  }\n};","map":{"version":3,"sources":["DateForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,cAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,IAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,IAAA,IAAA,EAAA,CAAA,iBAAA,KAAA,KAAA,CAAA,CAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CADA;AAEA,MAAA,aAAA,EAAA,EAAA,CAAA,UAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,GAAA,KAAA,IAAA,IAAA,EAAA,CAAA,iBAAA,KAAA,KAAA,CAAA,CAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAFA;AAGA,MAAA,KAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA;AAJA,KAAA;AAAA,GADA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,qBADA,mCACA;AACA,aAAA,KAAA,UAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAHA,GARA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,gBACA,GADA,EACA;AACA,WAAA,aAAA,GAAA,KAAA,UAAA,CAAA,KAAA,IAAA,CAAA;AACA;AAHA,GAdA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,UAAA,CAAA,IAAA,EAAA,OAAA,IAAA;;AAEA,wBAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA;AAAA,UAAA,IAAA;AAAA,UAAA,KAAA;AAAA,UAAA,GAAA;;AACA,uBAAA,KAAA,cAAA,GAAA,cAAA,IAAA;AACA,KANA;AAOA,IAAA,SAPA,qBAOA,IAPA,EAOA;AACA,UAAA,CAAA,IAAA,EAAA,OAAA,IAAA;;AAEA,yBAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AAAA;AAAA,UAAA,KAAA;AAAA,UAAA,GAAA;AAAA,UAAA,IAAA;;AACA,uBAAA,IAAA,cAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA,cAAA,GAAA,CAAA,QAAA,CAAA,CAAA,EAAA,GAAA,CAAA;AACA;AAZA;AApBA,CAAA","sourcesContent":["<template>\n  <v-menu offset-y>\n    <template v-slot:activator=\"{ on }\">\n      <v-btn text v-on=\"on\" :class=\"{ 'red lighten-4 rounded' : isError}\">\n      {{ formatDateToJa(value) || '日付を選択' }}\n      </v-btn>\n    </template>\n\n    <v-date-picker\n      :value=\"value.replace(/\\//g, '-')\"\n      @input=\"menu1 = false\"\n      no-title\n      locale=\"ja-ja\"\n      :day-format=\"value => new Date(value).getDate()\"\n    ></v-date-picker>\n  </v-menu>\n</template>\n\n<script>\nimport { formatDateToJa } from '../../functions/datetime';\n\n  export default {\n    data: vm => ({\n      date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n    },\n\n    watch: {\n      date (val) {\n        this.dateFormatted = this.formatDate(this.date)\n      },\n    },\n\n    methods: {\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n    },\n  }\n</script>\n</script>"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}