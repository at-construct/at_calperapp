{"ast":null,"code":"import { j as _createClass, k as _classCallCheck, l as arrayHasItems, m as hash, n as _objectSpread2, o as createGuid, p as last_1, q as pageIsEqualToPage, r as pageIsBeforePage, s as pageIsAfterPage, t as pageRangeToArray, u as pageIsBetweenPages, v as isDate, w as isObject, x as addPages, y as pageIsValid, z as _slicedToArray, A as hasAny, B as omit_1, C as onSpaceOrEnter } from './helpers-8d5d752d.js';\nimport { h } from 'vue';\nimport { r as requiredArgs, b as toDate, c as toInteger, A as Attribute, e as rootMixin, f as slotMixin, g as getDefault, h as isNumber_1, j as addDays } from './index-fcd0222c.js';\nimport { s as script$1 } from './CalendarPane.vue_vue&type=style&index=0&id=bf16a152&lang-d223e4a0.js';\nimport { s as script$3, h as head_1 } from './CalendarNav-c0eed85e.js';\nimport { s as script$2, a as addHorizontalSwipeHandler } from './Popover.vue_vue&type=style&index=0&id=0652eeb9&lang-c768a42a.js';\nimport script$4 from './CustomTransition.js';\nimport { s as styleInject } from './style-inject.es-1f59c1d0.js';\nimport script$6 from './PopoverRow.js';\nimport script$5 from './SvgIcon.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nfunction addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\n\nfunction addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}\n\nvar AttributeStore = /*#__PURE__*/function () {\n  function AttributeStore(theme, locale, attrs) {\n    _classCallCheck(this, AttributeStore);\n\n    this.theme = theme;\n    this.locale = locale;\n    this.map = {};\n    this.refresh(attrs, true);\n  }\n\n  _createClass(AttributeStore, [{\n    key: \"refresh\",\n    value: function refresh(attrs, reset) {\n      var _this = this;\n\n      var map = {};\n      var list = [];\n      var pinAttr = null; // Keep record of added and deleted attributes\n\n      var adds = [];\n      var deletes = reset ? new Set() : new Set(Object.keys(this.map));\n\n      if (arrayHasItems(attrs)) {\n        attrs.forEach(function (attr, i) {\n          if (!attr || !attr.dates) return;\n          var key = attr.key ? attr.key.toString() : i.toString();\n          var order = attr.order || 0;\n          var hashcode = hash(JSON.stringify(attr));\n          var exAttr = _this.map[key]; // If just tracking delta changes and attribute hash hasn't changed\n\n          if (!reset && exAttr && exAttr.hashcode === hashcode) {\n            // ...don't need to replace the attribute\n            deletes.delete(key);\n          } else {\n            // Otherwise, create attribute and add to the list of adds\n            exAttr = new Attribute(_objectSpread2({\n              key: key,\n              order: order,\n              hashcode: hashcode\n            }, attr), _this.theme, _this.locale);\n            adds.push(exAttr);\n          } // Keep track of attribute to pin for initial page\n\n\n          if (exAttr && exAttr.pinPage) {\n            pinAttr = exAttr;\n          } // Add attribute to map and list\n\n\n          map[key] = exAttr;\n          list.push(exAttr);\n        });\n      }\n\n      this.map = map;\n      this.list = list;\n      this.pinAttr = pinAttr;\n      return {\n        adds: adds,\n        deletes: Array.from(deletes)\n      };\n    }\n  }]);\n\n  return AttributeStore;\n}();\n\nvar script = {\n  name: 'Calendar',\n  emits: ['dayfocusin', 'dayfocusout', 'transition-start', 'transition-end', 'update:from-page', 'update:to-page'],\n  render: function render() {\n    var _this = this; // Renderer for calendar panes\n\n\n    var panes = this.pages.map(function (page, i) {\n      var position = i + 1;\n      var row = Math.ceil((i + 1) / _this.columns);\n      var rowFromEnd = _this.rows - row + 1;\n      var column = position % _this.columns || _this.columns;\n      var columnFromEnd = _this.columns - column + 1;\n      return h(script$1, _objectSpread2(_objectSpread2({}, _this.$attrs), {}, {\n        key: page.key,\n        attributes: _this.store,\n        page: page,\n        position: position,\n        row: row,\n        rowFromEnd: rowFromEnd,\n        column: column,\n        columnFromEnd: columnFromEnd,\n        titlePosition: _this.titlePosition,\n        canMove: _this.canMove,\n        'onUpdate:page': function onUpdatePage(e) {\n          return _this.move(e, {\n            position: i + 1\n          });\n        },\n        onDayfocusin: function onDayfocusin(e) {\n          _this.lastFocusedDay = e;\n\n          _this.$emit('dayfocusin', e);\n        },\n        onDayfocusout: function onDayfocusout(e) {\n          _this.lastFocusedDay = null;\n\n          _this.$emit('dayfocusout', e);\n        }\n      }), _this.$slots);\n    }); // Renderer for calendar arrows\n\n    var getArrowButton = function getArrowButton(isPrev) {\n      var click = function click() {\n        return _this.move(isPrev ? -_this.step_ : _this.step_);\n      };\n\n      var keydown = function keydown(e) {\n        return onSpaceOrEnter(e, click);\n      };\n\n      var isDisabled = isPrev ? !_this.canMovePrev : !_this.canMoveNext;\n      return h('div', {\n        class: ['vc-arrow', \"is-\".concat(isPrev ? 'left' : 'right'), {\n          'is-disabled': isDisabled\n        }],\n        role: 'button',\n        onClick: click,\n        onKeydown: keydown\n      }, [(isPrev ? _this.safeSlot('header-left-button', {\n        click: click\n      }) : _this.safeSlot('header-right-button', {\n        click: click\n      })) || h(script$5, {\n        name: isPrev ? 'left-arrow' : 'right-arrow'\n      })]);\n    }; // Nav popover\n\n\n    var getNavPopover = function getNavPopover() {\n      return h(script$2, {\n        id: _this.sharedState.navPopoverId,\n        contentClass: 'vc-nav-popover-container',\n        ref: 'navPopover'\n      }, {\n        // Navigation pane\n        default: function _default(_ref) {\n          var data = _ref.data;\n          var position = data.position,\n              page = data.page;\n          return h(script$3, {\n            value: page,\n            position: position,\n            validator: function validator(e) {\n              return _this.canMove(e, {\n                position: position\n              });\n            },\n            onInput: function onInput(e) {\n              return _this.move(e);\n            }\n          }, _objectSpread2({}, _this.$slots));\n        }\n      });\n    }; // Day popover\n\n\n    var getDayPopover = function getDayPopover() {\n      return h(script$2, {\n        id: _this.sharedState.dayPopoverId,\n        contentClass: 'vc-day-popover-container'\n      }, {\n        default: function _default(_ref2) {\n          var day = _ref2.data,\n              updateLayout = _ref2.updateLayout,\n              hide = _ref2.hide;\n          var attributes = Object.values(day.attributes).filter(function (a) {\n            return a.popover;\n          });\n          var masks = _this.$locale.masks;\n          var format = _this.formatDate;\n          var dayTitle = format(day.date, masks.dayPopover);\n          return _this.safeSlot('day-popover', {\n            day: day,\n            attributes: attributes,\n            masks: masks,\n            format: format,\n            dayTitle: dayTitle,\n            updateLayout: updateLayout,\n            hide: hide\n          }, h('div', [// Show popover header only if format is defined\n          masks.dayPopover && h('div', {\n            class: ['vc-day-popover-header']\n          }, [dayTitle]), attributes.map(function (attribute) {\n            return h(script$6, {\n              key: attribute.key,\n              attribute: attribute\n            });\n          })]));\n        }\n      });\n    }; // Render calendar container\n\n\n    return h('div', {\n      'data-helptext': 'Press the arrow keys to navigate by day, Home and End to navigate to week ends, PageUp and PageDown to navigate by month, Alt+PageUp and Alt+PageDown to navigate by year',\n      class: ['vc-container', \"vc-\".concat(this.$theme.color), {\n        'vc-is-expanded': this.isExpanded,\n        'vc-is-dark': this.$theme.isDark\n      }],\n      onKeydown: this.handleKeydown,\n      onMouseup: function onMouseup(e) {\n        return e.preventDefault();\n      },\n      ref: 'container'\n    }, [getNavPopover(), h('div', {\n      class: ['vc-pane-container', {\n        'in-transition': this.inTransition\n      }]\n    }, [h(script$4, {\n      name: this.transitionName,\n      'on-before-enter': function onBeforeEnter() {\n        _this.inTransition = true;\n      },\n      'on-after-enter': function onAfterEnter() {\n        _this.inTransition = false;\n      }\n    }, {\n      default: function _default() {\n        return h('div', _objectSpread2(_objectSpread2({}, _this.$attrs), {}, {\n          class: 'vc-pane-layout',\n          style: {\n            gridTemplateColumns: \"repeat(\".concat(_this.columns, \", 1fr)\")\n          },\n          key: _this.firstPage ? _this.firstPage.key : ''\n        }), panes);\n      }\n    }), h('div', {\n      class: [\"vc-arrows-container title-\".concat(this.titlePosition)]\n    }, [getArrowButton(true), getArrowButton(false)]), this.$slots.footer && this.$slots.footer()]), getDayPopover()]);\n  },\n  mixins: [rootMixin, slotMixin],\n  provide: function provide() {\n    return {\n      sharedState: this.sharedState\n    };\n  },\n  props: {\n    rows: {\n      type: Number,\n      default: 1\n    },\n    columns: {\n      type: Number,\n      default: 1\n    },\n    step: Number,\n    titlePosition: {\n      type: String,\n      default: getDefault('titlePosition')\n    },\n    isExpanded: Boolean,\n    fromDate: Date,\n    toDate: Date,\n    fromPage: Object,\n    toPage: Object,\n    minPage: Object,\n    maxPage: Object,\n    transition: String,\n    attributes: [Object, Array],\n    trimWeeks: Boolean,\n    disablePageSwipe: Boolean\n  },\n  data: function data() {\n    return {\n      pages: [],\n      store: null,\n      lastFocusedDay: null,\n      focusableDay: new Date().getDate(),\n      transitionName: '',\n      inTransition: false,\n      sharedState: {\n        navPopoverId: createGuid(),\n        dayPopoverId: createGuid(),\n        theme: {},\n        masks: {},\n        locale: {}\n      }\n    };\n  },\n  computed: {\n    firstPage: function firstPage() {\n      return head_1(this.pages);\n    },\n    lastPage: function lastPage() {\n      return last_1(this.pages);\n    },\n    minPage_: function minPage_() {\n      return this.minPage || this.pageForDate(this.minDate);\n    },\n    maxPage_: function maxPage_() {\n      return this.maxPage || this.pageForDate(this.maxDate);\n    },\n    count: function count() {\n      return this.rows * this.columns;\n    },\n    step_: function step_() {\n      return this.step || this.count;\n    },\n    canMovePrev: function canMovePrev() {\n      return this.canMove(-this.step_);\n    },\n    canMoveNext: function canMoveNext() {\n      return this.canMove(this.step_);\n    }\n  },\n  watch: {\n    $locale: function $locale() {\n      this.refreshLocale();\n      this.refreshPages({\n        page: this.firstPage,\n        ignoreCache: true\n      });\n      this.initStore();\n    },\n    $theme: function $theme() {\n      this.refreshTheme();\n      this.initStore();\n    },\n    fromDate: function fromDate() {\n      this.refreshPages();\n    },\n    fromPage: function fromPage(val) {\n      var firstPage = this.pages && this.pages[0];\n      if (pageIsEqualToPage(val, firstPage)) return;\n      this.refreshPages();\n    },\n    toPage: function toPage(val) {\n      var lastPage = this.pages && this.pages[this.pages.length - 1];\n      if (pageIsEqualToPage(val, lastPage)) return;\n      this.refreshPages();\n    },\n    count: function count() {\n      this.refreshPages();\n    },\n    attributes: function attributes(val) {\n      var _this$store$refresh = this.store.refresh(val),\n          adds = _this$store$refresh.adds,\n          deletes = _this$store$refresh.deletes;\n\n      this.refreshAttrs(this.pages, adds, deletes);\n    },\n    pages: function pages(val) {\n      this.refreshAttrs(val, this.store.list, null, true);\n    },\n    disabledAttribute: function disabledAttribute() {\n      this.refreshDisabledDays();\n    },\n    lastFocusedDay: function lastFocusedDay(val) {\n      if (val) {\n        this.focusableDay = val.day;\n        this.refreshFocusableDays();\n      }\n    },\n    inTransition: function inTransition(val) {\n      if (val) {\n        this.$emit('transition-start');\n      } else {\n        this.$emit('transition-end');\n\n        if (this.transitionPromise) {\n          this.transitionPromise.resolve(true);\n          this.transitionPromise = null;\n        }\n      }\n    }\n  },\n  created: function created() {\n    this.refreshLocale();\n    this.refreshTheme();\n    this.initStore();\n    this.refreshPages();\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    if (!this.disablePageSwipe) {\n      // Add swipe handler to move to next and previous pages\n      this.removeHandlers = addHorizontalSwipeHandler(this.$refs.container, function (_ref3) {\n        var toLeft = _ref3.toLeft,\n            toRight = _ref3.toRight;\n\n        if (toLeft) {\n          _this2.moveNext();\n        } else if (toRight) {\n          _this2.movePrev();\n        }\n      }, getDefault('touch'));\n    }\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.removeHandlers();\n  },\n  methods: {\n    refreshLocale: function refreshLocale() {\n      this.sharedState.locale = this.$locale;\n      this.sharedState.masks = this.$locale.masks;\n    },\n    refreshTheme: function refreshTheme() {\n      this.sharedState.theme = this.$theme;\n    },\n    canMove: function canMove(arg) {\n      var _this3 = this;\n\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var page = this.firstPage && this.$locale.toPage(arg, this.firstPage);\n      if (!page) return false;\n      var position = opts.position; // Pin position if arg is number\n\n      if (isNumber_1(arg)) position = 1; // Set position if unspecified and out of current bounds\n\n      if (!position) {\n        if (pageIsBeforePage(page, this.firstPage)) {\n          position = -1;\n        } else if (pageIsAfterPage(page, this.lastPage)) {\n          position = 1;\n        } else {\n          // Page already displayed\n          return true;\n        }\n      } // Calculate new page range without adjusting to min/max\n\n\n      Object.assign(opts, this.getTargetPageRange(page, {\n        position: position,\n        force: true\n      })); // Verify we can move to any pages in the target range\n\n      return pageRangeToArray(opts.fromPage, opts.toPage).some(function (p) {\n        return pageIsBetweenPages(p, _this3.minPage_, _this3.maxPage_);\n      });\n    },\n    movePrev: function movePrev(opts) {\n      return this.move(-this.step_, opts);\n    },\n    moveNext: function moveNext(opts) {\n      return this.move(this.step_, opts);\n    },\n    move: function move(arg) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Reject if we can't move to this page\n\n      var canMove = this.canMove(arg, opts);\n\n      if (!opts.force && !canMove) {\n        return Promise.reject(new Error(\"Move target is disabled: \".concat(JSON.stringify(opts))));\n      } // Hide nav popover for good measure\n\n\n      this.$refs.navPopover.hide({\n        hideDelay: 0\n      }); // Move to new `fromPage` if it's different from the current one\n\n      if (opts.fromPage && !pageIsEqualToPage(opts.fromPage, this.firstPage)) {\n        return this.refreshPages(_objectSpread2(_objectSpread2({}, opts), {}, {\n          page: opts.fromPage,\n          position: 1,\n          force: true\n        }));\n      }\n\n      return Promise.resolve(true);\n    },\n    focusDate: function focusDate(date) {\n      var _this4 = this;\n\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Move to the given date\n\n      return this.move(date, opts).then(function () {\n        // Set focus on the element for the date\n        var focusableEl = _this4.$el.querySelector(\".id-\".concat(_this4.$locale.getDayId(date), \".in-month .vc-focusable\"));\n\n        if (focusableEl) {\n          focusableEl.focus();\n          return Promise.resolve(true);\n        }\n\n        return Promise.resolve(false);\n      });\n    },\n    showPageRange: function showPageRange(range, opts) {\n      var fromPage;\n      var toPage;\n\n      if (isDate(range)) {\n        fromPage = this.pageForDate(range);\n      } else if (isObject(range)) {\n        var month = range.month,\n            year = range.year;\n        var from = range.from,\n            to = range.to;\n\n        if (isNumber_1(month) && isNumber_1(year)) {\n          fromPage = range;\n        } else if (from || to) {\n          fromPage = isDate(from) ? this.pageForDate(from) : from;\n          toPage = isDate(to) ? this.pageForDate(to) : to;\n        }\n      } else {\n        return Promise.reject(new Error('Invalid page range provided.'));\n      }\n\n      var lastPage = this.lastPage;\n      var page = fromPage; // Offset page from the desired `toPage`\n\n      if (pageIsAfterPage(toPage, lastPage)) {\n        page = addPages(toPage, -(this.pages.length - 1));\n      } // But no earlier than the desired `fromPage`\n\n\n      if (pageIsBeforePage(page, fromPage)) {\n        page = fromPage;\n      }\n\n      return this.refreshPages(_objectSpread2(_objectSpread2({}, opts), {}, {\n        page: page\n      }));\n    },\n    getTargetPageRange: function getTargetPageRange(page) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          position = _ref4.position,\n          force = _ref4.force;\n\n      var fromPage = null;\n      var toPage = null;\n\n      if (pageIsValid(page)) {\n        var pagesToAdd = 0;\n        position = +position;\n\n        if (!isNaN(position)) {\n          pagesToAdd = position > 0 ? 1 - position : -(this.count + position);\n        }\n\n        fromPage = addPages(page, pagesToAdd);\n      } else {\n        fromPage = this.getDefaultInitialPage();\n      }\n\n      toPage = addPages(fromPage, this.count - 1); // Adjust range for min/max if not forced\n\n      if (!force) {\n        if (pageIsBeforePage(fromPage, this.minPage_)) {\n          fromPage = this.minPage_;\n        } else if (pageIsAfterPage(toPage, this.maxPage_)) {\n          fromPage = addPages(this.maxPage_, 1 - this.count);\n        }\n\n        toPage = addPages(fromPage, this.count - 1);\n      }\n\n      return {\n        fromPage: fromPage,\n        toPage: toPage\n      };\n    },\n    getDefaultInitialPage: function getDefaultInitialPage() {\n      // 1. Try the fromPage prop\n      var page = this.fromPage || this.pageForDate(this.fromDate);\n\n      if (!pageIsValid(page)) {\n        // 2. Try the toPage prop\n        var toPage = this.toPage || this.pageForDate(this.toPage);\n\n        if (pageIsValid(toPage)) {\n          page = addPages(toPage, 1 - this.count);\n        }\n      } // 3. Try the first attribute\n\n\n      if (!pageIsValid(page)) {\n        page = this.getPageForAttributes();\n      } // 4. Use today's page\n\n\n      if (!pageIsValid(page)) {\n        page = this.pageForThisMonth();\n      }\n\n      return page;\n    },\n    refreshPages: function refreshPages() {\n      var _this5 = this;\n\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          page = _ref5.page,\n          _ref5$position = _ref5.position,\n          position = _ref5$position === void 0 ? 1 : _ref5$position,\n          force = _ref5.force,\n          transition = _ref5.transition,\n          ignoreCache = _ref5.ignoreCache;\n\n      return new Promise(function (resolve, reject) {\n        var _this5$getTargetPageR = _this5.getTargetPageRange(page, {\n          position: position,\n          force: force\n        }),\n            fromPage = _this5$getTargetPageR.fromPage,\n            toPage = _this5$getTargetPageR.toPage; // Create the new pages\n\n\n        var pages = [];\n\n        for (var i = 0; i < _this5.count; i++) {\n          pages.push(_this5.buildPage(addPages(fromPage, i), ignoreCache));\n        } // Refresh disabled days for new pages\n\n\n        _this5.refreshDisabledDays(pages); // Refresh focusable days for new pages\n\n\n        _this5.refreshFocusableDays(pages); // Assign the transition\n\n\n        _this5.transitionName = _this5.getPageTransition(_this5.pages[0], pages[0], transition); // Assign the new pages\n\n        _this5.pages = pages; // Emit page update events\n\n        _this5.$emit('update:from-page', fromPage);\n\n        _this5.$emit('update:to-page', toPage);\n\n        if (_this5.transitionName && _this5.transitionName !== 'none') {\n          _this5.transitionPromise = {\n            resolve: resolve,\n            reject: reject\n          };\n        } else {\n          resolve(true);\n        }\n      });\n    },\n    refreshDisabledDays: function refreshDisabledDays(pages) {\n      var _this6 = this;\n\n      this.getPageDays(pages).forEach(function (d) {\n        d.isDisabled = !!_this6.disabledAttribute && _this6.disabledAttribute.intersectsDay(d);\n      });\n    },\n    refreshFocusableDays: function refreshFocusableDays(pages) {\n      var _this7 = this;\n\n      this.getPageDays(pages).forEach(function (d) {\n        d.isFocusable = d.inMonth && d.day === _this7.focusableDay;\n      });\n    },\n    getPageDays: function getPageDays() {\n      var pages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.pages;\n      return pages.reduce(function (prev, curr) {\n        return prev.concat(curr.days);\n      }, []);\n    },\n    getPageTransition: function getPageTransition(oldPage, newPage) {\n      var transition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.transition;\n      if (transition === 'none') return transition;\n\n      if (transition === 'fade' || !transition && this.count > 1 || !pageIsValid(oldPage) || !pageIsValid(newPage)) {\n        return 'fade';\n      } // Moving to a previous page\n\n\n      var movePrev = pageIsBeforePage(newPage, oldPage); // Vertical slide\n\n      if (transition === 'slide-v') {\n        return movePrev ? 'slide-down' : 'slide-up';\n      } // Horizontal slide\n\n\n      return movePrev ? 'slide-right' : 'slide-left';\n    },\n    getPageForAttributes: function getPageForAttributes() {\n      var page = null;\n      var attr = this.store.pinAttr;\n\n      if (attr && attr.hasDates) {\n        var _attr$dates = _slicedToArray(attr.dates, 1),\n            date = _attr$dates[0];\n\n        date = date.start || date.date;\n        page = this.pageForDate(date);\n      }\n\n      return page;\n    },\n    buildPage: function buildPage(_ref6, ignoreCache) {\n      var _this8 = this;\n\n      var month = _ref6.month,\n          year = _ref6.year;\n      var key = \"\".concat(year.toString(), \"-\").concat(month.toString());\n      var page = this.pages.find(function (p) {\n        return p.key === key;\n      });\n\n      if (!page || ignoreCache) {\n        var date = new Date(year, month - 1, 15);\n        var monthComps = this.$locale.getMonthComps(month, year);\n        var prevMonthComps = this.$locale.getPrevMonthComps(month, year);\n        var nextMonthComps = this.$locale.getNextMonthComps(month, year);\n        page = {\n          key: key,\n          month: month,\n          year: year,\n          weeks: this.trimWeeks ? monthComps.weeks : 6,\n          title: this.$locale.format(date, this.$locale.masks.title),\n          shortMonthLabel: this.$locale.format(date, 'MMM'),\n          monthLabel: this.$locale.format(date, 'MMMM'),\n          shortYearLabel: year.toString().substring(2),\n          yearLabel: year.toString(),\n          monthComps: monthComps,\n          prevMonthComps: prevMonthComps,\n          nextMonthComps: nextMonthComps,\n          canMove: function canMove(pg) {\n            return _this8.canMove(pg);\n          },\n          move: function move(pg) {\n            return _this8.move(pg);\n          },\n          moveThisMonth: function moveThisMonth() {\n            return _this8.moveThisMonth();\n          },\n          movePrevMonth: function movePrevMonth() {\n            return _this8.move(prevMonthComps);\n          },\n          moveNextMonth: function moveNextMonth() {\n            return _this8.move(nextMonthComps);\n          },\n          refresh: true\n        }; // Assign day info\n\n        page.days = this.$locale.getCalendarDays(page);\n      }\n\n      return page;\n    },\n    initStore: function initStore() {\n      // Create a new attribute store\n      this.store = new AttributeStore(this.$theme, this.$locale, this.attributes); // Refresh attributes for existing pages\n\n      this.refreshAttrs(this.pages, this.store.list, [], true);\n    },\n    refreshAttrs: function refreshAttrs() {\n      var pages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var adds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var deletes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var reset = arguments.length > 3 ? arguments[3] : undefined;\n      if (!arrayHasItems(pages)) return; // For each page...\n\n      pages.forEach(function (p) {\n        // For each day...\n        p.days.forEach(function (d) {\n          var shouldRefresh = false;\n          var map = {}; // If resetting...\n\n          if (reset) {\n            shouldRefresh = true;\n          } else if (hasAny(d.attributesMap, deletes)) {\n            // Delete attributes from the delete list\n            map = omit_1(d.attributesMap, deletes); // Flag day for refresh\n\n            shouldRefresh = true;\n          } else {\n            // Get the existing attributes\n            map = d.attributesMap || {};\n          } // For each attribute to add...\n\n\n          adds.forEach(function (attr) {\n            // Add it if it includes the current day\n            var targetDate = attr.intersectsDay(d);\n\n            if (targetDate) {\n              var newAttr = _objectSpread2(_objectSpread2({}, attr), {}, {\n                targetDate: targetDate\n              });\n\n              map[attr.key] = newAttr; // Flag day for refresh\n\n              shouldRefresh = true;\n            }\n          }); // Reassign day attributes\n\n          if (shouldRefresh) {\n            d.attributesMap = map;\n            d.shouldRefresh = true;\n          }\n        });\n      });\n    },\n    handleKeydown: function handleKeydown(e) {\n      var day = this.lastFocusedDay;\n\n      if (day != null) {\n        day.event = e;\n        this.handleDayKeydown(day);\n      }\n    },\n    handleDayKeydown: function handleDayKeydown(day) {\n      var dateFromTime = day.dateFromTime,\n          event = day.event; // Set to noon to offset any daylight savings time offset\n\n      var date = dateFromTime(12);\n      var newDate = null;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          {\n            // Move to previous day\n            newDate = addDays(date, -1);\n            break;\n          }\n\n        case 'ArrowRight':\n          {\n            // Move to next day\n            newDate = addDays(date, 1);\n            break;\n          }\n\n        case 'ArrowUp':\n          {\n            // Move to previous week\n            newDate = addDays(date, -7);\n            break;\n          }\n\n        case 'ArrowDown':\n          {\n            // Move to next week\n            newDate = addDays(date, 7);\n            break;\n          }\n\n        case 'Home':\n          {\n            // Move to first weekday position\n            newDate = addDays(date, -day.weekdayPosition + 1);\n            break;\n          }\n\n        case 'End':\n          {\n            // Move to last weekday position\n            newDate = addDays(date, day.weekdayPositionFromEnd);\n            break;\n          }\n\n        case 'PageUp':\n          {\n            if (event.altKey) {\n              // Move to previous year w/ Alt/Option key\n              newDate = addYears(date, -1);\n            } else {\n              // Move to previous month\n              newDate = addMonths(date, -1);\n            }\n\n            break;\n          }\n\n        case 'PageDown':\n          {\n            if (event.altKey) {\n              // Move to next year w/ Alt/Option key\n              newDate = addYears(date, 1);\n            } else {\n              // Move to next month\n              newDate = addMonths(date, 1);\n            }\n\n            break;\n          }\n      }\n\n      if (newDate) {\n        event.preventDefault();\n        this.focusDate(newDate).catch();\n      }\n    }\n  }\n};\nvar css_248z = \".vc-container {\\n  --white: #ffffff;\\n  --black: #000000;\\n\\n  --gray-100: #f7fafc;\\n  --gray-200: #edf2f7;\\n  --gray-300: #e2e8f0;\\n  --gray-400: #cbd5e0;\\n  --gray-500: #a0aec0;\\n  --gray-600: #718096;\\n  --gray-700: #4a5568;\\n  --gray-800: #2d3748;\\n  --gray-900: #1a202c;\\n\\n  --red-100: #fff5f5;\\n  --red-200: #fed7d7;\\n  --red-300: #feb2b2;\\n  --red-400: #fc8181;\\n  --red-500: #f56565;\\n  --red-600: #e53e3e;\\n  --red-700: #c53030;\\n  --red-800: #9b2c2c;\\n  --red-900: #742a2a;\\n\\n  --orange-100: #fffaf0;\\n  --orange-200: #feebc8;\\n  --orange-300: #fbd38d;\\n  --orange-400: #f6ad55;\\n  --orange-500: #ed8936;\\n  --orange-600: #dd6b20;\\n  --orange-700: #c05621;\\n  --orange-800: #9c4221;\\n  --orange-900: #7b341e;\\n\\n  --yellow-100: #fffff0;\\n  --yellow-200: #fefcbf;\\n  --yellow-300: #faf089;\\n  --yellow-400: #f6e05e;\\n  --yellow-500: #ecc94b;\\n  --yellow-600: #d69e2e;\\n  --yellow-700: #b7791f;\\n  --yellow-800: #975a16;\\n  --yellow-900: #744210;\\n\\n  --green-100: #f0fff4;\\n  --green-200: #c6f6d5;\\n  --green-300: #9ae6b4;\\n  --green-400: #68d391;\\n  --green-500: #48bb78;\\n  --green-600: #38a169;\\n  --green-700: #2f855a;\\n  --green-800: #276749;\\n  --green-900: #22543d;\\n\\n  --teal-100: #e6fffa;\\n  --teal-200: #b2f5ea;\\n  --teal-300: #81e6d9;\\n  --teal-400: #4fd1c5;\\n  --teal-500: #38b2ac;\\n  --teal-600: #319795;\\n  --teal-700: #2c7a7b;\\n  --teal-800: #285e61;\\n  --teal-900: #234e52;\\n\\n  --blue-100: #ebf8ff;\\n  --blue-200: #bee3f8;\\n  --blue-300: #90cdf4;\\n  --blue-400: #63b3ed;\\n  --blue-500: #4299e1;\\n  --blue-600: #3182ce;\\n  --blue-700: #2b6cb0;\\n  --blue-800: #2c5282;\\n  --blue-900: #2a4365;\\n\\n  --indigo-100: #ebf4ff;\\n  --indigo-200: #c3dafe;\\n  --indigo-300: #a3bffa;\\n  --indigo-400: #7f9cf5;\\n  --indigo-500: #667eea;\\n  --indigo-600: #5a67d8;\\n  --indigo-700: #4c51bf;\\n  --indigo-800: #434190;\\n  --indigo-900: #3c366b;\\n\\n  --purple-100: #faf5ff;\\n  --purple-200: #e9d8fd;\\n  --purple-300: #d6bcfa;\\n  --purple-400: #b794f4;\\n  --purple-500: #9f7aea;\\n  --purple-600: #805ad5;\\n  --purple-700: #6b46c1;\\n  --purple-800: #553c9a;\\n  --purple-900: #44337a;\\n\\n  --pink-100: #fff5f7;\\n  --pink-200: #fed7e2;\\n  --pink-300: #fbb6ce;\\n  --pink-400: #f687b3;\\n  --pink-500: #ed64a6;\\n  --pink-600: #d53f8c;\\n  --pink-700: #b83280;\\n  --pink-800: #97266d;\\n  --pink-900: #702459;\\n}\\n.vc-container.vc-red {\\n    --accent-100: var(--red-100);\\n    --accent-200: var(--red-200);\\n    --accent-300: var(--red-300);\\n    --accent-400: var(--red-400);\\n    --accent-500: var(--red-500);\\n    --accent-600: var(--red-600);\\n    --accent-700: var(--red-700);\\n    --accent-800: var(--red-800);\\n    --accent-900: var(--red-900);\\n}\\n.vc-container.vc-orange {\\n    --accent-100: var(--orange-100);\\n    --accent-200: var(--orange-200);\\n    --accent-300: var(--orange-300);\\n    --accent-400: var(--orange-400);\\n    --accent-500: var(--orange-500);\\n    --accent-600: var(--orange-600);\\n    --accent-700: var(--orange-700);\\n    --accent-800: var(--orange-800);\\n    --accent-900: var(--orange-900);\\n}\\n.vc-container.vc-yellow {\\n    --accent-100: var(--yellow-100);\\n    --accent-200: var(--yellow-200);\\n    --accent-300: var(--yellow-300);\\n    --accent-400: var(--yellow-400);\\n    --accent-500: var(--yellow-500);\\n    --accent-600: var(--yellow-600);\\n    --accent-700: var(--yellow-700);\\n    --accent-800: var(--yellow-800);\\n    --accent-900: var(--yellow-900);\\n}\\n.vc-container.vc-green {\\n    --accent-100: var(--green-100);\\n    --accent-200: var(--green-200);\\n    --accent-300: var(--green-300);\\n    --accent-400: var(--green-400);\\n    --accent-500: var(--green-500);\\n    --accent-600: var(--green-600);\\n    --accent-700: var(--green-700);\\n    --accent-800: var(--green-800);\\n    --accent-900: var(--green-900);\\n}\\n.vc-container.vc-teal {\\n    --accent-100: var(--teal-100);\\n    --accent-200: var(--teal-200);\\n    --accent-300: var(--teal-300);\\n    --accent-400: var(--teal-400);\\n    --accent-500: var(--teal-500);\\n    --accent-600: var(--teal-600);\\n    --accent-700: var(--teal-700);\\n    --accent-800: var(--teal-800);\\n    --accent-900: var(--teal-900);\\n}\\n.vc-container.vc-blue {\\n    --accent-100: var(--blue-100);\\n    --accent-200: var(--blue-200);\\n    --accent-300: var(--blue-300);\\n    --accent-400: var(--blue-400);\\n    --accent-500: var(--blue-500);\\n    --accent-600: var(--blue-600);\\n    --accent-700: var(--blue-700);\\n    --accent-800: var(--blue-800);\\n    --accent-900: var(--blue-900);\\n}\\n.vc-container.vc-indigo {\\n    --accent-100: var(--indigo-100);\\n    --accent-200: var(--indigo-200);\\n    --accent-300: var(--indigo-300);\\n    --accent-400: var(--indigo-400);\\n    --accent-500: var(--indigo-500);\\n    --accent-600: var(--indigo-600);\\n    --accent-700: var(--indigo-700);\\n    --accent-800: var(--indigo-800);\\n    --accent-900: var(--indigo-900);\\n}\\n.vc-container.vc-purple {\\n    --accent-100: var(--purple-100);\\n    --accent-200: var(--purple-200);\\n    --accent-300: var(--purple-300);\\n    --accent-400: var(--purple-400);\\n    --accent-500: var(--purple-500);\\n    --accent-600: var(--purple-600);\\n    --accent-700: var(--purple-700);\\n    --accent-800: var(--purple-800);\\n    --accent-900: var(--purple-900);\\n}\\n.vc-container.vc-pink {\\n    --accent-100: var(--pink-100);\\n    --accent-200: var(--pink-200);\\n    --accent-300: var(--pink-300);\\n    --accent-400: var(--pink-400);\\n    --accent-500: var(--pink-500);\\n    --accent-600: var(--pink-600);\\n    --accent-700: var(--pink-700);\\n    --accent-800: var(--pink-800);\\n    --accent-900: var(--pink-900);\\n}\\n.vc-container {\\n\\n  --font-normal: 400;\\n  --font-medium: 500;\\n  --font-semibold: 600;\\n  --font-bold: 700;\\n\\n  --text-xs: 12px;\\n  --text-sm: 14px;\\n  --text-base: 16px;\\n  --text-lg: 18px;\\n\\n  --leading-snug: 1.375;\\n\\n  --rounded: 0.25rem;\\n  --rounded-lg: 0.5rem;\\n  --rounded-full: 9999px;\\n\\n  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1),\\n    0 4px 6px -2px rgba(0, 0, 0, 0.05);\\n  --shadow-inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06);\\n\\n  --slide-translate: 22px;\\n  --slide-duration: 0.15s;\\n  --slide-timing: ease;\\n\\n  --day-content-transition-time: 0.13s ease-in;\\n  --weeknumber-offset: -34px;\\n\\n  position: relative;\\n  display: -webkit-inline-flex;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  width: -webkit-max-content;\\n  width: max-content;\\n  height: -webkit-max-content;\\n  height: max-content;\\n  font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    'Helvetica', 'Arial', sans-serif;\\n  color: var(--gray-900);\\n  background-color: var(--white);\\n  border: 1px solid;\\n  border-color: var(--gray-400);\\n  border-radius: var(--rounded-lg);\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n.vc-container,\\n  .vc-container * {\\n    box-sizing: border-box;\\n}\\n.vc-container:focus, .vc-container *:focus {\\n      outline: none;\\n}\\n.vc-container button,\\n  .vc-container [role='button'] {\\n    cursor: pointer;\\n}\\n.vc-container.vc-is-expanded {\\n    min-width: 100%;\\n}\\n/* Hides double border within popovers */\\n.vc-container .vc-container {\\n    border: none;\\n}\\n.vc-container.vc-is-dark {\\n    color: var(--gray-100);\\n    background-color: var(--gray-900);\\n    border-color: var(--gray-700);\\n}\\n.vc-pane-container {\\n  width: 100%;\\n  position: relative;\\n}\\n.vc-pane-container.in-transition {\\n    overflow: hidden;\\n}\\n.vc-pane-layout {\\n  display: grid;\\n}\\n.vc-arrow {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  pointer-events: auto;\\n  color: var(--gray-600);\\n  border-width: 2px;\\n  border-style: solid;\\n  border-radius: var(--rounded);\\n  border-color: transparent;\\n}\\n.vc-arrow:hover {\\n    background: var(--gray-200);\\n}\\n.vc-arrow:focus {\\n    border-color: var(--gray-300);\\n}\\n.vc-arrow.is-disabled {\\n    opacity: 0.25;\\n    pointer-events: none;\\n    cursor: not-allowed;\\n}\\n.vc-day-popover-container {\\n  color: var(--white);\\n  background-color: var(--gray-800);\\n  border: 1px solid;\\n  border-color: var(--gray-700);\\n  border-radius: var(--rounded);\\n  font-size: var(--text-xs);\\n  font-weight: var(--font-medium);\\n  padding: 4px 8px;\\n  box-shadow: var(--shadow);\\n}\\n.vc-day-popover-header {\\n  font-size: var(--text-xs);\\n  color: var(--gray-300);\\n  font-weight: var(--font-semibold);\\n  text-align: center;\\n}\\n.vc-arrows-container {\\n  width: 100%;\\n  position: absolute;\\n  top: 0;\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-justify-content: space-between;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n  padding: 8px 10px;\\n  pointer-events: none;\\n}\\n.vc-arrows-container.title-left {\\n    -webkit-justify-content: flex-end;\\n        -ms-flex-pack: end;\\n            justify-content: flex-end;\\n}\\n.vc-arrows-container.title-right {\\n    -webkit-justify-content: flex-start;\\n        -ms-flex-pack: start;\\n            justify-content: flex-start;\\n}\\n.vc-is-dark .vc-arrow {\\n    color: var(--white);\\n}\\n.vc-is-dark .vc-arrow:hover {\\n      background: var(--gray-800);\\n}\\n.vc-is-dark .vc-arrow:focus {\\n      border-color: var(--gray-700);\\n}\\n.vc-is-dark .vc-day-popover-container {\\n    color: var(--gray-800);\\n    background-color: var(--white);\\n    border-color: var(--gray-100);\\n}\\n.vc-is-dark .vc-day-popover-header {\\n    color: var(--gray-700);\\n}\\n\";\nstyleInject(css_248z);\nexport { script as s };","map":null,"metadata":{},"sourceType":"module"}