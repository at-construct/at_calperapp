{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null\n};\nvar getters = {\n  events: function events(state) {\n    return state.events.map(function (event) {\n      return _objectSpread(_objectSpread({}, event), {}, {\n        start: new Date(event.start),\n        end: new Date(event.end)\n      });\n    });\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  }\n};\nvar actions = {\n  fetchParticipants: function fetchParticipants(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createParticipant: function createParticipant(_ref2, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createParticipant', participant);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants\"), participant);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendParticipant', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteParticipant: function deleteParticipant(_ref3, participantId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/\").concat(participantId));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateParticipant: function updateParticipant(_ref4, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/\").concat(participant.id), participant);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/participants.js"],"names":["axios","serializeEvent","apiUrl","state","events","event","isEditMode","clickedDate","getters","map","start","Date","end","mutations","setEvents","appendEvent","setEvent","removeEvent","filter","e","id","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","actions","fetchParticipants","commit","get","response","data","createParticipant","participant","console","log","post","deleteParticipant","participantId","updateParticipant","put","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null\n};\n\nconst getters = {\n\n  events: state => state.events.map(event => {\n    return {\n      ...event,\n      start: new Date(event.start),\n      end: new Date(event.end)\n    };\n  }),\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date)\n};\n\nconst actions = {\n  async fetchParticipants({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async createParticipant({ commit }, participant) {\n    console.log('createParticipant', participant);\n    const response = await axios.post(`${apiUrl}/participants`, participant);\n    commit('appendParticipant', response.data);\n  },\n  async deleteParticipant({ commit }, participantId) {\n    const response = await axios.delete(\n      `${apiUrl}/participants/${participantId}`\n    );\n    commit('removeParticipant', response.data);\n  },\n  async updateParticipant({ commit }, participant) {\n    const response = await axios.put(\n      `${apiUrl}/participants/${participant.id}`,\n      participant\n    );\n    commit('updateParticipant', response.data);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}