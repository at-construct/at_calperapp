{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VCalendar/VCalendarCategory.sass\"; // Mixins\n\nimport VCalendarDaily from './VCalendarDaily'; // Util\n\nimport { convertToUnit, getSlot } from '../../util/helpers';\nimport props from './util/props';\nimport { getParsedCategories } from './util/parser';\n/* @vue/component */\n\nexport default VCalendarDaily.extend({\n  name: 'v-calendar-category',\n  props: props.category,\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-calendar-daily': true,\n        'v-calendar-category': true\n      }, this.themeClasses);\n    },\n    parsedCategories: function parsedCategories() {\n      return getParsedCategories(this.categories, this.categoryText);\n    }\n  },\n  methods: {\n    genDayHeader: function genDayHeader(day, index) {\n      var _this = this;\n\n      var data = {\n        staticClass: 'v-calendar-category__columns'\n      };\n\n      var scope = _objectSpread(_objectSpread({\n        week: this.days\n      }, day), {}, {\n        index: index\n      });\n\n      var children = this.parsedCategories.map(function (category) {\n        return _this.genDayHeaderCategory(day, _this.getCategoryScope(scope, category));\n      });\n      return [this.$createElement('div', data, children)];\n    },\n    getCategoryScope: function getCategoryScope(scope, category) {\n      var cat = _typeof(category) === 'object' && category && category.categoryName === this.categoryForInvalid ? null : category;\n      return _objectSpread(_objectSpread({}, scope), {}, {\n        category: cat\n      });\n    },\n    genDayHeaderCategory: function genDayHeaderCategory(day, scope) {\n      var _this2 = this;\n\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-category__column-header',\n        on: this.getDefaultMouseEventHandlers(':day-category', function (e) {\n          return _this2.getCategoryScope(_this2.getSlotScope(day), scope.category);\n        })\n      }, [getSlot(this, 'category', scope) || this.genDayHeaderCategoryTitle(scope.category && scope.category.categoryName), getSlot(this, 'day-header', scope)]);\n    },\n    genDayHeaderCategoryTitle: function genDayHeaderCategoryTitle(categoryName) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-category__category'\n      }, categoryName === null ? this.categoryForInvalid : categoryName);\n    },\n    genDays: function genDays() {\n      var _this3 = this;\n\n      var days = [];\n      this.days.forEach(function (d) {\n        var day = new Array(_this3.parsedCategories.length || 1);\n        day.fill(d);\n        days.push.apply(days, _toConsumableArray(day.map(function (v, i) {\n          return _this3.genDay(v, 0, i);\n        })));\n      });\n      return days;\n    },\n    genDay: function genDay(day, index, categoryIndex) {\n      var _this4 = this;\n\n      var category = this.parsedCategories[categoryIndex];\n      return this.$createElement('div', {\n        key: day.date + '-' + categoryIndex,\n        staticClass: 'v-calendar-daily__day',\n        class: this.getRelativeClasses(day),\n        on: this.getDefaultMouseEventHandlers(':time', function (e) {\n          return _this4.getSlotScope(_this4.getTimestampAtEvent(e, day));\n        })\n      }, [].concat(_toConsumableArray(this.genDayIntervals(index, category)), _toConsumableArray(this.genDayBody(day, category))));\n    },\n    genDayIntervals: function genDayIntervals(index, category) {\n      var _this5 = this;\n\n      return this.intervals[index].map(function (v) {\n        return _this5.genDayInterval(v, category);\n      });\n    },\n    genDayInterval: function genDayInterval(interval, category) {\n      var _this6 = this;\n\n      var height = convertToUnit(this.intervalHeight);\n      var styler = this.intervalStyle || this.intervalStyleDefault;\n      var data = {\n        key: interval.time,\n        staticClass: 'v-calendar-daily__day-interval',\n        style: _objectSpread({\n          height: height\n        }, styler(_objectSpread(_objectSpread({}, interval), {}, {\n          category: category\n        })))\n      };\n      var children = getSlot(this, 'interval', function () {\n        return _this6.getCategoryScope(_this6.getSlotScope(interval), category);\n      });\n      return this.$createElement('div', data, children);\n    },\n    genDayBody: function genDayBody(day, category) {\n      var data = {\n        staticClass: 'v-calendar-category__columns'\n      };\n      var children = [this.genDayBodyCategory(day, category)];\n      return [this.$createElement('div', data, children)];\n    },\n    genDayBodyCategory: function genDayBodyCategory(day, category) {\n      var _this7 = this;\n\n      var data = {\n        staticClass: 'v-calendar-category__column',\n        on: this.getDefaultMouseEventHandlers(':time-category', function (e) {\n          return _this7.getCategoryScope(_this7.getSlotScope(_this7.getTimestampAtEvent(e, day)), category);\n        })\n      };\n      var children = getSlot(this, 'day-body', function () {\n        return _this7.getCategoryScope(_this7.getSlotScope(day), category);\n      });\n      return this.$createElement('div', data, children);\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}