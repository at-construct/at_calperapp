{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  data: function data() {\n    return {\n      selectedItem: null,\n      member1: [{\n        name: 'A子'\n      }],\n      selectedMember1: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters('users', ['users'])),\n  created: function created() {\n    this.fetchUsers();\n  },\n  methods: _objectSpread({}, mapActions('users', ['fetchUsers']))\n};","map":{"version":3,"sources":["GuestSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,CAFA;AAKA,MAAA,eAAA,EAAA;AALA,KAAA;AAAA,GAFA;AASA,EAAA,QAAA,oBACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CADA,CATA;AAYA,EAAA,OAZA,qBAYA;AACA,SAAA,UAAA;AACA,GAdA;AAeA,EAAA,OAAA,oBACA,UAAA,CAAA,OAAA,EAAA,CAAA,YAAA,CAAA,CADA;AAfA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          v-model=\"selectedMember1\"\n          :items=\"member1\"\n          small-chips\n          clearable\n          color=\"gray\"\n          label=\"参加者を追加\"\n          item-text=\"name\"\n          item-value=\"name\"\n          multiple\n        >\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'GuestSelectForm',\n  data: () => ({\n    selectedItem: null,\n    member1: [\n      { name: 'A子' },\n    ],\n    selectedMember1: []\n  }),\n  computed: {\n    ...mapGetters('users', ['users']),\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    ...mapActions('users', ['fetchUsers']),\n  },\n};\n</script>\n\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}