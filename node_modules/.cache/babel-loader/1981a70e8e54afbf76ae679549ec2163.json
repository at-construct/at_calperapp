{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'FacillitiesForm',\n  props: ['value'],\n  data: function data() {\n    return {\n      selectedUser: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('users', ['users'])), {}, {\n    filteredUsers: function filteredUsers() {\n      return this.users.filter(function (user) {\n        return user.name !== '6F会議室(ソファー)' && user.name !== '7Fテーブル';\n      });\n    }\n  }),\n  created: function created() {\n    console.log(this.value);\n  },\n  methods: {\n    onSelectionChange: function onSelectionChange(value) {\n      this.$emit('input', value);\n    },\n    filterUsers: function filterUsers(item, queryText, itemText) {\n      var hasValue = function hasValue(val) {\n        return val != null ? val : '';\n      };\n\n      var text = hasValue(itemText);\n      var query = hasValue(queryText);\n      return text.toString().toLowerCase().indexOf(query.toString().toLowerCase()) > -1;\n    }\n  }\n};","map":{"version":3,"sources":["FacillitiesForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CADA;AAEA,IAAA,aAFA,2BAEA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,IAAA,KAAA,aAAA,IAAA,IAAA,CAAA,IAAA,KAAA,QAAA;AAAA,OAAA,CAAA;AACA;AAJA,IARA;AAcA,EAAA,OAdA,qBAcA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,KAHA;AAIA,IAAA,WAJA,uBAIA,IAJA,EAIA,SAJA,EAIA,QAJA,EAIA;AACA,UAAA,QAAA,GAAA,SAAA,QAAA,CAAA,GAAA;AAAA,eAAA,GAAA,IAAA,IAAA,GAAA,GAAA,GAAA,EAAA;AAAA,OAAA;;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,QAAA,CAAA;AACA,UAAA,KAAA,GAAA,QAAA,CAAA,SAAA,CAAA;AACA,aAAA,IAAA,CAAA,QAAA,GACA,WADA,GAEA,OAFA,CAEA,KAAA,CAAA,QAAA,GAAA,WAAA,EAFA,IAEA,CAAA,CAFA;AAGA;AAXA;AAjBA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"設備を選択\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :value=\"value\"\n          :items=\"filteredUsers\"\n          @input=\"$emit('input', $event)\"\n          :filter=\"(item, queryText, itemText) => filterUsers(item, queryText, itemText)\"\n          :multiple=\"false\"\n        >\n          <template v-slot:item=\"{ item }\">\n            <div class=\"my-2\" :class=\"{ 'text-lg': $vuetify.breakpoint.smAndDown, 'text-xl': $vuetify.breakpoint.mdAndUp }\">{{ item.name }}</div>\n          </template>\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'FacillitiesForm',\n  props: ['value'],\n  data() {\n    return {\n      selectedUser: null,\n    };\n  },\n  computed: {\n    ...mapGetters('users', ['users']),\n    filteredUsers() {\n      return this.users.filter(user => user.name !== '6F会議室(ソファー)' && user.name !== '7Fテーブル');\n    },\n  },\n  created() {\n    console.log(this.value);\n  },\n  methods: {\n    onSelectionChange(value) {\n      this.$emit('input', value);\n    },\n    filterUsers(item, queryText, itemText) {\n      const hasValue = val => val != null ? val : '';\n      const text = hasValue(itemText);\n      const query = hasValue(queryText);\n      return text.toString()\n        .toLowerCase()\n        .indexOf(query.toString().toLowerCase()) > -1;\n    },\n  },\n};\n</script>"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}