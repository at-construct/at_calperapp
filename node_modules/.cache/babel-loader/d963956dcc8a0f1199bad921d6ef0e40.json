{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\nexport default {\n  name: 'CalendarList',\n  components: {\n    CalendarFormDialog: CalendarFormDialog\n  },\n  data: function data() {\n    return {\n      selectedItem: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('calendars', ['calendars', 'calendar'])), mapGetters('groups', ['groups'])),\n  created: function created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['fetchCalendars', 'updateCalendar', 'deleteCalendar', 'setCalendar'])), mapActions('groups', ['fetchGroups', 'updateGroup', 'deleteGroup', 'setGroup'])), {}, {\n    initCalendar: function initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.setCalendar(null);\n    },\n    edit: function edit(calendar) {\n      this.setCalendar(calendar);\n      this.setGroup(group);\n    },\n    del: function del(calendar) {\n      this.deleteCalendar(calendar.id);\n      this.deleteGroup(group.id);\n    },\n    toggleVisibility: function toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    }\n  })\n};","map":{"version":3,"sources":["CalendarList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAAA,GAHA;AAMA,EAAA,QAAA,kCACA,UAAA,CAAA,WAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,CAAA,CAFA,CANA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AACA,GAbA;AAcA,EAAA,OAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,gBAHA,EAIA,aAJA,CAAA,CADA,GAOA,UAAA,CAAA,QAAA,EAAA,CACA,aADA,EAEA,aAFA,EAGA,aAHA,EAIA,UAJA,CAAA,CAPA;AAaA,IAAA,YAbA,0BAaA;AACA,WAAA,WAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAlBA;AAmBA,IAAA,WAnBA,yBAmBA;AACA,WAAA,WAAA,CAAA,IAAA;AACA,KArBA;AAsBA,IAAA,IAtBA,gBAsBA,QAtBA,EAsBA;AACA,WAAA,WAAA,CAAA,QAAA;AACA,WAAA,QAAA,CAAA,KAAA;AACA,KAzBA;AA0BA,IAAA,GA1BA,eA0BA,QA1BA,EA0BA;AACA,WAAA,cAAA,CAAA,QAAA,CAAA,EAAA;AACA,WAAA,WAAA,CAAA,KAAA,CAAA,EAAA;AACA,KA7BA;AA8BA,IAAA,gBA9BA,4BA8BA,QA9BA,EA8BA;AACA,WAAA,cAAA,CAAA,QAAA;AACA;AAhCA;AAdA,CAAA","sourcesContent":["<template>\n  <v-list dense>\n    <v-list-item>\n      <v-list-item-content>\n        <v-subheader>カレンダー追加</v-subheader>\n      </v-list-item-content>\n      <v-list-item-action>\n        <v-btn icon @click=\"initCalendar\">\n          <v-icon size=\"16px\">mdi-plus</v-icon>\n        </v-btn>\n      </v-list-item-action>\n    </v-list-item>\n\n    <v-list-item-group :value=\"selectedItem\">\n      <v-list-item v-for=\"calendar in calendars\" :key=\"calendar.id\">\n        <v-list-item-content class=\"pa-1\">\n          <v-checkbox\n            dense\n            v-model=\"calendar.visibility\"\n            :color=\"calendar.color\"\n            :label=\"calendar.name\"\n            @click=\"toggleVisibility(calendar)\"\n            class=\"pb-2\"\n            hide-details=\"true\"\n          ></v-checkbox>\n        </v-list-item-content>\n        <v-list-item-action class=\"ma-0\">\n          <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn icon v-on=\"on\">\n                <v-icon size=\"12px\">mdi-dots-vertical</v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n              <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n            </v-list>\n          </v-menu>\n        </v-list-item-action>\n      </v-list-item>\n    </v-list-item-group>\n    〜〜〜〜〜〜\n\n<v-list-item-group :value=\"selectedItem\">\n  <v-list-group v-for=\"calendar in calendars\" :key=\"calendar.id\">\n      <template v-slot:activator>\n        <!-- グループ名を表示する -->\n        <v-list-item-title>{{ calendar.name }}</v-list-item-title>\n      </template>\n    <v-list-item-group>\n      <v-list-item v-for=\"group in groups\" :key=\"group.id\">\n        <v-list-item-content>\n          <v-list-item-title>{{ group.user.name }}</v-list-item-title>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list-item-group>\n  </v-list-group>\n</v-list-item-group>\n\n    〜〜〜〜〜〜\n\n\n\n    〜〜〜〜〜〜\n\n    <v-dialog\n      :value=\"calendar !== null\"\n      @click:outside=\"closeDialog\"\n      width=\"600\"\n    >\n      <CalendarFormDialog v-if=\"calendar !== null\" />\n    </v-dialog>\n  </v-list>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\n\nexport default {\n  name: 'CalendarList',\n  components: { CalendarFormDialog },\n  data: () => ({\n    selectedItem: null\n  }),\n  computed: {\n    ...mapGetters('calendars', ['calendars', 'calendar']),\n    ...mapGetters('groups', ['groups']),\n  },\n  created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'fetchCalendars',\n      'updateCalendar',\n      'deleteCalendar',\n      'setCalendar'\n    ]),\n    ...mapActions('groups', [\n      'fetchGroups',\n      'updateGroup',\n      'deleteGroup',\n      'setGroup'\n    ]),\n    initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog() {\n      this.setCalendar(null);\n    },\n    edit(calendar) {\n      this.setCalendar(calendar);\n      this.setGroup(group);\n    },\n    del(calendar) {\n      this.deleteCalendar(calendar.id);\n      this.deleteGroup(group.id);\n    },\n    toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}