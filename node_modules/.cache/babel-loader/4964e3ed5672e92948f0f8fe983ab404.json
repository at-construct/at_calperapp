{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format } from 'date-fns';\nimport { mapActions, mapGetters } from 'vuex';\nimport OtherCalendar from './OtherCalendar';\nexport default {\n  name: 'CalendarList',\n  components: {\n    OtherCalendar: OtherCalendar\n  },\n  data: function data() {\n    return {\n      selectedItem: [],\n      selectedGroups: [],\n      isCalendarDialogOpen: false,\n      // events:[],\n      value: format(new Date(), 'yyyy/MM/dd')\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapGetters('calendars', ['calendars'])), mapGetters('groups', ['groups'])), mapGetters('events', ['clickedDate'])), {}, {\n    filteredCalendars: function filteredCalendars() {\n      return this.calendars.filter(function (calendar) {\n        return calendar.name !== '会議室' && calendar.name !== '社用車' && calendar.name !== 'スタジオ';\n      });\n    },\n    facilityCalendar: function facilityCalendar() {\n      return this.calendars.filter(function (calendar) {\n        return calendar.name === '会議室' || calendar.name === '社用車' || calendar.name === 'スタジオ';\n      });\n    },\n    title: function title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    }\n  }),\n  created: function created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['fetchCalendars', 'deleteCalendar', 'setCalendar'])), mapActions('groups', ['fetchGroups'])), {}, {\n    initCalendar: function initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    openCalendarDialog: function openCalendarDialog(group) {\n      this.selectedCalendar = group.calendar;\n      this.isCalendarDialogOpen = true;\n    },\n    showDayEvents: function showDayEvents(_ref) {\n      var date = _ref.date;\n      date = date.replace(/-/g, '/');\n      this.setClickedDate(date);\n    }\n  })\n};","map":{"version":3,"sources":["CalendarList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2HA,SAAA,MAAA,QAAA,UAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA,EAFA;AAGA,MAAA,oBAAA,EAAA,KAHA;AAIA;AACA,MAAA,KAAA,EAAA,MAAA,CAAA,IAAA,IAAA,EAAA,EAAA,YAAA;AALA,KAAA;AAOA,GAXA;AAYA,EAAA,QAAA,8DACA,UAAA,CAAA,WAAA,EAAA,CAAA,WAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,CAAA,CAFA,GAGA,UAAA,CAAA,QAAA,EAAA,CAAA,aAAA,CAAA,CAHA;AAIA,IAAA,iBAJA,+BAIA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,KATA;AAUA,IAAA,KAVA,mBAUA;AACA,aAAA,MAAA,CAAA,IAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA,UAAA,CAAA;AACA;AAZA,IAZA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,aAHA,CAAA,CADA,GAMA,UAAA,CAAA,QAAA,EAAA,CACA,aADA,CAAA,CANA;AASA,IAAA,YATA,0BASA;AACA,WAAA,WAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAdA;AAeA,IAAA,kBAfA,8BAeA,KAfA,EAeA;AACA,WAAA,gBAAA,GAAA,KAAA,CAAA,QAAA;AACA,WAAA,oBAAA,GAAA,IAAA;AACA,KAlBA;AAoBA,IAAA,aApBA,+BAoBA;AAAA,UAAA,IAAA,QAAA,IAAA;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,WAAA,cAAA,CAAA,IAAA;AACA;AAvBA;AA9BA,CAAA","sourcesContent":["<template>\n  <v-list dense>\n    <hr>\n    <!-- 設備以外のカレンダーリストを表示する -->\n    <v-list-item-group :value=\"selectedItem\">\n      <v-list-group v-for=\"calendar in filteredCalendars\" :key=\"calendar.id\" class=\"mb-3\">\n        <template v-slot:activator>\n          <v-list-item-title style=\"overflow: visible;\">\n            <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n              <span style=\"font-size: 16px;\">{{ calendar.name }}</span>\n            <!-- <v-btn icon @click=\"edit(calendar)\">\n              <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn icon v-on=\"on\">\n                    <v-icon size=\"12px\">mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n                  <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n                </v-list>\n              </v-menu>\n            </v-btn> -->\n          </v-list-item-title>\n        </template>\n\n        <v-list-item-group>\n          <v-list-item v-for=\"group in groups.filter(group => group.calendar.id === calendar.id)\" :key=\"group.id\">\n            <v-list-item-content class=\"py-0\">\n              <div class=\"d-flex align-center justify-space-between\">\n                <span :color=\"calendar.color\" class=\"pb-2\">\n                  {{ group.user.name }}\n                </span>\n                <v-icon \n                  small \n                  @click=\"openCalendarDialog(group)\" \n                >\n                  mdi-calendar\n                </v-icon>\n              </div>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list-item-group>\n\n      </v-list-group>\n    </v-list-item-group>\n\n    <hr>\n    <!-- 設備カレンダーを表示する -->\n    <v-list-group :value=\"false\" v-for=\"calendar in facilityCalendar\" :key=\"calendar.id\">\n      <template v-slot:activator>\n        <v-list-item-title style=\"overflow: visible;\">\n          <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n          <span style=\"font-size: 16px;\">{{ calendar.name }}</span>\n          <!-- <v-btn icon @click=\"edit(calendar)\">\n            <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n              <template v-slot:activator=\"{ on }\">\n                <v-btn icon v-on=\"on\">\n                  <v-icon size=\"12px\">mdi-pencil</v-icon>\n                </v-btn>\n              </template>\n              <v-list>\n                <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n                <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n              </v-list>\n            </v-menu>\n          </v-btn> -->\n        </v-list-item-title>\n      </template>\n\n      <v-list-item-group>\n        <v-list-item v-for=\"group in groups.filter(group => group.calendar.id === calendar.id)\" :key=\"group.id\">\n          <v-list-item-content class=\"py-0\">\n            <div class=\"d-flex align-center justify-space-between\">\n              <span :color=\"calendar.color\" class=\"pb-2\">\n                {{ group.user.name }}\n              </span>\n              <v-icon \n                small \n                @click=\"openCalendarDialog(group)\" \n              >\n                mdi-calendar\n              </v-icon>\n            </div>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list-item-group>\n    </v-list-group>\n\n    <v-list-item>\n      <v-list-item-content>\n        <v-subheader style=\"font-size: 14px;\">リストを追加</v-subheader>\n      </v-list-item-content>\n      <v-list-item-action>\n        <v-btn icon @click=\"initCalendar\">\n          <v-icon size=\"16px\">mdi-plus</v-icon>\n        </v-btn>\n      </v-list-item-action>\n    </v-list-item>\n\n    <!-- OtherCalendarコンポーネントを呼び出す -->\n    <v-dialog\n      v-model=\"isCalendarDialogOpen\"\n      max-width=\"600px\"\n  max-height=\"600px\"\n    >\n      <OtherCalendar @close=\"isCalendarDialogOpen = false\" />\n    </v-dialog>\n\n    <!-- 日付クリック時のイベント一覧ダイアログ -->\n    <v-dialog\n      :value=\"clickedDate !== null\"\n      persistent\n      max-width=\"800\"\n      max-high=\"800\"\n    >\n      <DayEventList />\n    </v-dialog>\n  </v-list>\n</template>\n\n\n<script>\nimport { format } from 'date-fns';\nimport { mapActions, mapGetters } from 'vuex';\nimport OtherCalendar from './OtherCalendar';\n\nexport default {\n  name: 'CalendarList',\n  components: { OtherCalendar },\n  data() {\n    return {\n      selectedItem: [],\n      selectedGroups: [],\n      isCalendarDialogOpen: false,\n      // events:[],\n      value: format(new Date(), 'yyyy/MM/dd'),\n    }\n  },\n  computed: {\n    ...mapGetters('calendars', ['calendars']),\n    ...mapGetters('groups', ['groups']),\n    ...mapGetters('events', ['clickedDate']),\n    filteredCalendars() {\n      return this.calendars.filter(calendar => calendar.name !== '会議室' && calendar.name !== '社用車' && calendar.name !== 'スタジオ');\n    },\n    facilityCalendar() {\n      return this.calendars.filter(calendar => calendar.name === '会議室' || calendar.name === '社用車' || calendar.name === 'スタジオ');\n    },\n    title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    },\n  },\n  created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'fetchCalendars',\n      'deleteCalendar',\n      'setCalendar'\n    ]),\n    ...mapActions('groups', [\n      'fetchGroups',\n    ]),\n    initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    openCalendarDialog(group) {\n      this.selectedCalendar = group.calendar;\n      this.isCalendarDialogOpen = true;\n    },\n\n    showDayEvents({ date }) {\n      date = date.replace(/-/g, '/');\n      this.setClickedDate(date);\n    },\n  }\n};\n</script>\n\n"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}