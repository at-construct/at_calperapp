{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// Extensions\nimport { Service } from '../service';\nexport var Application = /*#__PURE__*/function (_Service) {\n  _inherits(Application, _Service);\n\n  var _super = _createSuper(Application);\n\n  function Application() {\n    var _this;\n\n    _classCallCheck(this, Application);\n\n    _this = _super.apply(this, arguments);\n    _this.bar = 0;\n    _this.top = 0;\n    _this.left = 0;\n    _this.insetFooter = 0;\n    _this.right = 0;\n    _this.bottom = 0;\n    _this.footer = 0;\n    _this.application = {\n      bar: {},\n      top: {},\n      left: {},\n      insetFooter: {},\n      right: {},\n      bottom: {},\n      footer: {}\n    };\n    return _this;\n  }\n\n  _createClass(Application, [{\n    key: \"register\",\n    value: function register(uid, location, size) {\n      this.application[location] = _defineProperty({}, uid, size);\n      this.update(location);\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(uid, location) {\n      if (this.application[location][uid] == null) return;\n      delete this.application[location][uid];\n      this.update(location);\n    }\n  }, {\n    key: \"update\",\n    value: function update(location) {\n      this[location] = Object.values(this.application[location]).reduce(function (acc, cur) {\n        return acc + cur;\n      }, 0);\n    }\n  }]);\n\n  return Application;\n}(Service);\nApplication.property = 'application';","map":null,"metadata":{},"sourceType":"module"}