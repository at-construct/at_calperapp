{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { format, set, startOfDay, endOfDay } from 'date-fns';\nexport var serializeEvent = function serializeEvent(event) {\n  if (event === null) {\n    return null;\n  }\n\n  ;\n  var start = new Date(event.start);\n  var end = new Date(event.end); // 時間表示を非表示にするため、日付の範囲を設定する\n\n  if (!event.timed) {\n    start = startOfDay(start);\n    end = endOfDay(end);\n  }\n\n  ;\n  return _objectSpread(_objectSpread({}, event), {}, {\n    start: start,\n    end: end,\n    startDate: format(start, 'yyyy/MM/dd'),\n    startTime: format(start, 'HH:mm'),\n    endDate: format(end, 'yyyy/MM/dd'),\n    endTime: format(end, 'HH:mm'),\n    color: event.color || '#2196F3'\n  });\n};\nexport var serializeParticipantEvent = function serializeParticipantEvent(participant) {\n  if (participant === null) {\n    return null;\n  }\n\n  var start = new Date(participant.event.start);\n  var end = new Date(participant.event.end); // 時間表示を非表示にするため、日付の範囲を設定する\n\n  if (!participant.timed) {\n    start = startOfDay(start);\n    end = endOfDay(end);\n  }\n\n  return _objectSpread(_objectSpread({}, participant), {}, {\n    start: start,\n    end: end,\n    startDate: format(start, 'yyyy/MM/dd'),\n    startTime: format(start, 'HH:mm'),\n    endDate: format(end, 'yyyy/MM/dd'),\n    endTime: format(end, 'HH:mm'),\n    color: participant.color || '#6495ed'\n  });\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/functions/serializers.js"],"names":["format","set","startOfDay","endOfDay","serializeEvent","event","start","Date","end","timed","startDate","startTime","endDate","endTime","color","serializeParticipantEvent","participant"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkCC,QAAlC,QAAkD,UAAlD;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AACrC,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;;AAAA;AAED,MAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,KAAK,CAACC,KAAf,CAAZ;AACA,MAAIE,GAAG,GAAG,IAAID,IAAJ,CAASF,KAAK,CAACG,GAAf,CAAV,CANqC,CAQrC;;AACA,MAAI,CAACH,KAAK,CAACI,KAAX,EAAkB;AAChBH,IAAAA,KAAK,GAAGJ,UAAU,CAACI,KAAD,CAAlB;AACAE,IAAAA,GAAG,GAAGL,QAAQ,CAACK,GAAD,CAAd;AACD;;AAAA;AAED,yCACKH,KADL;AAEEC,IAAAA,KAAK,EAALA,KAFF;AAGEE,IAAAA,GAAG,EAAHA,GAHF;AAIEE,IAAAA,SAAS,EAAEV,MAAM,CAACM,KAAD,EAAQ,YAAR,CAJnB;AAKEK,IAAAA,SAAS,EAAEX,MAAM,CAACM,KAAD,EAAQ,OAAR,CALnB;AAMEM,IAAAA,OAAO,EAAEZ,MAAM,CAACQ,GAAD,EAAM,YAAN,CANjB;AAOEK,IAAAA,OAAO,EAAEb,MAAM,CAACQ,GAAD,EAAM,OAAN,CAPjB;AAQEM,IAAAA,KAAK,EAAET,KAAK,CAACS,KAAN,IAAe;AARxB;AAUD,CAxBM;AA0BP,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,WAAW,EAAI;AACtD,MAAIA,WAAW,KAAK,IAApB,EAA0B;AACxB,WAAO,IAAP;AACD;;AAED,MAAIV,KAAK,GAAG,IAAIC,IAAJ,CAASS,WAAW,CAACX,KAAZ,CAAkBC,KAA3B,CAAZ;AACA,MAAIE,GAAG,GAAG,IAAID,IAAJ,CAASS,WAAW,CAACX,KAAZ,CAAkBG,GAA3B,CAAV,CANsD,CAQtD;;AACA,MAAI,CAACQ,WAAW,CAACP,KAAjB,EAAwB;AACtBH,IAAAA,KAAK,GAAGJ,UAAU,CAACI,KAAD,CAAlB;AACAE,IAAAA,GAAG,GAAGL,QAAQ,CAACK,GAAD,CAAd;AACD;;AAED,yCACKQ,WADL;AAEEV,IAAAA,KAAK,EAALA,KAFF;AAGEE,IAAAA,GAAG,EAAHA,GAHF;AAIEE,IAAAA,SAAS,EAAEV,MAAM,CAACM,KAAD,EAAQ,YAAR,CAJnB;AAKEK,IAAAA,SAAS,EAAEX,MAAM,CAACM,KAAD,EAAQ,OAAR,CALnB;AAMEM,IAAAA,OAAO,EAAEZ,MAAM,CAACQ,GAAD,EAAM,YAAN,CANjB;AAOEK,IAAAA,OAAO,EAAEb,MAAM,CAACQ,GAAD,EAAM,OAAN,CAPjB;AAQEM,IAAAA,KAAK,EAAEE,WAAW,CAACF,KAAZ,IAAqB;AAR9B;AAUD,CAxBM","sourcesContent":["import { format, set, startOfDay, endOfDay } from 'date-fns';\n\nexport const serializeEvent = event => {\n  if (event === null) {\n    return null;\n  };\n\n  let start = new Date(event.start);\n  let end = new Date(event.end);\n  \n  // 時間表示を非表示にするため、日付の範囲を設定する\n  if (!event.timed) {\n    start = startOfDay(start);\n    end = endOfDay(end);\n  };\n\n  return {\n    ...event,\n    start,\n    end,\n    startDate: format(start, 'yyyy/MM/dd'),\n    startTime: format(start, 'HH:mm'),\n    endDate: format(end, 'yyyy/MM/dd'),\n    endTime: format(end, 'HH:mm'),\n    color: event.color || '#2196F3'\n  };\n};\n\nexport const serializeParticipantEvent = participant => {\n  if (participant === null) {\n    return null;\n  }\n\n  let start = new Date(participant.event.start);\n  let end = new Date(participant.event.end);\n  \n  // 時間表示を非表示にするため、日付の範囲を設定する\n  if (!participant.timed) {\n    start = startOfDay(start);\n    end = endOfDay(end);\n  }\n\n  return {\n    ...participant,\n    start,\n    end,\n    startDate: format(start, 'yyyy/MM/dd'),\n    startTime: format(start, 'HH:mm'),\n    endDate: format(end, 'yyyy/MM/dd'),\n    endTime: format(end, 'HH:mm'),\n    color: participant.color || '#6495ed'\n  };\n};\n"]},"metadata":{},"sourceType":"module"}