{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// Styles\nimport \"../../../src/components/VCalendar/VCalendarWeekly.sass\"; // Components\n\nimport VBtn from '../VBtn'; // Mixins\n\nimport CalendarBase from './mixins/calendar-base'; // Util\n\nimport { getSlot } from '../../util/helpers';\nimport { weekNumber } from '../../util/dateTimeUtils';\nimport props from './util/props';\nimport { createDayList, getDayIdentifier, createNativeLocaleFormatter } from './util/timestamp';\n/* @vue/component */\n\nexport default CalendarBase.extend({\n  name: 'v-calendar-weekly',\n  props: props.weeks,\n  computed: {\n    staticClass: function staticClass() {\n      return 'v-calendar-weekly';\n    },\n    classes: function classes() {\n      return this.themeClasses;\n    },\n    parsedMinWeeks: function parsedMinWeeks() {\n      return parseInt(this.minWeeks);\n    },\n    days: function days() {\n      var minDays = this.parsedMinWeeks * this.parsedWeekdays.length;\n      var start = this.getStartOfWeek(this.parsedStart);\n      var end = this.getEndOfWeek(this.parsedEnd);\n      return createDayList(start, end, this.times.today, this.weekdaySkips, Number.MAX_SAFE_INTEGER, minDays);\n    },\n    todayWeek: function todayWeek() {\n      var today = this.times.today;\n      var start = this.getStartOfWeek(today);\n      var end = this.getEndOfWeek(today);\n      return createDayList(start, end, today, this.weekdaySkips, this.parsedWeekdays.length, this.parsedWeekdays.length);\n    },\n    monthFormatter: function monthFormatter() {\n      if (this.monthFormat) {\n        return this.monthFormat;\n      }\n\n      var longOptions = {\n        timeZone: 'UTC',\n        month: 'long'\n      };\n      var shortOptions = {\n        timeZone: 'UTC',\n        month: 'short'\n      };\n      return createNativeLocaleFormatter(this.currentLocale, function (_tms, short) {\n        return short ? shortOptions : longOptions;\n      });\n    }\n  },\n  methods: {\n    isOutside: function isOutside(day) {\n      var dayIdentifier = getDayIdentifier(day);\n      return dayIdentifier < getDayIdentifier(this.parsedStart) || dayIdentifier > getDayIdentifier(this.parsedEnd);\n    },\n    genHead: function genHead() {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__head'\n      }, this.genHeadDays());\n    },\n    genHeadDays: function genHeadDays() {\n      var header = this.todayWeek.map(this.genHeadDay);\n\n      if (this.showWeek) {\n        header.unshift(this.$createElement('div', {\n          staticClass: 'v-calendar-weekly__head-weeknumber'\n        }));\n      }\n\n      return header;\n    },\n    genHeadDay: function genHeadDay(day, index) {\n      var outside = this.isOutside(this.days[index]);\n      var color = day.present ? this.color : undefined;\n      return this.$createElement('div', this.setTextColor(color, {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__head-weekday',\n        class: this.getRelativeClasses(day, outside)\n      }), this.weekdayFormatter(day, this.shortWeekdays));\n    },\n    genWeeks: function genWeeks() {\n      var days = this.days;\n      var weekDays = this.parsedWeekdays.length;\n      var weeks = [];\n\n      for (var i = 0; i < days.length; i += weekDays) {\n        weeks.push(this.genWeek(days.slice(i, i + weekDays), this.getWeekNumber(days[i])));\n      }\n\n      return weeks;\n    },\n    genWeek: function genWeek(week, weekNumber) {\n      var _this = this;\n\n      var weekNodes = week.map(function (day, index) {\n        return _this.genDay(day, index, week);\n      });\n\n      if (this.showWeek) {\n        weekNodes.unshift(this.genWeekNumber(weekNumber));\n      }\n\n      return this.$createElement('div', {\n        key: week[0].date,\n        staticClass: 'v-calendar-weekly__week'\n      }, weekNodes);\n    },\n    getWeekNumber: function getWeekNumber(determineDay) {\n      return weekNumber(determineDay.year, determineDay.month - 1, determineDay.day, this.parsedWeekdays[0], parseInt(this.localeFirstDayOfYear));\n    },\n    genWeekNumber: function genWeekNumber(weekNumber) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__weeknumber'\n      }, [this.$createElement('small', String(weekNumber))]);\n    },\n    genDay: function genDay(day, index, week) {\n      var outside = this.isOutside(day);\n      return this.$createElement('div', {\n        key: day.date,\n        staticClass: 'v-calendar-weekly__day',\n        class: this.getRelativeClasses(day, outside),\n        on: this.getDefaultMouseEventHandlers(':day', function (_e) {\n          return day;\n        })\n      }, [this.genDayLabel(day)].concat(_toConsumableArray(getSlot(this, 'day', function () {\n        return _objectSpread({\n          outside: outside,\n          index: index,\n          week: week\n        }, day);\n      }) || [])));\n    },\n    genDayLabel: function genDayLabel(day) {\n      return this.$createElement('div', {\n        staticClass: 'v-calendar-weekly__day-label'\n      }, getSlot(this, 'day-label', day) || [this.genDayLabelButton(day)]);\n    },\n    genDayLabelButton: function genDayLabelButton(day) {\n      var color = day.present ? this.color : 'transparent';\n      var hasMonth = day.day === 1 && this.showMonthOnFirst;\n      return this.$createElement(VBtn, {\n        props: {\n          color: color,\n          fab: true,\n          depressed: true,\n          small: true\n        },\n        on: this.getMouseEventHandlers({\n          'click:date': {\n            event: 'click',\n            stop: true\n          },\n          'contextmenu:date': {\n            event: 'contextmenu',\n            stop: true,\n            prevent: true,\n            result: false\n          }\n        }, function (_e) {\n          return day;\n        })\n      }, hasMonth ? this.monthFormatter(day, this.shortMonths) + ' ' + this.dayFormatter(day, false) : this.dayFormatter(day, false));\n    },\n    genDayMonth: function genDayMonth(day) {\n      var color = day.present ? this.color : undefined;\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-calendar-weekly__day-month'\n      }), getSlot(this, 'day-month', day) || this.monthFormatter(day, this.shortMonths));\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: this.staticClass,\n      class: this.classes,\n      on: {\n        dragstart: function dragstart(e) {\n          e.preventDefault();\n        }\n      }\n    }, [!this.hideHeader ? this.genHead() : ''].concat(_toConsumableArray(this.genWeeks())));\n  }\n});","map":null,"metadata":{},"sourceType":"module"}