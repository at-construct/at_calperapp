{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from 'axios';\nimport { serializeParticipant } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null\n};\nvar getters = {\n  participants: function participants(state) {\n    return state.events.filter(function (event) {\n      return event;\n    }).map(function (event) {\n      return serializeEvent(event);\n    });\n  },\n  event: function event(state) {\n    return serializeEvent(state.event);\n  },\n  dayEvents: function dayEvents(state) {\n    return state.events.map(function (event) {\n      return serializeEvent(event);\n    }).filter(function (event) {\n      return isDateWithinInterval(state.clickedDate, event.startDate, event.endDate);\n    }).sort(compareDates);\n  },\n  isEditMode: function isEditMode(state) {\n    return state.isEditMode;\n  },\n  clickedDate: function clickedDate(state) {\n    return state.clickedDate;\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  }\n};\nvar actions = {\n  fetchParticipants: function fetchParticipants(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createParticipant: function createParticipant(_ref2, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createParticipant', participant);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants\"), participant);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendParticipant', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteParticipant: function deleteParticipant(_ref3, participantId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/\").concat(participantId));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateParticipant: function updateParticipant(_ref4, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/\").concat(participant.id), participant);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/participants.js"],"names":["axios","serializeParticipant","apiUrl","state","events","event","isEditMode","clickedDate","getters","participants","filter","map","serializeEvent","dayEvents","isDateWithinInterval","startDate","endDate","sort","compareDates","mutations","setEvents","appendEvent","setEvent","removeEvent","e","id","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","actions","fetchParticipants","commit","get","response","data","createParticipant","participant","console","log","post","deleteParticipant","participantId","updateParticipant","put","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { serializeParticipant } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null\n};\n\nconst getters = {\n  participants: state =>\n    state.events.filter(event => event).map(event => serializeEvent(event)),\n  event: state => serializeEvent(state.event),\n  dayEvents: state =>\n    state.events\n      .map(event => serializeEvent(event))\n      .filter(event =>\n        isDateWithinInterval(state.clickedDate, event.startDate, event.endDate)\n      )\n      .sort(compareDates),\n  isEditMode: state => state.isEditMode,\n  clickedDate: state => state.clickedDate\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date)\n};\n\nconst actions = {\n  async fetchParticipants({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async createParticipant({ commit }, participant) {\n    console.log('createParticipant', participant);\n    const response = await axios.post(`${apiUrl}/participants`, participant);\n    commit('appendParticipant', response.data);\n  },\n  async deleteParticipant({ commit }, participantId) {\n    const response = await axios.delete(\n      `${apiUrl}/participants/${participantId}`\n    );\n    commit('removeParticipant', response.data);\n  },\n  async updateParticipant({ commit }, participant) {\n    const response = await axios.put(\n      `${apiUrl}/participants/${participant.id}`,\n      participant\n    );\n    commit('updateParticipant', response.data);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}