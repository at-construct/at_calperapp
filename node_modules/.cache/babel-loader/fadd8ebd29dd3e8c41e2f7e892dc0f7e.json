{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\nexport default {\n  name: 'CalendarList',\n  components: {\n    CalendarFormDialog: CalendarFormDialog\n  },\n  data: function data() {\n    return {\n      selectedItem: [],\n      selectedGroups: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapGetters('calendars', ['calendars', 'calendar'])), mapGetters('groups', ['groups'])), mapGetters('users', ['users'])), {}, {\n    filteredCalendars: function filteredCalendars() {\n      return this.calendars.filter(function (calendar) {\n        return calendar.name !== '会議室' && calendar.name !== '社用車' && calendar.name !== 'スタジオ';\n      });\n    },\n    facilityCalendar: function facilityCalendar() {\n      return this.calendars.filter(function (calendar) {\n        return calendar.name === '会議室' || calendar.name === '社用車' || calendar.name === 'スタジオ';\n      });\n    }\n  }),\n  created: function created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n    this.fetchUsers();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['fetchCalendars', 'updateCalendar', 'deleteCalendar', 'setCalendar'])), mapActions('groups', ['fetchGroups', 'updateGroup', 'deleteGroup', 'setGroup'])), mapActions('users', ['fetchUsers', 'updateUser', 'deleteUser', 'setUser'])), {}, {\n    initCalendar: function initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.setCalendar(null);\n    },\n    edit: function edit(calendar) {\n      this.setCalendar(calendar);\n    },\n    del: function del(calendar) {\n      this.deleteCalendar(calendar.id);\n    },\n    toggleVisibility: function toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    },\n    updateSelection: function updateSelection(selected) {\n      this.selectedGroups = selected.slice(-1);\n    }\n  })\n};","map":{"version":3,"sources":["CalendarList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,QAAA,8DACA,UAAA,CAAA,WAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,CAAA,CAFA,GAGA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CAHA;AAIA,IAAA,iBAJA,+BAIA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,KANA;AAOA,IAAA,gBAPA,8BAOA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,KAAA,IAAA,QAAA,CAAA,IAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA;AATA,IATA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA;AACA,GAxBA;AAyBA,EAAA,OAAA,8DACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,gBAHA,EAIA,aAJA,CAAA,CADA,GAOA,UAAA,CAAA,QAAA,EAAA,CACA,aADA,EAEA,aAFA,EAGA,aAHA,EAIA,UAJA,CAAA,CAPA,GAaA,UAAA,CAAA,OAAA,EAAA,CACA,YADA,EAEA,YAFA,EAGA,YAHA,EAIA,SAJA,CAAA,CAbA;AAmBA,IAAA,YAnBA,0BAmBA;AACA,WAAA,WAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAxBA;AAyBA,IAAA,WAzBA,yBAyBA;AACA,WAAA,WAAA,CAAA,IAAA;AACA,KA3BA;AA4BA,IAAA,IA5BA,gBA4BA,QA5BA,EA4BA;AACA,WAAA,WAAA,CAAA,QAAA;AACA,KA9BA;AA+BA,IAAA,GA/BA,eA+BA,QA/BA,EA+BA;AACA,WAAA,cAAA,CAAA,QAAA,CAAA,EAAA;AACA,KAjCA;AAkCA,IAAA,gBAlCA,4BAkCA,QAlCA,EAkCA;AACA,WAAA,cAAA,CAAA,QAAA;AACA,KApCA;AAqCA,IAAA,eArCA,2BAqCA,QArCA,EAqCA;AACA,WAAA,cAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA;AAvCA;AAzBA,CAAA","sourcesContent":["<template>\n  <v-list dense>\n    <hr>\n    <!-- 設備以外のカレンダーリストを表示する -->\n    <v-list-item-group :value=\"selectedItem\">\n      <v-list-group v-for=\"calendar in filteredCalendars\" :key=\"calendar.id\" class=\"mb-3\">\n        <template v-slot:activator>\n          <v-list-item-title style=\"overflow: visible;\">\n            <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n              <span style=\"font-size: 16px;\">{{ calendar.name }}</span>\n            <!-- <v-btn icon @click=\"edit(calendar)\">\n              <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn icon v-on=\"on\">\n                    <v-icon size=\"12px\">mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n                  <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n                </v-list>\n              </v-menu>\n            </v-btn> -->\n          </v-list-item-title>\n        </template>\n\n        <v-list-item-group>\n          <v-list-item v-for=\"group in groups.filter(group => group.calendar.id === calendar.id)\" :key=\"group.id\">\n            <v-list-item-content class=\"py-0\">\n              <div class=\"d-flex align-center\">\n                <v-checkbox\n                  dense\n                  :value=\"group.id\"\n                  v-model=\"selectedGroups\"\n                  @change=\"updateSelection(selectedGroups)\"\n                  :label=\"group.user.name\"\n                  :color=\"calendar.color\"\n                  class=\"pb-2 ml-1\"\n                  hide-details=\"true\"\n                ></v-checkbox>\n              </div>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list-item-group>\n\n      </v-list-group>\n    </v-list-item-group>\n  \n    <!-- 設備カレンダーを表示する -->\n\n    <v-list-item-group :value=\"selectedItem\">\n      <v-list-group v-for=\"calendar in filteredCalendars\" :key=\"calendar.id\" class=\"mb-3\">\n        <template v-slot:activator>\n          <v-list-item-title style=\"overflow: visible;\">\n            <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n              <span style=\"font-size: 16px;\">{{ calendar.name }}</span>\n            <!-- <v-btn icon @click=\"edit(calendar)\">\n              <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n                <template v-slot:activator=\"{ on }\">\n                  <v-btn icon v-on=\"on\">\n                    <v-icon size=\"12px\">mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n                  <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n                </v-list>\n              </v-menu>\n            </v-btn> -->\n          </v-list-item-title>\n        </template>\n\n        <v-list-item-group>\n          <v-list-item v-for=\"group in groups.filter(group => group.calendar.id === calendar.id)\" :key=\"group.id\">\n            <v-list-item-content class=\"py-0\">\n              <div class=\"d-flex align-center\">\n                <v-checkbox\n                  dense\n                  :value=\"group.id\"\n                  v-model=\"selectedGroups\"\n                  @change=\"updateSelection(selectedGroups)\"\n                  :label=\"group.user.name\"\n                  :color=\"calendar.color\"\n                  class=\"pb-2 ml-1\"\n                  hide-details=\"true\"\n                ></v-checkbox>\n              </div>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list-item-group>\n\n      </v-list-group>\n    </v-list-item-group>\n\n\n    <v-list-item>\n      <v-list-item-content>\n        <v-subheader style=\"font-size: 14px;\">リストを追加</v-subheader>\n      </v-list-item-content>\n      <v-list-item-action>\n        <v-btn icon @click=\"initCalendar\">\n          <v-icon size=\"16px\">mdi-plus</v-icon>\n        </v-btn>\n      </v-list-item-action>\n    </v-list-item>\n\n  <template>\n    <v-dialog\n      :value=\"calendar !== null\"\n      @click:outside=\"closeDialog\"\n      width=\"600\"\n    >\n      <CalendarFormDialog v-if=\"calendar !== null\" />\n    </v-dialog>\n  </template>\n  </v-list>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\n\nexport default {\n  name: 'CalendarList',\n  components: { CalendarFormDialog },\n  data() {\n    return {\n      selectedItem: [],\n      selectedGroups: [],\n    }\n  },\n  computed: {\n    ...mapGetters('calendars', ['calendars', 'calendar']),\n    ...mapGetters('groups', ['groups']),\n    ...mapGetters('users', ['users']),\n    filteredCalendars() {\n      return this.calendars.filter(calendar => calendar.name !== '会議室' && calendar.name !== '社用車' && calendar.name !== 'スタジオ');\n    },\n    facilityCalendar() {\n      return this.calendars.filter(calendar => calendar.name === '会議室' || calendar.name === '社用車' || calendar.name === 'スタジオ');\n    },\n  },\n  created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n    this.fetchUsers();\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'fetchCalendars',\n      'updateCalendar',\n      'deleteCalendar',\n      'setCalendar'\n    ]),\n    ...mapActions('groups', [\n      'fetchGroups',\n      'updateGroup',\n      'deleteGroup',\n      'setGroup'\n    ]),\n    ...mapActions('users', [\n      'fetchUsers',\n      'updateUser',\n      'deleteUser',\n      'setUser'\n    ]),\n    initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog() {\n      this.setCalendar(null);\n    },\n    edit(calendar) {\n      this.setCalendar(calendar);\n    },\n    del(calendar) {\n      this.deleteCalendar(calendar.id);\n    },\n    toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    },\n    updateSelection(selected) {\n      this.selectedGroups = selected.slice(-1);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}