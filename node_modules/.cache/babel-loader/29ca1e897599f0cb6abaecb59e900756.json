{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format } from 'date-fns';\nimport { mapGetters, mapActions } from 'vuex';\nimport EventDetailDialog from '../events/EventDetailDialog';\nimport EventFormDialog from '../events/EventFormDialog';\nimport DayEventList from '../events/DayEventList';\nimport CalendarList from '../calendars/CalendarList';\nimport { getDefaultStartAndEnd } from '../../functions/datetime';\nexport default {\n  name: 'Calendar',\n  components: {\n    EventDetailDialog: EventDetailDialog,\n    EventFormDialog: EventFormDialog,\n    CalendarList: CalendarList,\n    DayEventList: DayEventList\n  },\n  data: function data() {\n    return {\n      value: format(new Date(), 'yyyy/MM/dd'),\n      drawer: false,\n      group: null,\n      type: 'month'\n    };\n  },\n  watch: {\n    group: function group() {\n      this.drawer = false;\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('events', ['events', 'event', 'isEditMode', 'clickedDate'])), {}, {\n    title: function title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions('events', ['fetchEvents', 'setEvent', 'setEditMode', 'setClickedDate'])), {}, {\n    setToday: function setToday() {\n      this.value = format(new Date(), 'yyyy/MM/dd');\n    },\n    showEvent: function showEvent(_ref) {\n      var nativeEvent = _ref.nativeEvent,\n          event = _ref.event;\n      this.setEvent(event);\n      nativeEvent.stopPropagation();\n    },\n    closeDialog: function closeDialog() {\n      this.setEvent(null);\n      this.setEditMode(false);\n      this.setClickedDate(null);\n    },\n    // initEvent({ date }) {\n    //   if (this.clickedDate !== null) {\n    //     return;\n    //   }\n    //   date = date.replace(/-/g, '/');\n    //   const [start, end] = getDefaultStartAndEnd(date);\n    //   this.setEvent({ name: '', start, end, timed: true });\n    //   this.setEditMode(true);\n    // },\n    showDayEvents: function showDayEvents(_ref2) {\n      var date = _ref2.date;\n      date = date.replace(/-/g, '/');\n      this.setClickedDate(date);\n    }\n  })\n};","map":{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA,SAAA,MAAA,QAAA,UAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,6BAAA;AACA,OAAA,eAAA,MAAA,2BAAA;AACA,OAAA,YAAA,MAAA,wBAAA;AACA,OAAA,YAAA,MAAA,2BAAA;AACA,SAAA,qBAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,iBAAA,EAAA,iBADA;AAEA,IAAA,eAAA,EAAA,eAFA;AAGA,IAAA,YAAA,EAAA,YAHA;AAIA,IAAA,YAAA,EAAA;AAJA,GAFA;AAQA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,MAAA,CAAA,IAAA,IAAA,EAAA,EAAA,YAAA,CADA;AAEA,MAAA,MAAA,EAAA,KAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAAA,GARA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,MAAA,GAAA,KAAA;AACA;AAHA,GAdA;AAmBA,EAAA,QAAA,kCACA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,CAAA,CADA;AAEA,IAAA,KAFA,mBAEA;AACA,aAAA,MAAA,CAAA,IAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA,UAAA,CAAA;AACA;AAJA,IAnBA;AAyBA,EAAA,OAAA,kCACA,UAAA,CAAA,QAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,gBAAA,CAAA,CADA;AAEA,IAAA,QAFA,sBAEA;AACA,WAAA,KAAA,GAAA,MAAA,CAAA,IAAA,IAAA,EAAA,EAAA,YAAA,CAAA;AACA,KAJA;AAKA,IAAA,SALA,2BAKA;AAAA,UAAA,WAAA,QAAA,WAAA;AAAA,UAAA,KAAA,QAAA,KAAA;AACA,WAAA,QAAA,CAAA,KAAA;AACA,MAAA,WAAA,CAAA,eAAA;AACA,KARA;AASA,IAAA,WATA,yBASA;AACA,WAAA,QAAA,CAAA,IAAA;AACA,WAAA,WAAA,CAAA,KAAA;AACA,WAAA,cAAA,CAAA,IAAA;AACA,KAbA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,aAvBA,gCAuBA;AAAA,UAAA,IAAA,SAAA,IAAA;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,WAAA,cAAA,CAAA,IAAA;AACA;AA1BA;AAzBA,CAAA","sourcesContent":["<template>\n  <div>\n<!-- ヘッダー -->\n    <v-sheet height=\"9vh\">\n      <v-toolbar flat>\n        <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\" class=\"ml-auto\">\n        </v-app-bar-nav-icon>\n        <v-btn icon class=\"ml-auto\" @click=\"$refs.calendar.prev()\">\n          <v-icon>mdi-chevron-left</v-icon>\n        </v-btn>\n\n        <v-toolbar-title>{{ title }}</v-toolbar-title>\n\n        <v-btn icon class=\"mr-auto\" @click=\"$refs.calendar.next()\">\n          <v-icon>mdi-chevron-right</v-icon>\n        </v-btn>\n\n        <v-btn outlined x-small class=\"mr-auto\" @click=\"setToday\">\n          今日\n        </v-btn>\n\n      </v-toolbar>\n    </v-sheet>\n\n<!-- ドロワー -->\n    <v-sheet height=\"81vh\" class=\"d-flex\">\n      <v-navigation-drawer v-model=\"drawer\" absolute left temporary>\n        <v-list-item-group v-model=\"group\">\n          <v-list-item @click=\"type = 'day'\">\n            <!-- <v-icon>mdi-view-day-outline</v-icon> -->\n            <v-list-item-title>Day</v-list-item-title>\n          </v-list-item>\n          <v-list-item @click=\"type = 'week'\">\n            <!-- <v-icon>mdi-view-week-outline</v-icon> -->\n            <v-list-item-title>Week</v-list-item-title>\n          </v-list-item>\n          <v-list-item @click=\"type = 'month'\">\n            <!-- <v-icon>mdi-grid</v-icon> -->\n            <v-list-item-title>Month</v-list-item-title>\n          </v-list-item>\n        </v-list-item-group >\n        <CalendarList />\n      </v-navigation-drawer>\n      <!-- ホームカレンダー -->\n        <v-sheet class=\"flex\">\n          <v-calendar\n            ref=\"calendar\"\n            v-model=\"value\"\n            :events=\"events\"\n            :type=\"type\"\n            @change=\"fetchEvents\"\n            locale=\"ja-jp\"\n            :day-format=\"timestamp => new Date(timestamp.date).getDate()\"\n            :month-format=\"timestamp => new Date(timestamp.date).getMonth() + 1 + ' /'\"\n            @click:event=\"showEvent\"\n            @click:date=\"showDayEvents\"\n            @click:more=\"showDayEvents\"\n          ></v-calendar>\n        </v-sheet>\n    </v-sheet>\n\n\n<!-- +アイコンの登録ボタン -->\n  <v-row justify=\"center\">\n    <v-dialog \n      :value=\"event !== null\"\n      fullscreen\n      hide-overlay\n      transition=\"dialog-bottom-transition\"\n    >\n      <EventDetailDialog v-if=\"event !== null && !isEditMode\" />\n      \n      <template\n      v-slot:activator=\"{ on, attrs }\"\n      >\n        <v-btn\n          elevation=\"6\"\n          color=\"grey darken\"\n          fab\n          dark\n          v-bind=\"attrs\"\n          v-on=\"on\"\n        >\n          <v-icon dark>\n            mdi-plus\n          </v-icon>\n        </v-btn>\n      </template>\n    <EventFormDialog />\n    </v-dialog>\n\n    <v-dialog :value=\"clickedDate !== null\" @click:outside=\"closeDialog\" width=\"600\">\n      <DayEventList />\n    </v-dialog>\n  </v-row>\n\n  </div>\n</template>\n\n<script>\nimport { format } from 'date-fns';\nimport { mapGetters, mapActions } from 'vuex';\nimport EventDetailDialog from '../events/EventDetailDialog';\nimport EventFormDialog from '../events/EventFormDialog';\nimport DayEventList from '../events/DayEventList';\nimport CalendarList from '../calendars/CalendarList';\nimport { getDefaultStartAndEnd } from '../../functions/datetime';\n\nexport default {\n  name: 'Calendar',\n  components: {\n    EventDetailDialog,\n    EventFormDialog,\n    CalendarList,\n    DayEventList,\n  },\n  data: () => ({\n    value: format(new Date(), 'yyyy/MM/dd'),\n    drawer: false,\n    group: null,\n    type: 'month',\n  }),\n  watch: {\n    group () {\n      this.drawer = false\n    },\n  },\n  computed: {\n    ...mapGetters('events', ['events', 'event', 'isEditMode', 'clickedDate']),\n    title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    },\n  },\n  methods: {\n    ...mapActions('events', ['fetchEvents', 'setEvent', 'setEditMode', 'setClickedDate']),\n    setToday() {\n      this.value = format(new Date(), 'yyyy/MM/dd');\n    },\n    showEvent({ nativeEvent, event }) {\n      this.setEvent(event);\n      nativeEvent.stopPropagation();\n    },\n    closeDialog(){\n    this.setEvent(null);\n    this.setEditMode(false);\n    this.setClickedDate(null);\n    },\n    // initEvent({ date }) {\n    //   if (this.clickedDate !== null) {\n    //     return;\n    //   }\n    //   date = date.replace(/-/g, '/');\n    //   const [start, end] = getDefaultStartAndEnd(date);\n    //   this.setEvent({ name: '', start, end, timed: true });\n    //   this.setEditMode(true);\n    // },\n    showDayEvents({ date }) {\n        date = date.replace(/-/g, '/');\n        this.setClickedDate(date);\n    },\n  },\n};\n</script>"],"sourceRoot":"app/javascript/components/pages"},"metadata":{},"sourceType":"module"}