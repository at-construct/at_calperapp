{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nvar apiUrl = 'https://localhost:9292';\nvar state = {\n  participantEvents: [],\n  participantUsers: [],\n  isEditModeParticipantUser: false,\n  editModeParticipantUser: null\n};\nvar getters = {\n  participantEvents: function participantEvents(state) {\n    return state.participantEvents.map(function (participantEvent) {\n      return _objectSpread(_objectSpread({}, participantEvent), {}, {\n        start: new Date(participantEvent.start),\n        end: new Date(participantEvent.end)\n      });\n    });\n  },\n  participantUsers: function participantUsers(state) {\n    return state.participantUsers;\n  },\n  isEditModeParticipantUser: function isEditModeParticipantUser(state) {\n    return state.isEditModeParticipantUser;\n  }\n};\nvar mutations = {\n  setParticipantEvents: function setParticipantEvents(state, participantEvents) {\n    return state.participantEvents = participantEvents;\n  },\n  appendParticipantEvent: function appendParticipantEvent(state, participantEvent) {\n    return state.participantEvents = [].concat(_toConsumableArray(state.participantEvents), [participantEvent]);\n  },\n  removeParticipantEvent: function removeParticipantEvent(state, participantEvent) {\n    return state.participantEvents = state.participantEvents.filter(function (e) {\n      return e.id !== participantEvent.id;\n    });\n  },\n  updateParticipantEvent: function updateParticipantEvent(state, participantEvent) {\n    return state.participantEvents = state.participantEvents.map(function (p) {\n      return p.id === participantEvent.id ? participantEvent : p;\n    });\n  },\n  setParticipantUsers: function setParticipantUsers(state, participantUsers) {\n    state.participantUsers = participantUsers;\n  },\n  appendParticipantUser: function appendParticipantUser(state, user) {\n    return state.participantUsers = [].concat(_toConsumableArray(state.participantUsers), [user]);\n  },\n  updateParticipantUser: function updateParticipantUser(state, participantUser) {\n    return state.participantUsers = state.participantUsers.map(function (c) {\n      return c.id === participantUser.id ? participantUser : c;\n    });\n  },\n  removeParticipantUser: function removeParticipantUser(state, participantUser) {\n    return state.participantUsers = state.participantUsers.filter(function (c) {\n      return c.id !== participantUser.id;\n    });\n  },\n  setEditModeParticipantUser: function setEditModeParticipantUser(state, bool) {\n    return state.isEditModeParticipantUser = bool;\n  }\n};\nvar actions = {\n  fetchParticipantEvents: function fetchParticipantEvents(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/participants/event_excerpt\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setParticipantEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createParticipantEvent: function createParticipantEvent(_ref2, participantEvent) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createParticipantEvent', participantEvent);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants/event_excerpt\"), participantEvent);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendParticipantEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteParticipantEvent: function deleteParticipantEvent(_ref3, participantEventId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/event_excerpt/\").concat(participantEventId));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeParticipantEvent', participantEventId);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateParticipantEvent: function updateParticipantEvent(_ref4, participantEvent) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/event_excerpt/\").concat(participantEvent.id), participantEvent);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateParticipantEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  fetchParticipantUsers: function fetchParticipantUsers(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/participants/user_excerpt\"));\n\n            case 3:\n              response = _context5.sent;\n              commit('setParticipantUsers', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  createParticipantUser: function createParticipantUser(_ref6, participantUser) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              console.log('createEvent', participantUser);\n              _context6.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants/user_excerpt\"), participantUser);\n\n            case 4:\n              response = _context6.sent;\n              commit('appendParticipantUser', response.data);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  updateParticipantUser: function updateParticipantUser(_ref7, participantUser) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch = _ref7.dispatch, commit = _ref7.commit;\n              _context7.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/user_excerpt/\").concat(participantUser.id), participantUser);\n\n            case 3:\n              response = _context7.sent;\n              commit('updateParticipantUser', response.data);\n              dispatch('fetchParticipantUsers');\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  deleteParticipantUser: function deleteParticipantUser(_ref8, participantUserId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch = _ref8.dispatch, commit = _ref8.commit;\n              _context8.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/user_excerpt/\").concat(participantUserId));\n\n            case 3:\n              response = _context8.sent;\n              commit('removeParticipantUser', participantUserId);\n              dispatch('fetchParticipantUsers');\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  setParticipantUser: function setParticipantUser(_ref9, participantUser) {\n    var commit = _ref9.commit;\n    commit('participants/setParticipantUser', participantUser);\n  },\n  setEditModeParticipantUser: function setEditModeParticipantUser(_ref10, bool) {\n    var commit = _ref10.commit;\n    commit('setEditModeParticipantUser', bool);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/participants.js"],"names":["axios","apiUrl","state","participantEvents","participantUsers","isEditModeParticipantUser","editModeParticipantUser","getters","map","participantEvent","start","Date","end","mutations","setParticipantEvents","appendParticipantEvent","removeParticipantEvent","filter","e","id","updateParticipantEvent","p","setParticipantUsers","appendParticipantUser","user","updateParticipantUser","participantUser","c","removeParticipantUser","setEditModeParticipantUser","bool","actions","fetchParticipantEvents","commit","get","response","data","createParticipantEvent","console","log","post","deleteParticipantEvent","participantEventId","put","fetchParticipantUsers","createParticipantUser","dispatch","deleteParticipantUser","participantUserId","setParticipantUser","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = 'https://localhost:9292';\n\nconst state = {\n  participantEvents: [],\n  participantUsers: [],\n  isEditModeParticipantUser: false,\n  editModeParticipantUser: null,\n};\n\nconst getters = {\n  participantEvents: (state) =>\n    state.participantEvents.map((participantEvent) => {\n      return {\n        ...participantEvent,\n        start: new Date(participantEvent.start),\n        end: new Date(participantEvent.end),\n      };\n    }),\n  participantUsers: (state) => state.participantUsers,\n  isEditModeParticipantUser: state => state.isEditModeParticipantUser,\n};\n\nconst mutations = {\n  setParticipantEvents: (state, participantEvents) =>\n    (state.participantEvents = participantEvents),\n  appendParticipantEvent: (state, participantEvent) =>\n    (state.participantEvents = [...state.participantEvents, participantEvent]),\n  removeParticipantEvent: (state, participantEvent) =>\n    (state.participantEvents = state.participantEvents.filter(\n      (e) => e.id !== participantEvent.id\n    )),\n  updateParticipantEvent: (state, participantEvent) =>\n    (state.participantEvents = state.participantEvents.map((p) =>\n      p.id === participantEvent.id ? participantEvent : p\n    )),\n\n    setParticipantUsers(state, participantUsers) {\n      state.participantUsers = participantUsers;\n    },\n  appendParticipantUser: (state, user) =>\n    (state.participantUsers = [...state.participantUsers, user]),\n  updateParticipantUser: (state, participantUser) =>\n    (state.participantUsers = state.participantUsers.map((c) =>\n      c.id === participantUser.id ? participantUser : c\n    )),\n  removeParticipantUser: (state, participantUser) =>\n    (state.participantUsers = state.participantUsers.filter(\n      (c) => c.id !== participantUser.id\n    )),\n  setEditModeParticipantUser: (state, bool) => (state.isEditModeParticipantUser = bool),\n};\n\nconst actions = {\n  async fetchParticipantEvents({ commit }) {\n    const response = await axios.get(`${apiUrl}/participants/event_excerpt`);\n    commit('setParticipantEvents', response.data);\n  },\n  async createParticipantEvent({ commit }, participantEvent) {\n    console.log('createParticipantEvent', participantEvent);\n    const response = await axios.post(\n      `${apiUrl}/participants/event_excerpt`,\n      participantEvent\n    );\n    commit('appendParticipantEvent', response.data);\n  },\n  async deleteParticipantEvent({ commit }, participantEventId) {\n    const response = await axios.delete(\n      `${apiUrl}/participants/event_excerpt/${participantEventId}`\n    );\n    commit('removeParticipantEvent', participantEventId);\n  },\n  async updateParticipantEvent({ commit }, participantEvent) {\n    const response = await axios.put(\n      `${apiUrl}/participants/event_excerpt/${participantEvent.id}`,\n      participantEvent\n    );\n    commit('updateParticipantEvent', response.data);\n  },\n\n  async fetchParticipantUsers({ commit }) {\n    const response = await axios.get(`${apiUrl}/participants/user_excerpt`);\n    commit('setParticipantUsers', response.data);\n  },\n  async createParticipantUser({ commit }, participantUser) {\n    console.log('createEvent', participantUser);\n    const response = await axios.post(`${apiUrl}/participants/user_excerpt`, participantUser);\n    commit('appendParticipantUser', response.data);\n  },\n  async updateParticipantUser({ dispatch, commit }, participantUser) {\n    const response = await axios.put(\n      `${apiUrl}/participants/user_excerpt/${participantUser.id}`,\n      participantUser\n    );\n    commit('updateParticipantUser', response.data);\n    dispatch('fetchParticipantUsers');\n  },\n  async deleteParticipantUser({ dispatch, commit }, participantUserId) {\n    const response = await axios.delete(`${apiUrl}/participants/user_excerpt/${participantUserId}`);\n    commit('removeParticipantUser', participantUserId);\n    dispatch('fetchParticipantUsers');\n  },\n  setParticipantUser({ commit }, participantUser) {\n    commit('participants/setParticipantUser', participantUser);\n  },\n  setEditModeParticipantUser({ commit }, bool) {\n    commit('setEditModeParticipantUser', bool);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}