{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  users: [],\n  user: null\n};\nvar getters = {\n  events: function events(state) {\n    return state.events.filter(function (event) {\n      return event;\n    }).map(function (event) {\n      return serializeEvent(event);\n    });\n  },\n  event: function event(state) {\n    return serializeEvent(state.event);\n  },\n  dayEvents: function dayEvents(state) {\n    return state.events.map(function (event) {\n      return serializeEvent(event);\n    }).filter(function (event) {\n      return isDateWithinInterval(state.clickedDate, event.startDate, event.endDate);\n    }).sort(compareDates);\n  },\n  isEditMode: function isEditMode(state) {\n    return state.isEditMode;\n  },\n  clickedDate: function clickedDate(state) {\n    return state.clickedDate;\n  },\n  users: function users(state) {\n    return state.users.map(function (user) {\n      return serializeUser(user);\n    });\n  },\n  user: function user(state) {\n    return serializeUser(state.user);\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  },\n  setUsers: function setUsers(state, users) {\n    return state.users = users;\n  },\n  appendUser: function appendUser(state, user) {\n    return state.users = [].concat(_toConsumableArray(state.users), [user]);\n  },\n  updateUser: function updateUser(state, user) {\n    return state.users = state.users.map(function (c) {\n      return c.id === user.id ? user : c;\n    });\n  },\n  removeUser: function removeUser(state, user) {\n    return state.users = state.users.filter(function (c) {\n      return c.id !== user.id;\n    });\n  },\n  setUser: function setUser(state, user) {\n    return state.user = user;\n  }\n};\nvar actions = {\n  fetchEvents: function fetchEvents(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createEvent: function createEvent(_ref2, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createEvent', event);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/events\"), event);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteEvent: function deleteEvent(_ref3, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/events/\").concat(id));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeEvent', response.data);\n              commit('resetEvent');\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateEvent: function updateEvent(_ref4, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/events/\").concat(event.id), event);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  setEvent: function setEvent(_ref5, event) {\n    var commit = _ref5.commit;\n    commit('setEvent', event);\n  },\n  setEditMode: function setEditMode(_ref6, bool) {\n    var commit = _ref6.commit;\n    commit('setEditMode', bool);\n  },\n  setClickedDate: function setClickedDate(_ref7, date) {\n    var commit = _ref7.commit;\n    commit('setClickedDate', date);\n  },\n  fetchUsers: function fetchUsers(_ref8) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context5.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/users\"));\n\n            case 3:\n              response = _context5.sent;\n              commit('setUsers', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  addUser: function addUser(_ref9, user) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref9.commit;\n              console.log('addUser', user);\n              _context6.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/users\"), user);\n\n            case 4:\n              response = _context6.sent;\n              commit('appendUser', response.data);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  updateUser: function updateUser(_ref10, user) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch = _ref10.dispatch, commit = _ref10.commit;\n              _context7.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/users/\").concat(user.id), user);\n\n            case 3:\n              response = _context7.sent;\n              commit('updateUser', response.data);\n              dispatch('users/fetchUsers', null, {\n                root: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  deleteUser: function deleteUser(_ref11, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch = _ref11.dispatch, commit = _ref11.commit;\n              _context8.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/users/\").concat(id));\n\n            case 3:\n              response = _context8.sent;\n              commit('removeUser', response.data);\n              dispatch('users/fetchUsers', null, {\n                root: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  setUser: function setUser(_ref12, user) {\n    var commit = _ref12.commit;\n    commit('setUser', user);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/events.js"],"names":["axios","isDateWithinInterval","compareDates","serializeEvent","apiUrl","state","events","event","isEditMode","clickedDate","users","user","getters","filter","map","dayEvents","startDate","endDate","sort","serializeUser","mutations","setEvents","appendEvent","setEvent","removeEvent","e","id","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","setUsers","appendUser","updateUser","c","removeUser","setUser","actions","fetchEvents","commit","get","response","data","createEvent","console","log","post","deleteEvent","put","fetchUsers","addUser","dispatch","root","deleteUser","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  users: [],\n  user: null\n};\n\nconst getters = {\n  events: state =>\n    state.events\n      .filter(event => event)\n      .map(event => serializeEvent(event)),\n  event: state => serializeEvent(state.event),\n  dayEvents: state =>\n    state.events\n      .map(event => serializeEvent(event))\n      .filter(event =>\n        isDateWithinInterval(state.clickedDate, event.startDate, event.endDate)\n      )\n      .sort(compareDates),\n  isEditMode: state => state.isEditMode,\n  clickedDate: state => state.clickedDate,\n\n  users: state =>\n    state.users.map(user => serializeUser(user)),\n  user: state => serializeUser(state.user)\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) => (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) => (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date),\n\n  setUsers: (state, users) => (state.users = users),\n  appendUser: (state, user) =>\n    (state.users = [...state.users, user]),\n  updateUser: (state, user) =>\n  (state.users = state.users.map(c =>\n    c.id === user.id ? user : c\n  )),\n  removeUser: (state, user) =>\n    (state.users = state.users.filter(c => c.id !== user.id)),\n  setUser: (state, user) => (state.user = user)\n};\n\nconst actions = {\n  async fetchEvents({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async createEvent({ commit }, event) {\n    console.log('createEvent', event);\n    const response = await axios.post(`${apiUrl}/events`, event);\n    commit('appendEvent', response.data);\n  },\n  async deleteEvent({ commit }, id) {\n    const response = await axios.delete(`${apiUrl}/events/${id}`);\n    commit('removeEvent', response.data);\n    commit('resetEvent');\n  },\n  async updateEvent({ commit }, event) {\n    const response = await axios.put(`${apiUrl}/events/${event.id}`, event);\n    commit('updateEvent', response.data);\n  },\n  setEvent({ commit }, event) {\n    commit('setEvent', event);\n  },\n  setEditMode({ commit }, bool) {\n    commit('setEditMode', bool);\n  },\n  setClickedDate({ commit }, date) {\n    commit('setClickedDate', date);\n  },\n  async fetchUsers({ commit }) {\n    const response = await axios.get(`${apiUrl}/users`);\n    commit('setUsers', response.data);\n  },\n  async addUser({ commit }, user) {\n    console.log('addUser', user);\n    const response = await axios.post(`${apiUrl}/users`, user);\n    commit('appendUser', response.data);\n  },\n  async updateUser({ dispatch, commit }, user) {\n    const response = await axios.put(\n      `${apiUrl}/users/${user.id}`,\n      user\n    );\n    commit('updateUser', response.data);\n    dispatch('users/fetchUsers', null, { root: true });\n  },\n  async deleteUser({ dispatch, commit }, id) {\n    const response = await axios.delete(`${apiUrl}/users/${id}`);\n    commit('removeUser', response.data);\n    dispatch('users/fetchUsers', null, { root: true });\n  },\n  setUser({ commit }, user) {\n    commit('setUser', user);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}