{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios'; // import { serializeParticipant } from '../../functions/serializers';\n\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  participants: [],\n  events: [],\n  event: null\n};\nvar getters = {\n  participants: function participants(state) {\n    return state.participants.map(function (participant) {\n      return _objectSpread(_objectSpread({}, participant), {}, {\n        start: new Date(participant.event.start),\n        end: new Date(participant.event.end)\n      });\n    });\n  },\n  events: function events(state) {\n    return state.events.filter(function (event) {\n      return event;\n    }).map(function (event) {\n      return serializeEvent(event);\n    });\n  },\n  event: function event(state) {\n    return serializeEvent(state.event);\n  },\n  dayEvents: function dayEvents(state) {\n    return state.events.map(function (event) {\n      return serializeEvent(event);\n    }).filter(function (event) {\n      return isDateWithinInterval(state.clickedDate, event.startDate, event.endDate);\n    }).sort(compareDates);\n  },\n  isEditMode: function isEditMode(state) {\n    return state.isEditMode;\n  },\n  clickedDate: function clickedDate(state) {\n    return state.clickedDate;\n  }\n};\nvar mutations = {\n  setParticipants: function setParticipants(state, participants) {\n    return state.participants = participants;\n  },\n  appendParticipant: function appendParticipant(state, participant) {\n    return state.participants = [].concat(_toConsumableArray(state.participants), [participant]);\n  },\n  removeParticipant: function removeParticipant(state, participant) {\n    return state.participants = state.participants.filter(function (p) {\n      return p.id !== participant.id;\n    });\n  },\n  updateParticipant: function updateParticipant(state, participant) {\n    return state.participants = state.participants.map(function (p) {\n      return p.id === participant.id ? participant : p;\n    });\n  },\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  }\n};\nvar actions = {\n  fetchParticipants: function fetchParticipants(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/participants\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setParticipants', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createParticipant: function createParticipant(_ref2, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createParticipant', participant);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants\"), participant);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendParticipant', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteParticipant: function deleteParticipant(_ref3, participantId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/\").concat(participantId));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateParticipant: function updateParticipant(_ref4, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/\").concat(participant.id), participant);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  fetchEvents: function fetchEvents(_ref5) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context5.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  createEvent: function createEvent(_ref6, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              console.log('createEvent', event);\n              _context6.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/events\"), event);\n\n            case 4:\n              response = _context6.sent;\n              commit('appendEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  deleteEvent: function deleteEvent(_ref7, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref7.commit;\n              _context7.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/events/\").concat(id));\n\n            case 3:\n              response = _context7.sent;\n              commit('removeEvent', response.data);\n              commit('resetEvent');\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  updateEvent: function updateEvent(_ref8, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context8.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/events/\").concat(event.id), event);\n\n            case 3:\n              response = _context8.sent;\n              commit('updateEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  },\n  setEvent: function setEvent(_ref9, event) {\n    var commit = _ref9.commit;\n    commit('setEvent', event);\n  },\n  setEditMode: function setEditMode(_ref10, bool) {\n    var commit = _ref10.commit;\n    commit('setEditMode', bool);\n  },\n  setClickedDate: function setClickedDate(_ref11, date) {\n    var commit = _ref11.commit;\n    commit('setClickedDate', date);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/participants.js"],"names":["axios","isDateWithinInterval","compareDates","serializeEvent","apiUrl","state","participants","events","event","getters","map","participant","start","Date","end","filter","dayEvents","clickedDate","startDate","endDate","sort","isEditMode","mutations","setParticipants","appendParticipant","removeParticipant","p","id","updateParticipant","setEvents","appendEvent","setEvent","removeEvent","e","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","actions","fetchParticipants","commit","get","response","data","createParticipant","console","log","post","deleteParticipant","participantId","put","fetchEvents","createEvent","deleteEvent","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\n// import { serializeParticipant } from '../../functions/serializers';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  participants: [],\n  events: [],\n  event: null\n};\n\nconst getters = {\n  participants: state => state.participants.map(participant => {\n    return {\n      ...participant,\n      start: new Date(participant.event.start),\n      end: new Date(participant.event.end)\n    };\n  }),\n  events: state =>\n    state.events.filter(event => event).map(event => serializeEvent(event)),\n  event: state => serializeEvent(state.event),\n  dayEvents: state =>\n    state.events\n      .map(event => serializeEvent(event))\n      .filter(event =>\n        isDateWithinInterval(state.clickedDate, event.startDate, event.endDate)\n      )\n      .sort(compareDates),\n  isEditMode: state => state.isEditMode,\n  clickedDate: state => state.clickedDate\n};\n\nconst mutations = {\n  setParticipants: (state, participants) => (state.participants = participants),\n  appendParticipant: (state, participant) =>\n    (state.participants = [...state.participants, participant]),\n  removeParticipant: (state, participant) =>\n    (state.participants = state.participants.filter(\n      p => p.id !== participant.id\n    )),\n  updateParticipant: (state, participant) =>\n    (state.participants = state.participants.map(p =>\n      p.id === participant.id ? participant : p\n    )),\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date)\n};\n\nconst actions = {\n  async fetchParticipants({ commit }) {\n    const response = await axios.get(`${apiUrl}/participants`);\n    commit('setParticipants', response.data);\n  },\n  async createParticipant({ commit }, participant) {\n    console.log('createParticipant', participant);\n    const response = await axios.post(`${apiUrl}/participants`, participant);\n    commit('appendParticipant', response.data);\n  },\n  async deleteParticipant({ commit }, participantId) {\n    const response = await axios.delete(\n      `${apiUrl}/participants/${participantId}`\n    );\n    commit('removeParticipant', response.data);\n  },\n  async updateParticipant({ commit }, participant) {\n    const response = await axios.put(\n      `${apiUrl}/participants/${participant.id}`,\n      participant\n    );\n    commit('updateParticipant', response.data);\n  },\n  async fetchEvents({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async createEvent({ commit }, event) {\n    console.log('createEvent', event);\n    const response = await axios.post(`${apiUrl}/events`, event);\n    commit('appendEvent', response.data);\n  },\n  async deleteEvent({ commit }, id) {\n    const response = await axios.delete(`${apiUrl}/events/${id}`);\n    commit('removeEvent', response.data);\n    commit('resetEvent');\n  },\n  async updateEvent({ commit }, event) {\n    const response = await axios.put(`${apiUrl}/events/${event.id}`, event);\n    commit('updateEvent', response.data);\n  },\n  setEvent({ commit }, event) {\n    commit('setEvent', event);\n  },\n  setEditMode({ commit }, bool) {\n    commit('setEditMode', bool);\n  },\n  setClickedDate({ commit }, date) {\n    commit('setClickedDate', date);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}