{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      value: '',\n      events: [],\n      colors: ['#2196F3', '#3F51B5', '#673AB7', '#00BCD4', '#4CAF50', '#FF9800', '#757575'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n      dragEvent: null,\n      dragStart: null,\n      createEvent: null,\n      createStart: null,\n      extendOriginal: null\n    };\n  },\n  methods: {\n    startDrag: function startDrag(_ref) {\n      var event = _ref.event,\n          timed = _ref.timed;\n\n      if (event && timed) {\n        this.dragEvent = event;\n        this.dragTime = null;\n        this.extendOriginal = null;\n      }\n    },\n    startTime: function startTime(tms) {\n      var mouse = this.toTime(tms);\n\n      if (this.dragEvent && this.dragTime === null) {\n        var start = this.dragEvent.start;\n        this.dragTime = mouse - start;\n      } else {\n        this.createStart = this.roundTime(mouse);\n        this.createEvent = {\n          name: \"Event #\".concat(this.events.length),\n          color: this.rndElement(this.colors),\n          start: this.createStart,\n          end: this.createStart,\n          timed: true\n        };\n        this.events.push(this.createEvent);\n      }\n    },\n    extendBottom: function extendBottom(event) {\n      this.createEvent = event;\n      this.createStart = event.start;\n      this.extendOriginal = event.end;\n    },\n    mouseMove: function mouseMove(tms) {\n      var mouse = this.toTime(tms);\n\n      if (this.dragEvent && this.dragTime !== null) {\n        var start = this.dragEvent.start;\n        var end = this.dragEvent.end;\n        var duration = end - start;\n        var newStartTime = mouse - this.dragTime;\n        var newStart = this.roundTime(newStartTime);\n        var newEnd = newStart + duration;\n        this.dragEvent.start = newStart;\n        this.dragEvent.end = newEnd;\n      } else if (this.createEvent && this.createStart !== null) {\n        var mouseRounded = this.roundTime(mouse, false);\n        var min = Math.min(mouseRounded, this.createStart);\n        var max = Math.max(mouseRounded, this.createStart);\n        this.createEvent.start = min;\n        this.createEvent.end = max;\n      }\n    },\n    endDrag: function endDrag() {\n      this.dragTime = null;\n      this.dragEvent = null;\n      this.createEvent = null;\n      this.createStart = null;\n      this.extendOriginal = null;\n    },\n    cancelDrag: function cancelDrag() {\n      if (this.createEvent) {\n        if (this.extendOriginal) {\n          this.createEvent.end = this.extendOriginal;\n        } else {\n          var i = this.events.indexOf(this.createEvent);\n\n          if (i !== -1) {\n            this.events.splice(i, 1);\n          }\n        }\n      }\n\n      this.createEvent = null;\n      this.createStart = null;\n      this.dragTime = null;\n      this.dragEvent = null;\n    },\n    roundTime: function roundTime(time) {\n      var down = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var roundTo = 15; // minutes\n\n      var roundDownTime = roundTo * 60 * 1000;\n      return down ? time - time % roundDownTime : time + (roundDownTime - time % roundDownTime);\n    },\n    toTime: function toTime(tms) {\n      return new Date(tms.year, tms.month - 1, tms.day, tms.hour, tms.minute).getTime();\n    },\n    getEventColor: function getEventColor(event) {\n      var rgb = parseInt(event.color.substring(1), 16);\n      var r = rgb >> 16 & 0xFF;\n      var g = rgb >> 8 & 0xFF;\n      var b = rgb >> 0 & 0xFF;\n      return event === this.dragEvent ? \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", 0.7)\") : event === this.createEvent ? \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", 0.7)\") : event.color;\n    },\n    getEvents: function getEvents(_ref2) {\n      var start = _ref2.start,\n          end = _ref2.end;\n      var events = [];\n      var min = new Date(\"\".concat(start.date, \"T00:00:00\")).getTime();\n      var max = new Date(\"\".concat(end.date, \"T23:59:59\")).getTime();\n      var days = (max - min) / 86400000;\n      var eventCount = this.rnd(days, days + 20);\n\n      for (var i = 0; i < eventCount; i++) {\n        var timed = this.rnd(0, 3) !== 0;\n        var firstTimestamp = this.rnd(min, max);\n        var secondTimestamp = this.rnd(2, timed ? 8 : 288) * 900000;\n\n        var _start = firstTimestamp - firstTimestamp % 900000;\n\n        var _end = _start + secondTimestamp;\n\n        events.push({\n          name: this.rndElement(this.names),\n          color: this.rndElement(this.colors),\n          start: _start,\n          end: _end,\n          timed: timed\n        });\n      }\n\n      this.events = events;\n    },\n    rnd: function rnd(a, b) {\n      return Math.floor((b - a + 1) * Math.random()) + a;\n    },\n    rndElement: function rndElement(arr) {\n      return arr[this.rnd(0, arr.length - 1)];\n    }\n  }\n};","map":{"version":3,"sources":["app.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row class=\"\">\n    <v-col>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"value\"\n          color=\"primary\"\n          type=\"4day\"\n          :events=\"events\"\n          :event-color=\"getEventColor\"\n          :event-ripple=\"false\"\n          @change=\"getEvents\"\n          @mousedown:event=\"startDrag\"\n          @mousedown:time=\"startTime\"\n          @mousemove:time=\"mouseMove\"\n          @mouseup:time=\"endDrag\"\n          @mouseleave.native=\"cancelDrag\"\n        >\n          <template v-slot:event=\"{ event, timed, eventSummary }\">\n            <div\n              class=\"v-event-draggable\"\n              v-html=\"eventSummary()\"\n            ></div>\n            <div\n              v-if=\"timed\"\n              class=\"v-event-drag-bottom\"\n              @mousedown.stop=\"extendBottom(event)\"\n            ></div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n    </v-col>\n  </v-row>\n\n\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      value: '',\n      events: [],\n      colors: ['#2196F3', '#3F51B5', '#673AB7', '#00BCD4', '#4CAF50', '#FF9800', '#757575'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n      dragEvent: null,\n      dragStart: null,\n      createEvent: null,\n      createStart: null,\n      extendOriginal: null,\n    }),\n    methods: {\n      startDrag ({ event, timed }) {\n        if (event && timed) {\n          this.dragEvent = event\n          this.dragTime = null\n          this.extendOriginal = null\n        }\n      },\n      startTime (tms) {\n        const mouse = this.toTime(tms)\n        if (this.dragEvent && this.dragTime === null) {\n          const start = this.dragEvent.start\n          this.dragTime = mouse - start\n        } else {\n          this.createStart = this.roundTime(mouse)\n          this.createEvent = {\n            name: `Event #${this.events.length}`,\n            color: this.rndElement(this.colors),\n            start: this.createStart,\n            end: this.createStart,\n            timed: true,\n          }\n          this.events.push(this.createEvent)\n        }\n      },\n      extendBottom (event) {\n        this.createEvent = event\n        this.createStart = event.start\n        this.extendOriginal = event.end\n      },\n      mouseMove (tms) {\n        const mouse = this.toTime(tms)\n        if (this.dragEvent && this.dragTime !== null) {\n          const start = this.dragEvent.start\n          const end = this.dragEvent.end\n          const duration = end - start\n          const newStartTime = mouse - this.dragTime\n          const newStart = this.roundTime(newStartTime)\n          const newEnd = newStart + duration\n          this.dragEvent.start = newStart\n          this.dragEvent.end = newEnd\n        } else if (this.createEvent && this.createStart !== null) {\n          const mouseRounded = this.roundTime(mouse, false)\n          const min = Math.min(mouseRounded, this.createStart)\n          const max = Math.max(mouseRounded, this.createStart)\n          this.createEvent.start = min\n          this.createEvent.end = max\n        }\n      },\n      endDrag () {\n        this.dragTime = null\n        this.dragEvent = null\n        this.createEvent = null\n        this.createStart = null\n        this.extendOriginal = null\n      },\n      cancelDrag () {\n        if (this.createEvent) {\n          if (this.extendOriginal) {\n            this.createEvent.end = this.extendOriginal\n          } else {\n            const i = this.events.indexOf(this.createEvent)\n            if (i !== -1) {\n              this.events.splice(i, 1)\n            }\n          }\n        }\n        this.createEvent = null\n        this.createStart = null\n        this.dragTime = null\n        this.dragEvent = null\n      },\n      roundTime (time, down = true) {\n        const roundTo = 15 // minutes\n        const roundDownTime = roundTo * 60 * 1000\n        return down\n          ? time - time % roundDownTime\n          : time + (roundDownTime - (time % roundDownTime))\n      },\n      toTime (tms) {\n        return new Date(tms.year, tms.month - 1, tms.day, tms.hour, tms.minute).getTime()\n      },\n      getEventColor (event) {\n        const rgb = parseInt(event.color.substring(1), 16)\n        const r = (rgb >> 16) & 0xFF\n        const g = (rgb >> 8) & 0xFF\n        const b = (rgb >> 0) & 0xFF\n        return event === this.dragEvent\n          ? `rgba(${r}, ${g}, ${b}, 0.7)`\n          : event === this.createEvent\n            ? `rgba(${r}, ${g}, ${b}, 0.7)`\n            : event.color\n      },\n      getEvents ({ start, end }) {\n        const events = []\n        const min = new Date(`${start.date}T00:00:00`).getTime()\n        const max = new Date(`${end.date}T23:59:59`).getTime()\n        const days = (max - min) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n        for (let i = 0; i < eventCount; i++) {\n          const timed = this.rnd(0, 3) !== 0\n          const firstTimestamp = this.rnd(min, max)\n          const secondTimestamp = this.rnd(2, timed ? 8 : 288) * 900000\n          const start = firstTimestamp - (firstTimestamp % 900000)\n          const end = start + secondTimestamp\n          events.push({\n            name: this.rndElement(this.names),\n            color: this.rndElement(this.colors),\n            start,\n            end,\n            timed,\n          })\n        }\n        this.events = events\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n      rndElement (arr) {\n        return arr[this.rnd(0, arr.length - 1)]\n      },\n    },\n  }\n</script>\n\n<style scoped lang=\"scss\">\n.v-event-draggable {\n  padding-left: 6px;\n}\n.v-event-timed {\n  user-select: none;\n  -webkit-user-select: none;\n}\n.v-event-drag-bottom {\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 4px;\n  height: 4px;\n  cursor: ns-resize;\n  &::after {\n    display: none;\n    position: absolute;\n    left: 50%;\n    height: 4px;\n    border-top: 1px solid white;\n    border-bottom: 1px solid white;\n    width: 16px;\n    margin-left: -8px;\n    opacity: 0.8;\n    content: '';\n  }\n  &:hover::after {\n    display: block;\n  }\n}\n</style>"],"sourceRoot":"app/javascript"},"metadata":{},"sourceType":"module"}