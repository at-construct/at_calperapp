{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Extensions\nimport { Service } from '../service'; // Utilities\n\nimport * as easingPatterns from './easing-patterns';\nimport { getContainer, getOffset } from './util';\nexport default function goTo(_target) {\n  var _settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var settings = _objectSpread({\n    container: document.scrollingElement || document.body || document.documentElement,\n    duration: 500,\n    offset: 0,\n    easing: 'easeInOutCubic',\n    appOffset: true\n  }, _settings);\n\n  var container = getContainer(settings.container);\n  /* istanbul ignore else */\n\n  if (settings.appOffset && goTo.framework.application) {\n    var isDrawer = container.classList.contains('v-navigation-drawer');\n    var isClipped = container.classList.contains('v-navigation-drawer--clipped');\n    var _goTo$framework$appli = goTo.framework.application,\n        bar = _goTo$framework$appli.bar,\n        top = _goTo$framework$appli.top;\n    settings.offset += bar;\n    /* istanbul ignore else */\n\n    if (!isDrawer || isClipped) settings.offset += top;\n  }\n\n  var startTime = performance.now();\n  var targetLocation;\n\n  if (typeof _target === 'number') {\n    targetLocation = getOffset(_target) - settings.offset;\n  } else {\n    targetLocation = getOffset(_target) - getOffset(container) - settings.offset;\n  }\n\n  var startLocation = container.scrollTop;\n  if (targetLocation === startLocation) return Promise.resolve(targetLocation);\n  var ease = typeof settings.easing === 'function' ? settings.easing : easingPatterns[settings.easing];\n  /* istanbul ignore else */\n\n  if (!ease) throw new TypeError(\"Easing function \\\"\".concat(settings.easing, \"\\\" not found.\")); // Cannot be tested properly in jsdom\n\n  /* istanbul ignore next */\n\n  return new Promise(function (resolve) {\n    return requestAnimationFrame(function step(currentTime) {\n      var timeElapsed = currentTime - startTime;\n      var progress = Math.abs(settings.duration ? Math.min(timeElapsed / settings.duration, 1) : 1);\n      container.scrollTop = Math.floor(startLocation + (targetLocation - startLocation) * ease(progress));\n      var clientHeight = container === document.body ? document.documentElement.clientHeight : container.clientHeight;\n\n      if (progress === 1 || clientHeight + container.scrollTop === container.scrollHeight) {\n        return resolve(targetLocation);\n      }\n\n      requestAnimationFrame(step);\n    });\n  });\n}\ngoTo.framework = {};\n\ngoTo.init = function () {};\n\nexport var Goto = /*#__PURE__*/function (_Service) {\n  _inherits(Goto, _Service);\n\n  var _super = _createSuper(Goto);\n\n  function Goto() {\n    var _this;\n\n    _classCallCheck(this, Goto);\n\n    _this = _super.call(this);\n    return _possibleConstructorReturn(_this, goTo);\n  }\n\n  return Goto;\n}(Service);\nGoto.property = 'goTo';","map":null,"metadata":{},"sourceType":"module"}