{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: []\n};\nvar getters = {\n  events: function events(state, getters) {\n    return state.events.filter(function (event) {\n      return event;\n    }).map(function (event) {\n      var participants = getters.participants.filter(function (participant) {\n        return participant.eventId === event.id;\n      });\n      return serializeEvent(_objectSpread(_objectSpread({}, event), {}, {\n        participants: participants\n      }));\n    });\n  },\n  event: function event(state) {\n    return serializeEvent(state.event);\n  },\n  dayEvents: function dayEvents(state) {\n    return state.events.map(function (event) {\n      return serializeEvent(event);\n    }).filter(function (event) {\n      return isDateWithinInterval(state.clickedDate, event.startDate, event.endDate);\n    }).sort(compareDates);\n  },\n  isEditMode: function isEditMode(state) {\n    return state.isEditMode;\n  },\n  clickedDate: function clickedDate(state) {\n    return state.clickedDate;\n  },\n  participants: function participants(state) {\n    return state.participants;\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  },\n  appendParticipant: function appendParticipant(state, participant) {\n    if (state.event) {\n      state.event.participants = [].concat(_toConsumableArray(state.event.participants), [participant]);\n    }\n\n    state.participants = [].concat(_toConsumableArray(state.participants), [participant]);\n  },\n  setParticipants: function setParticipants(state, participants) {\n    return state.participants = participants;\n  } // 新しく追加されたミューテーション\n\n};\nvar actions = {\n  fetchEvents: function fetchEvents(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  fetchParticipants: function fetchParticipants(_ref2) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/participants\"));\n\n            case 3:\n              response = _context2.sent;\n              commit('setParticipants', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  createEvent: function createEvent(_ref3, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              console.log('createEvent', event);\n              _context3.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/events\"), event);\n\n            case 4:\n              response = _context3.sent;\n              commit('appendEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  deleteEvent: function deleteEvent(_ref4, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/events/\").concat(id));\n\n            case 3:\n              response = _context4.sent;\n              commit('removeEvent', response.data);\n              commit('resetEvent');\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  updateEvent: function updateEvent(_ref5, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/events/\").concat(event.id), event);\n\n            case 3:\n              response = _context5.sent;\n              commit('updateEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  createParticipant: function createParticipant(_ref6, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref6.commit;\n              _context6.next = 3;\n              return axios.post(\"\".concat(apiUrl, \"/participants\"), participant);\n\n            case 3:\n              response = _context6.sent;\n              commit('appendParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  setEvent: function setEvent(_ref7, event) {\n    var commit = _ref7.commit;\n    commit('setEvent', event);\n  },\n  setEditMode: function setEditMode(_ref8, bool) {\n    var commit = _ref8.commit;\n    commit('setEditMode', bool);\n  },\n  setClickedDate: function setClickedDate(_ref9, date) {\n    var commit = _ref9.commit;\n    commit('setClickedDate', date);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/events.js"],"names":["axios","isDateWithinInterval","compareDates","serializeEvent","apiUrl","state","events","event","isEditMode","clickedDate","participants","getters","filter","map","participant","eventId","id","dayEvents","startDate","endDate","sort","mutations","setEvents","appendEvent","setEvent","removeEvent","e","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","appendParticipant","setParticipants","actions","fetchEvents","commit","get","response","data","fetchParticipants","createEvent","console","log","post","deleteEvent","put","createParticipant","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: []\n};\n\nconst getters = {\n  events: (state, getters) =>\n  state.events\n    .filter(event => event)\n    .map(event => {\n      const participants = getters.participants.filter(participant => participant.eventId === event.id);\n      return serializeEvent({ ...event, participants });\n    }),\n  event: state => serializeEvent(state.event),\n  dayEvents: state =>\n    state.events\n      .map(event => serializeEvent(event))\n      .filter(event =>\n        isDateWithinInterval(state.clickedDate, event.startDate, event.endDate)\n      )\n      .sort(compareDates),\n  isEditMode: state => state.isEditMode,\n  clickedDate: state => state.clickedDate,\n  participants: state => state.participants\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date),\n  appendParticipant: (state, participant) => {\n    if (state.event) {\n      state.event.participants = [...state.event.participants, participant];\n    }\n    state.participants = [...state.participants, participant];\n  },\n  setParticipants: (state, participants) => (state.participants = participants) // 新しく追加されたミューテーション\n};\n\nconst actions = {\n  async fetchEvents({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async fetchParticipants({ commit }) {\n    const response = await axios.get(`${apiUrl}/participants`);\n    commit('setParticipants', response.data);\n  },\n  async createEvent({ commit }, event) {\n    console.log('createEvent', event);\n    const response = await axios.post(`${apiUrl}/events`, event);\n    commit('appendEvent', response.data);\n  },\n  async deleteEvent({ commit }, id) {\n    const response = await axios.delete(`${apiUrl}/events/${id}`);\n    commit('removeEvent', response.data);\n    commit('resetEvent');\n  },\n  async updateEvent({ commit }, event) {\n    const response = await axios.put(`${apiUrl}/events/${event.id}`, event);\n    commit('updateEvent', response.data);\n  },\n  async createParticipant({ commit }, participant) {\n    const response = await axios.post(`${apiUrl}/participants`, participant);\n    commit('appendParticipant', response.data);\n  },\n  setEvent({ commit }, event) {\n    commit('setEvent', event);\n  },\n  setEditMode({ commit }, bool) {\n    commit('setEditMode', bool);\n  },\n  setClickedDate({ commit }, date) {\n    commit('setClickedDate', date);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}