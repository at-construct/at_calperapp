{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Components\nimport { VData } from '../VData';\nimport VDataFooter from './VDataFooter'; // Mixins\n\nimport Mobile from '../../mixins/mobile';\nimport Themeable from '../../mixins/themeable'; // Helpers\n\nimport mixins from '../../util/mixins';\nimport { deepEqual, getObjectValueByPath, getPrefixedScopedSlots, getSlot, camelizeObjectKeys, keyCodes } from '../../util/helpers';\nimport { breaking, removed } from '../../util/console';\n/* @vue/component */\n\nexport default mixins(Mobile, Themeable).extend({\n  name: 'v-data-iterator',\n  props: _objectSpread(_objectSpread({}, VData.options.props), {}, {\n    itemKey: {\n      type: String,\n      default: 'id'\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    singleSelect: Boolean,\n    expanded: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    mobileBreakpoint: _objectSpread(_objectSpread({}, Mobile.options.props.mobileBreakpoint), {}, {\n      default: 600\n    }),\n    singleExpand: Boolean,\n    loading: [Boolean, String],\n    noResultsText: {\n      type: String,\n      default: '$vuetify.dataIterator.noResultsText'\n    },\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText'\n    },\n    loadingText: {\n      type: String,\n      default: '$vuetify.dataIterator.loadingText'\n    },\n    hideDefaultFooter: Boolean,\n    footerProps: Object,\n    selectableKey: {\n      type: String,\n      default: 'isSelectable'\n    }\n  }),\n  data: function data() {\n    return {\n      selection: {},\n      expansion: {},\n      internalCurrentItems: [],\n      shiftKeyDown: false,\n      lastEntry: -1\n    };\n  },\n  computed: {\n    everyItem: function everyItem() {\n      var _this = this;\n\n      return !!this.selectableItems.length && this.selectableItems.every(function (i) {\n        return _this.isSelected(i);\n      });\n    },\n    someItems: function someItems() {\n      var _this2 = this;\n\n      return this.selectableItems.some(function (i) {\n        return _this2.isSelected(i);\n      });\n    },\n    sanitizedFooterProps: function sanitizedFooterProps() {\n      return camelizeObjectKeys(this.footerProps);\n    },\n    selectableItems: function selectableItems() {\n      var _this3 = this;\n\n      return this.internalCurrentItems.filter(function (item) {\n        return _this3.isSelectable(item);\n      });\n    }\n  },\n  watch: {\n    value: {\n      handler: function handler(value) {\n        var _this4 = this;\n\n        this.selection = value.reduce(function (selection, item) {\n          selection[getObjectValueByPath(item, _this4.itemKey)] = item;\n          return selection;\n        }, {});\n      },\n      immediate: true\n    },\n    selection: function selection(value, old) {\n      if (deepEqual(Object.keys(value), Object.keys(old))) return;\n      this.$emit('input', Object.values(value));\n    },\n    expanded: {\n      handler: function handler(value) {\n        var _this5 = this;\n\n        this.expansion = value.reduce(function (expansion, item) {\n          expansion[getObjectValueByPath(item, _this5.itemKey)] = true;\n          return expansion;\n        }, {});\n      },\n      immediate: true\n    },\n    expansion: function expansion(value, old) {\n      var _this6 = this;\n\n      if (deepEqual(value, old)) return;\n      var keys = Object.keys(value).filter(function (k) {\n        return value[k];\n      });\n      var expanded = !keys.length ? [] : this.items.filter(function (i) {\n        return keys.includes(String(getObjectValueByPath(i, _this6.itemKey)));\n      });\n      this.$emit('update:expanded', expanded);\n    }\n  },\n  created: function created() {\n    var _this7 = this;\n\n    var breakingProps = [['disable-initial-sort', 'sort-by'], ['filter', 'custom-filter'], ['pagination', 'options'], ['total-items', 'server-items-length'], ['hide-actions', 'hide-default-footer'], ['rows-per-page-items', 'footer-props.items-per-page-options'], ['rows-per-page-text', 'footer-props.items-per-page-text'], ['prev-icon', 'footer-props.prev-icon'], ['next-icon', 'footer-props.next-icon']];\n    /* istanbul ignore next */\n\n    breakingProps.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          original = _ref2[0],\n          replacement = _ref2[1];\n\n      if (_this7.$attrs.hasOwnProperty(original)) breaking(original, replacement, _this7);\n    });\n    var removedProps = ['expand', 'content-class', 'content-props', 'content-tag'];\n    /* istanbul ignore next */\n\n    removedProps.forEach(function (prop) {\n      if (_this7.$attrs.hasOwnProperty(prop)) removed(prop);\n    });\n  },\n  mounted: function mounted() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  },\n  methods: {\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode !== keyCodes.shift) return;\n      this.shiftKeyDown = true;\n    },\n    onKeyUp: function onKeyUp(e) {\n      if (e.keyCode !== keyCodes.shift) return;\n      this.shiftKeyDown = false;\n    },\n    toggleSelectAll: function toggleSelectAll(value) {\n      var selection = Object.assign({}, this.selection);\n\n      for (var i = 0; i < this.selectableItems.length; i++) {\n        var item = this.selectableItems[i];\n        if (!this.isSelectable(item)) continue;\n        var key = getObjectValueByPath(item, this.itemKey);\n        if (value) selection[key] = item;else delete selection[key];\n      }\n\n      this.selection = selection;\n      this.$emit('toggle-select-all', {\n        items: this.internalCurrentItems,\n        value: value\n      });\n    },\n    isSelectable: function isSelectable(item) {\n      return getObjectValueByPath(item, this.selectableKey) !== false;\n    },\n    isSelected: function isSelected(item) {\n      return !!this.selection[getObjectValueByPath(item, this.itemKey)] || false;\n    },\n    select: function select(item) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var emit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (!this.isSelectable(item)) return;\n      var selection = this.singleSelect ? {} : Object.assign({}, this.selection);\n      var key = getObjectValueByPath(item, this.itemKey);\n      if (value) selection[key] = item;else delete selection[key];\n      var index = this.selectableItems.findIndex(function (x) {\n        return x.name === item.name;\n      });\n      if (this.lastEntry === -1) this.lastEntry = index;else if (this.shiftKeyDown && !this.singleSelect && emit) this.multipleSelect(value, emit, selection, index);\n      this.lastEntry = index;\n\n      if (this.singleSelect && emit) {\n        var keys = Object.keys(this.selection);\n        var old = keys.length && getObjectValueByPath(this.selection[keys[0]], this.itemKey);\n        old && old !== key && this.$emit('item-selected', {\n          item: this.selection[old],\n          value: false\n        });\n      }\n\n      this.selection = selection;\n      emit && this.$emit('item-selected', {\n        item: item,\n        value: value\n      });\n    },\n    multipleSelect: function multipleSelect() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var selection = arguments.length > 2 ? arguments[2] : undefined;\n      var index = arguments.length > 3 ? arguments[3] : undefined;\n      var start = index < this.lastEntry ? index : this.lastEntry;\n      var end = index < this.lastEntry ? this.lastEntry : index;\n\n      for (var i = start; i <= end; i++) {\n        var currentItem = this.selectableItems[i];\n        var key = getObjectValueByPath(currentItem, this.itemKey);\n        if (value) selection[key] = currentItem;else delete selection[key];\n        emit && this.$emit('item-selected', {\n          currentItem: currentItem,\n          value: value\n        });\n      }\n    },\n    isExpanded: function isExpanded(item) {\n      return this.expansion[getObjectValueByPath(item, this.itemKey)] || false;\n    },\n    expand: function expand(item) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var expansion = this.singleExpand ? {} : Object.assign({}, this.expansion);\n      var key = getObjectValueByPath(item, this.itemKey);\n      if (value) expansion[key] = true;else delete expansion[key];\n      this.expansion = expansion;\n      this.$emit('item-expanded', {\n        item: item,\n        value: value\n      });\n    },\n    createItemProps: function createItemProps(item, index) {\n      var _this8 = this;\n\n      return {\n        item: item,\n        index: index,\n        select: function select(v) {\n          return _this8.select(item, v);\n        },\n        isSelected: this.isSelected(item),\n        expand: function expand(v) {\n          return _this8.expand(item, v);\n        },\n        isExpanded: this.isExpanded(item),\n        isMobile: this.isMobile\n      };\n    },\n    genEmptyWrapper: function genEmptyWrapper(content) {\n      return this.$createElement('div', content);\n    },\n    genEmpty: function genEmpty(originalItemsLength, filteredItemsLength) {\n      if (originalItemsLength === 0 && this.loading) {\n        var loading = this.$slots.loading || this.$vuetify.lang.t(this.loadingText);\n        return this.genEmptyWrapper(loading);\n      } else if (originalItemsLength === 0) {\n        var noData = this.$slots['no-data'] || this.$vuetify.lang.t(this.noDataText);\n        return this.genEmptyWrapper(noData);\n      } else if (filteredItemsLength === 0) {\n        var noResults = this.$slots['no-results'] || this.$vuetify.lang.t(this.noResultsText);\n        return this.genEmptyWrapper(noResults);\n      }\n\n      return null;\n    },\n    genItems: function genItems(props) {\n      var _this9 = this;\n\n      var empty = this.genEmpty(props.originalItemsLength, props.pagination.itemsLength);\n      if (empty) return [empty];\n\n      if (this.$scopedSlots.default) {\n        return this.$scopedSlots.default(_objectSpread(_objectSpread({}, props), {}, {\n          isSelected: this.isSelected,\n          select: this.select,\n          isExpanded: this.isExpanded,\n          isMobile: this.isMobile,\n          expand: this.expand\n        }));\n      }\n\n      if (this.$scopedSlots.item) {\n        return props.items.map(function (item, index) {\n          return _this9.$scopedSlots.item(_this9.createItemProps(item, index));\n        });\n      }\n\n      return [];\n    },\n    genFooter: function genFooter(props) {\n      if (this.hideDefaultFooter) return null;\n      var data = {\n        props: _objectSpread(_objectSpread({}, this.sanitizedFooterProps), {}, {\n          options: props.options,\n          pagination: props.pagination\n        }),\n        on: {\n          'update:options': function updateOptions(value) {\n            return props.updateOptions(value);\n          }\n        }\n      };\n      var scopedSlots = getPrefixedScopedSlots('footer.', this.$scopedSlots);\n      return this.$createElement(VDataFooter, _objectSpread({\n        scopedSlots: scopedSlots\n      }, data));\n    },\n    genDefaultScopedSlot: function genDefaultScopedSlot(props) {\n      var outerProps = _objectSpread(_objectSpread({}, props), {}, {\n        someItems: this.someItems,\n        everyItem: this.everyItem,\n        toggleSelectAll: this.toggleSelectAll\n      });\n\n      return this.$createElement('div', {\n        staticClass: 'v-data-iterator'\n      }, [getSlot(this, 'header', outerProps, true), this.genItems(props), this.genFooter(props), getSlot(this, 'footer', outerProps, true)]);\n    }\n  },\n  render: function render() {\n    var _this10 = this;\n\n    return this.$createElement(VData, {\n      props: this.$props,\n      on: {\n        'update:options': function updateOptions(v, old) {\n          return !deepEqual(v, old) && _this10.$emit('update:options', v);\n        },\n        'update:page': function updatePage(v) {\n          return _this10.$emit('update:page', v);\n        },\n        'update:items-per-page': function updateItemsPerPage(v) {\n          return _this10.$emit('update:items-per-page', v);\n        },\n        'update:sort-by': function updateSortBy(v) {\n          return _this10.$emit('update:sort-by', v);\n        },\n        'update:sort-desc': function updateSortDesc(v) {\n          return _this10.$emit('update:sort-desc', v);\n        },\n        'update:group-by': function updateGroupBy(v) {\n          return _this10.$emit('update:group-by', v);\n        },\n        'update:group-desc': function updateGroupDesc(v) {\n          return _this10.$emit('update:group-desc', v);\n        },\n        pagination: function pagination(v, old) {\n          return !deepEqual(v, old) && _this10.$emit('pagination', v);\n        },\n        'current-items': function currentItems(v) {\n          _this10.internalCurrentItems = v;\n\n          _this10.$emit('current-items', v);\n        },\n        'page-count': function pageCount(v) {\n          return _this10.$emit('page-count', v);\n        }\n      },\n      scopedSlots: {\n        default: this.genDefaultScopedSlot\n      }\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}