{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      descriptionLimit: 60,\n      entries: [],\n      isLoading: false,\n      model: null,\n      search: null\n    };\n  },\n  computed: {\n    fields: function fields() {\n      var _this = this;\n\n      if (!this.model) return [];\n      return Object.keys(this.model).map(function (key) {\n        return {\n          key: key,\n          value: _this.model[key] || 'n/a'\n        };\n      });\n    },\n    items: function items() {\n      var _this2 = this;\n\n      return this.entries.map(function (entry) {\n        var Description = entry.Description.length > _this2.descriptionLimit ? entry.Description.slice(0, _this2.descriptionLimit) + '...' : entry.Description;\n        return Object.assign({}, entry, {\n          Description: Description\n        });\n      });\n    }\n  },\n  watch: {\n    search: function search(val) {\n      var _this3 = this;\n\n      // Items have already been loaded\n      if (this.items.length > 0) return; // Items have already been requested\n\n      if (this.isLoading) return;\n      this.isLoading = true; // Lazily load input items\n\n      fetch('users').then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        var count = res.count,\n            entries = res.entries;\n        _this3.count = count;\n        _this3.entries = entries;\n      })[\"catch\"](function (err) {\n        console.log(err);\n      })[\"finally\"](function () {\n        return _this3.isLoading = false;\n      });\n    }\n  }\n};","map":{"version":3,"sources":["TestUserSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,gBAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA,IAJA;AAKA,MAAA,MAAA,EAAA;AALA,KAAA;AAAA,GADA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,EAAA,OAAA,EAAA;AAEA,aAAA,MAAA,CAAA,IAAA,CAAA,KAAA,KAAA,EAAA,GAAA,CAAA,UAAA,GAAA,EAAA;AACA,eAAA;AACA,UAAA,GAAA,EAAA,GADA;AAEA,UAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AAFA,SAAA;AAIA,OALA,CAAA;AAMA,KAVA;AAWA,IAAA,KAXA,mBAWA;AAAA;;AACA,aAAA,KAAA,OAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,WAAA,GAAA,KAAA,CAAA,WAAA,CAAA,MAAA,GAAA,MAAA,CAAA,gBAAA,GACA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,gBAAA,IAAA,KADA,GAEA,KAAA,CAAA,WAFA;AAIA,eAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAA,UAAA,WAAA,EAAA;AAAA,SAAA,CAAA;AACA,OANA,CAAA;AAOA;AAnBA,GATA;AA+BA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AAAA;;AACA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,OAFA,CAIA;;AACA,UAAA,KAAA,SAAA,EAAA;AAEA,WAAA,SAAA,GAAA,IAAA,CAPA,CASA;;AACA,MAAA,KAAA,CAAA,OAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,YAAA,KAAA,GAAA,GAAA,CAAA,KAAA;AAAA,YAAA,OAAA,GAAA,GAAA,CAAA,OAAA;AACA,QAAA,MAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,OAAA;AACA,OANA,WAOA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,OATA,aAUA;AAAA,eAAA,MAAA,CAAA,SAAA,GAAA,KAAA;AAAA,OAVA;AAWA;AAtBA;AA/BA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n<v-autocomplete\n    v-model=\"model\"\n    :items=\"items\"\n    :loading=\"isLoading\"\n    :search-input.sync=\"search\"\n    color=\"white\"\n    item-text=\"Description\"\n    item-value=\"API\"\n    cache-items\n    hide-no-data\n    hide-selected\n    placeholder=\"入力できます\"\n    prepend-icon=\"mdi-database-search\"\n    return-object\n></v-autocomplete>\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      descriptionLimit: 60,\n      entries: [],\n      isLoading: false,\n      model: null,\n      search: null,\n    }),\n\n    computed: {\n      fields () {\n        if (!this.model) return []\n\n        return Object.keys(this.model).map(key => {\n          return {\n            key,\n            value: this.model[key] || 'n/a',\n          }\n        })\n      },\n      items () {\n        return this.entries.map(entry => {\n          const Description = entry.Description.length > this.descriptionLimit\n            ? entry.Description.slice(0, this.descriptionLimit) + '...'\n            : entry.Description\n\n          return Object.assign({}, entry, { Description })\n        })\n      },\n    },\n\n    watch: {\n      search (val) {\n        // Items have already been loaded\n        if (this.items.length > 0) return\n\n        // Items have already been requested\n        if (this.isLoading) return\n\n        this.isLoading = true\n\n        // Lazily load input items\n        fetch('users')\n          .then(res => res.json())\n          .then(res => {\n            const { count, entries } = res\n            this.count = count\n            this.entries = entries\n          })\n          .catch(err => {\n            console.log(err)\n          })\n          .finally(() => (this.isLoading = false))\n      },\n    },\n  }\n</script>\n\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}