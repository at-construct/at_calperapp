{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  props: {\n    value: {\n      type: Array,\n      required: true\n    },\n    participantUsers: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      participantUser: null\n    };\n  },\n  created: function created() {\n    this.fetchParticipantUsers();\n  },\n  computed: _objectSpread({}, mapGetters('participants', ['participantUsers'])),\n  methods: _objectSpread({}, mapActions('participants', ['fetchParticipantUsers']))\n};","map":{"version":3,"sources":["GuestSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GAFA;AAYA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,eAAA,EAAA;AADA,KAAA;AAAA,GAZA;AAeA,EAAA,OAfA,qBAeA;AACA,SAAA,qBAAA;AACA,GAjBA;AAkBA,EAAA,QAAA,oBACA,UAAA,CAAA,cAAA,EAAA,CAAA,kBAAA,CAAA,CADA,CAlBA;AAqBA,EAAA,OAAA,oBACA,UAAA,CAAA,cAAA,EAAA,CACA,uBADA,CAAA,CADA;AArBA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          :items=\"participantUsers\"\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"参加者を追加\"\n          item-text=\"name\"\n          item-value=\"id\"\n          multiple\n          :value=\"participantUser\"\n          @input=\"$emit('update:participantUser', $event)\"\n        >\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'GuestSelectForm',\n  props: {\n    value: {\n      type: Array,\n      required: true,\n    },\n    participantUsers: {\n      type: Array,\n      required: true,\n    }\n  },\n  data: () => ({\n    participantUser: null,\n  }),\n  created() {\n    this.fetchParticipantUsers();\n  },\n  computed: {\n    ...mapGetters('participants', ['participantUsers']),\n  },\n  methods: {\n    ...mapActions('participants', [\n      'fetchParticipantUsers',\n    ])\n  },\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}