{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\nexport default {\n  name: 'CalendarList',\n  components: {\n    CalendarFormDialog: CalendarFormDialog\n  },\n  data: function data() {\n    return {\n      selectedItem: [],\n      selectedGroups: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapGetters('calendars', ['calendars', 'calendar'])), mapGetters('groups', ['groups'])), mapGetters('users', ['users'])), {}, {\n    filteredCalendars: function filteredCalendars() {\n      var facilityCalendar = this.calendars.find(function (calendar) {\n        return calendar.name === '設備';\n      });\n      var otherCalendars = this.calendars.filter(function (calendar) {\n        return calendar.name !== '設備';\n      });\n      return [facilityCalendar].concat(_toConsumableArray(otherCalendars));\n    }\n  }),\n  created: function created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n    this.fetchUsers();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['fetchCalendars', 'updateCalendar', 'deleteCalendar', 'setCalendar'])), mapActions('groups', ['fetchGroups', 'updateGroup', 'deleteGroup', 'setGroup'])), mapActions('users', ['fetchUsers', 'updateUser', 'deleteUser', 'setUser'])), {}, {\n    initCalendar: function initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.setCalendar(null);\n    },\n    edit: function edit(calendar) {\n      this.setCalendar(calendar);\n    },\n    del: function del(calendar) {\n      this.deleteCalendar(calendar.id);\n    },\n    toggleVisibility: function toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    },\n    updateSelection: function updateSelection(selected) {\n      this.selectedGroups = selected.slice(-1);\n    }\n  })\n};","map":{"version":3,"sources":["CalendarList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,kBAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,kBAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,QAAA,8DACA,UAAA,CAAA,WAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,CAAA,CAFA,GAGA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CAHA;AAIA,IAAA,iBAJA,+BAIA;AACA,UAAA,gBAAA,GAAA,KAAA,SAAA,CAAA,IAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,IAAA;AAAA,OAAA,CAAA;AACA,UAAA,cAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,QAAA,CAAA,IAAA,KAAA,IAAA;AAAA,OAAA,CAAA;AACA,cAAA,gBAAA,4BAAA,cAAA;AACA;AARA,IATA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,cAAA;AACA,SAAA,WAAA;AACA,SAAA,UAAA;AACA,GAvBA;AAwBA,EAAA,OAAA,8DACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,gBAHA,EAIA,aAJA,CAAA,CADA,GAOA,UAAA,CAAA,QAAA,EAAA,CACA,aADA,EAEA,aAFA,EAGA,aAHA,EAIA,UAJA,CAAA,CAPA,GAaA,UAAA,CAAA,OAAA,EAAA,CACA,YADA,EAEA,YAFA,EAGA,YAHA,EAIA,SAJA,CAAA,CAbA;AAmBA,IAAA,YAnBA,0BAmBA;AACA,WAAA,WAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAxBA;AAyBA,IAAA,WAzBA,yBAyBA;AACA,WAAA,WAAA,CAAA,IAAA;AACA,KA3BA;AA4BA,IAAA,IA5BA,gBA4BA,QA5BA,EA4BA;AACA,WAAA,WAAA,CAAA,QAAA;AACA,KA9BA;AA+BA,IAAA,GA/BA,eA+BA,QA/BA,EA+BA;AACA,WAAA,cAAA,CAAA,QAAA,CAAA,EAAA;AACA,KAjCA;AAkCA,IAAA,gBAlCA,4BAkCA,QAlCA,EAkCA;AACA,WAAA,cAAA,CAAA,QAAA;AACA,KApCA;AAqCA,IAAA,eArCA,2BAqCA,QArCA,EAqCA;AACA,WAAA,cAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA;AAvCA;AAxBA,CAAA","sourcesContent":["<template>\n  <v-list dense>\n    <v-list-item>\n      <v-list-item-content>\n        <v-subheader>カレンダー追加</v-subheader>\n      </v-list-item-content>\n      <v-list-item-action>\n        <v-btn icon @click=\"initCalendar\">\n          <v-icon size=\"16px\">mdi-plus</v-icon>\n        </v-btn>\n      </v-list-item-action>\n    </v-list-item>\n\n    <!-- <v-list-item-group :value=\"selectedItem\">\n      <v-list-item v-for=\"calendar in calendars\" :key=\"calendar.id\">\n        <v-list-item-content class=\"pa-1\">\n          <v-checkbox\n            dense\n            v-model=\"calendar.visibility\"\n            :color=\"calendar.color\"\n            :label=\"calendar.name\"\n            @click=\"toggleVisibility(calendar)\"\n            class=\"pb-2\"\n            hide-details=\"true\"\n          ></v-checkbox>\n        </v-list-item-content>\n        <v-list-item-action class=\"ma-0\">\n          <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn icon v-on=\"on\">\n                <v-icon size=\"12px\">mdi-dots-vertical</v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n              <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n            </v-list>\n          </v-menu>\n        </v-list-item-action>\n      </v-list-item>\n    </v-list-item-group> -->\n\n<v-list-item-group :value=\"selectedItem\">\n  <!-- 設備を除外した表示 -->\n  <v-list-group v-for=\"calendar in filteredCalendars\" :key=\"calendar.id\" class=\"mb-3\">\n    <template v-slot:activator>\n      <v-list-item-title>\n        <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n        {{ calendar.name }}\n        <v-btn icon @click=\"edit(calendar)\">\n          <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn icon v-on=\"on\">\n                <v-icon size=\"12px\">mdi-pencil</v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n              <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n            </v-list>\n          </v-menu>\n        </v-btn>\n      </v-list-item-title>\n    </template>\n\n    <v-list-item-group>\n      <v-list-item v-for=\"group in groups.filter(group => group.calendar.id === calendar.id)\" :key=\"group.id\">\n        <v-list-item-content class=\"py-0\">\n          <div class=\"d-flex align-center\" v-if=\"calendar.name !== '設備'\">\n            <v-checkbox\n              dense\n              :value=\"group.id\"\n              v-model=\"selectedGroups\"\n              @change=\"updateSelection(selectedGroups)\"\n              :label=\"group.user.name\"\n              :color=\"calendar.color\"\n              class=\"pb-2 ml-1\"\n              hide-details=\"true\"\n            ></v-checkbox>\n          </div>\n        </v-list-item-content>\n      </v-list-item>\n    </v-list-item-group>\n\n  </v-list-group>\n  <!-- 設備のみの表示 -->\n  <v-list-group v-for=\"calendar in calendars.filter(calendar => calendar.name === '設備')\" :key=\"calendar.id\" class=\"mb-3\">\n    <template v-slot:activator>\n      <v-list-item-title>\n        <v-icon :color=\"calendar.color\" class=\"mr-2\" small>mdi-square</v-icon>\n        {{ calendar.name }}\n        <v-btn icon @click=\"edit(calendar)\">\n          <v-menu transition=\"scale-transition\" offset-y min-width=\"100px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn icon v-on=\"on\">\n                <v-icon size=\"12px\">mdi-pencil</v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"edit(calendar)\">編集</v-list-item>\n              <v-list-item @click=\"del(calendar)\">削除</v-list-item>\n            </v-list>\n          </v-menu>\n        </v-btn>\n      </v-list-item-title>\n    </template>\n\n\n\n    <v-dialog\n      :value=\"calendar !== null\"\n      @click:outside=\"closeDialog\"\n      width=\"600\"\n    >\n      <CalendarFormDialog v-if=\"calendar !== null\" />\n    </v-dialog>\n  </v-list>\n</template>\n\n\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport CalendarFormDialog from './CalendarFormDialog';\n\nexport default {\n  name: 'CalendarList',\n  components: { CalendarFormDialog },\n  data() {\n    return {\n      selectedItem: [],\n      selectedGroups: []\n    }\n  },\n  computed: {\n    ...mapGetters('calendars', ['calendars', 'calendar']),\n    ...mapGetters('groups', ['groups']),\n    ...mapGetters('users', ['users']),\n    filteredCalendars() {\n      const facilityCalendar = this.calendars.find(calendar => calendar.name === '設備');\n      const otherCalendars = this.calendars.filter(calendar => calendar.name !== '設備');\n      return [facilityCalendar, ...otherCalendars];\n    },\n  },\n  created() {\n    this.fetchCalendars();\n    this.fetchGroups();\n    this.fetchUsers();\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'fetchCalendars',\n      'updateCalendar',\n      'deleteCalendar',\n      'setCalendar'\n    ]),\n    ...mapActions('groups', [\n      'fetchGroups',\n      'updateGroup',\n      'deleteGroup',\n      'setGroup'\n    ]),\n    ...mapActions('users', [\n      'fetchUsers',\n      'updateUser',\n      'deleteUser',\n      'setUser'\n    ]),\n    initCalendar() {\n      this.setCalendar({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog() {\n      this.setCalendar(null);\n    },\n    edit(calendar) {\n      this.setCalendar(calendar);\n    },\n    del(calendar) {\n      this.deleteCalendar(calendar.id);\n    },\n    toggleVisibility(calendar) {\n      this.updateCalendar(calendar);\n    },\n    updateSelection(selected) {\n      this.selectedGroups = selected.slice(-1);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}