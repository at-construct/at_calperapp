{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport { validationMixin } from 'vuelidate';\nimport { required } from 'vuelidate/lib/validators';\nimport DialogSection from '../layouts/DialogSection';\nimport ColorForm from '../forms/ColorForm';\nimport GroupCheckBox from '../forms/GroupCheckBox';\nexport default {\n  name: 'CalendarFormDialog',\n  mixins: [validationMixin],\n  components: {\n    DialogSection: DialogSection,\n    ColorForm: ColorForm,\n    GroupCheckBox: GroupCheckBox\n  },\n  data: function data() {\n    return {\n      name: '',\n      color: null\n    };\n  },\n  validations: {\n    name: {\n      required: required\n    }\n  },\n  computed: _objectSpread({}, mapGetters('calendars', ['calendar'])),\n  created: function created() {\n    this.name = this.calendar.name;\n    this.color = this.calendar.color;\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('calendars', ['createCalendar', 'updateCalendar', 'setCalendar'])), {}, {\n    close: function close() {\n      this.setCalendar(null);\n    },\n    submit: function submit() {\n      if (this.$v.$invalid) {\n        return;\n      }\n\n      var params = _objectSpread(_objectSpread(_objectSpread({}, this.calendar), this.user), {}, {\n        name: this.name,\n        color: this.color\n      });\n\n      if (params.id) {\n        this.updateCalendar(params);\n      } else {\n        this.createCalendar(params);\n      }\n\n      this.close();\n    }\n  })\n};","map":{"version":3,"sources":["CalendarFormDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,aAAA,MAAA,0BAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,OAAA,aAAA,MAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,MAAA,EAAA,CAAA,eAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA,aAAA;AAAA,IAAA,SAAA,EAAA,SAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GAHA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAAA,GAJA;AAQA,EAAA,WAAA,EAAA;AACA,IAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AADA,GARA;AAWA,EAAA,QAAA,oBACA,UAAA,CAAA,WAAA,EAAA,CAAA,UAAA,CAAA,CADA,CAXA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,IAAA,GAAA,KAAA,QAAA,CAAA,IAAA;AACA,SAAA,KAAA,GAAA,KAAA,QAAA,CAAA,KAAA;AACA,GAjBA;AAkBA,EAAA,OAAA,kCACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,aAHA,CAAA,CADA;AAMA,IAAA,KANA,mBAMA;AACA,WAAA,WAAA,CAAA,IAAA;AACA,KARA;AASA,IAAA,MATA,oBASA;AACA,UAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA;AACA;;AACA,UAAA,MAAA,iDACA,KAAA,QADA,GAEA,KAAA,IAFA;AAGA,QAAA,IAAA,EAAA,KAAA,IAHA;AAIA,QAAA,KAAA,EAAA,KAAA;AAJA,QAAA;;AAMA,UAAA,MAAA,CAAA,EAAA,EAAA;AACA,aAAA,cAAA,CAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,cAAA,CAAA,MAAA;AACA;;AACA,WAAA,KAAA;AACA;AAzBA;AAlBA,CAAA","sourcesContent":["<template>\n  <v-card class=\"pb-12\">\n<!-- ダイアログの右上クローズボタン未完 -->\n    <!-- <v-card-actions class=\"d-flex justify-end pa-2\">\n      <v-btn icon @click=\"closeDialog\">\n        <v-icon size=\"20px\">mdi-close</v-icon>\n      </v-btn>\n    </v-card-actions> -->\n\n    <v-card-text>\n      <DialogSection icon=\"mdi-square\" :color=\"color\">\n        <v-text-field v-model=\"name\" label=\"カレンダー名\"></v-text-field>\n      </DialogSection>\n      <DialogSection icon=\"mdi-palette\">\n        <ColorForm v-model=\"color\" />\n      </DialogSection>\n      <DialogSection icon=\"mdi-account-group\">\n        <GroupCheckBox v-model=\"user\" />\n      </DialogSection>\n    </v-card-text>\n    <v-card-actions class=\"d-flex justify-end\">\n      <v-btn @click=\"close\">キャンセル</v-btn>\n      <v-btn @click=\"submit\" :disabled=\"$v.$invalid\">保存</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport { validationMixin } from 'vuelidate';\nimport { required } from 'vuelidate/lib/validators';\nimport DialogSection from '../layouts/DialogSection';\nimport ColorForm from '../forms/ColorForm';\nimport GroupCheckBox from '../forms/GroupCheckBox';\n\nexport default {\n  name: 'CalendarFormDialog',\n  mixins: [validationMixin],\n  components: { DialogSection, ColorForm, GroupCheckBox },\n  data: () => ({\n    name: '',\n    color: null\n  }),\n  validations: {\n    name: { required }\n  },\n  computed: {\n    ...mapGetters('calendars', ['calendar']),\n  },\n  created() {\n    this.name = this.calendar.name;\n    this.color = this.calendar.color;\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'createCalendar',\n      'updateCalendar',\n      'setCalendar'\n    ]),\n    close() {\n      this.setCalendar(null);\n    },\n    submit() {\n      if (this.$v.$invalid) {\n        return;\n      }\n      const params = {\n        ...this.calendar,\n        ...this.user,\n        name: this.name,\n        color: this.color\n      };\n      if (params.id) {\n        this.updateCalendar(params);\n      } else {\n        this.createCalendar(params);\n      }\n      this.close();\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}