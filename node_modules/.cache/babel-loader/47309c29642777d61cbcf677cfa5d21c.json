{"ast":null,"code":"import { C as onSpaceOrEnter, p as last_1, W as pad } from './helpers-8d5d752d.js';\nimport { resolveComponent, openBlock, createBlock, createVNode, renderSlot, toDisplayString, Fragment, renderList } from 'vue';\nimport { k as childMixin } from './index-fcd0222c.js';\nimport { s as styleInject } from './style-inject.es-1f59c1d0.js';\nimport script$1 from './SvgIcon.js';\n/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\n\nfunction head(array) {\n  return array && array.length ? array[0] : undefined;\n}\n\nvar head_1 = head;\nvar _yearGroupCount = 12;\nvar script = {\n  name: 'CalendarNav',\n  emits: ['input'],\n  components: {\n    SvgIcon: script$1\n  },\n  mixins: [childMixin],\n  props: {\n    value: {\n      type: Object,\n      default: function _default() {\n        return {\n          month: 0,\n          year: 0\n        };\n      }\n    },\n    validator: {\n      type: Function,\n      default: function _default() {\n        return function () {\n          return true;\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      monthMode: true,\n      yearIndex: 0,\n      yearGroupIndex: 0,\n      onSpaceOrEnter: onSpaceOrEnter\n    };\n  },\n  computed: {\n    month: function month() {\n      return this.value ? this.value.month || 0 : 0;\n    },\n    year: function year() {\n      return this.value ? this.value.year || 0 : 0;\n    },\n    title: function title() {\n      return this.monthMode ? this.yearIndex : \"\".concat(this.firstYear, \" - \").concat(this.lastYear);\n    },\n    monthItems: function monthItems() {\n      return this.getMonthItems(this.yearIndex);\n    },\n    yearItems: function yearItems() {\n      return this.getYearItems(this.yearGroupIndex);\n    },\n    prevItemsEnabled: function prevItemsEnabled() {\n      return this.monthMode ? this.prevMonthItemsEnabled : this.prevYearItemsEnabled;\n    },\n    nextItemsEnabled: function nextItemsEnabled() {\n      return this.monthMode ? this.nextMonthItemsEnabled : this.nextYearItemsEnabled;\n    },\n    prevMonthItemsEnabled: function prevMonthItemsEnabled() {\n      return this.getMonthItems(this.yearIndex - 1).some(function (i) {\n        return !i.isDisabled;\n      });\n    },\n    nextMonthItemsEnabled: function nextMonthItemsEnabled() {\n      return this.getMonthItems(this.yearIndex + 1).some(function (i) {\n        return !i.isDisabled;\n      });\n    },\n    prevYearItemsEnabled: function prevYearItemsEnabled() {\n      return this.getYearItems(this.yearGroupIndex - 1).some(function (i) {\n        return !i.isDisabled;\n      });\n    },\n    nextYearItemsEnabled: function nextYearItemsEnabled() {\n      return this.getYearItems(this.yearGroupIndex + 1).some(function (i) {\n        return !i.isDisabled;\n      });\n    },\n    activeItems: function activeItems() {\n      return this.monthMode ? this.monthItems : this.yearItems;\n    },\n    firstYear: function firstYear() {\n      return head_1(this.yearItems.map(function (i) {\n        return i.year;\n      }));\n    },\n    lastYear: function lastYear() {\n      return last_1(this.yearItems.map(function (i) {\n        return i.year;\n      }));\n    }\n  },\n  watch: {\n    year: function year() {\n      this.yearIndex = this.year;\n    },\n    yearIndex: function yearIndex(val) {\n      this.yearGroupIndex = this.getYearGroupIndex(val);\n    },\n    value: function value() {\n      this.focusFirstItem();\n    }\n  },\n  created: function created() {\n    this.yearIndex = this.year;\n  },\n  mounted: function mounted() {\n    this.focusFirstItem();\n  },\n  methods: {\n    focusFirstItem: function focusFirstItem() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        // Set focus on the first enabled nav item\n        var focusableEl = _this.$refs.navContainer.querySelector('.vc-nav-item:not(.is-disabled)');\n\n        if (focusableEl) {\n          focusableEl.focus();\n        }\n      });\n    },\n    getItemClasses: function getItemClasses(_ref) {\n      var isActive = _ref.isActive,\n          isCurrent = _ref.isCurrent,\n          isDisabled = _ref.isDisabled;\n      var classes = ['vc-nav-item'];\n\n      if (isActive) {\n        classes.push('is-active');\n      } else if (isCurrent) {\n        classes.push('is-current');\n      }\n\n      if (isDisabled) {\n        classes.push('is-disabled');\n      }\n\n      return classes;\n    },\n    getYearGroupIndex: function getYearGroupIndex(year) {\n      return Math.floor(year / _yearGroupCount);\n    },\n    getMonthItems: function getMonthItems(year) {\n      var _this2 = this;\n\n      var _this$pageForDate = this.pageForDate(new Date()),\n          thisMonth = _this$pageForDate.month,\n          thisYear = _this$pageForDate.year;\n\n      return this.locale.getMonthDates().map(function (d, i) {\n        var month = i + 1;\n        return {\n          month: month,\n          year: year,\n          id: \"\".concat(year, \".\").concat(pad(month, 2)),\n          label: _this2.locale.format(d, _this2.masks.navMonths),\n          ariaLabel: _this2.locale.format(d, 'MMMM YYYY'),\n          isActive: month === _this2.month && year === _this2.year,\n          isCurrent: month === thisMonth && year === thisYear,\n          isDisabled: !_this2.validator({\n            month: month,\n            year: year\n          }),\n          click: function click() {\n            return _this2.monthClick(month, year);\n          }\n        };\n      });\n    },\n    getYearItems: function getYearItems(yearGroupIndex) {\n      var _this3 = this;\n\n      var _this$pageForDate2 = this.pageForDate(new Date()),\n          _ = _this$pageForDate2._,\n          thisYear = _this$pageForDate2.year;\n\n      var startYear = yearGroupIndex * _yearGroupCount;\n      var endYear = startYear + _yearGroupCount;\n      var items = [];\n\n      var _loop = function _loop(year) {\n        var enabled = false;\n\n        for (var month = 1; month < 12; month++) {\n          enabled = _this3.validator({\n            month: month,\n            year: year\n          });\n          if (enabled) break;\n        }\n\n        items.push({\n          year: year,\n          id: year,\n          label: year,\n          ariaLabel: year,\n          isActive: year === _this3.year,\n          isCurrent: year === thisYear,\n          isDisabled: !enabled,\n          click: function click() {\n            return _this3.yearClick(year);\n          }\n        });\n      };\n\n      for (var year = startYear; year < endYear; year += 1) {\n        _loop(year);\n      }\n\n      return items;\n    },\n    monthClick: function monthClick(month, year) {\n      if (this.validator({\n        month: month,\n        year: year\n      })) {\n        this.$emit('input', {\n          month: month,\n          year: year\n        });\n      }\n    },\n    yearClick: function yearClick(year) {\n      this.yearIndex = year;\n      this.monthMode = true;\n      this.focusFirstItem();\n    },\n    toggleMode: function toggleMode() {\n      this.monthMode = !this.monthMode;\n    },\n    movePrev: function movePrev() {\n      if (!this.prevItemsEnabled) return;\n\n      if (this.monthMode) {\n        this.movePrevYear();\n      }\n\n      this.movePrevYearGroup();\n    },\n    moveNext: function moveNext() {\n      if (!this.nextItemsEnabled) return;\n\n      if (this.monthMode) {\n        this.moveNextYear();\n      }\n\n      this.moveNextYearGroup();\n    },\n    movePrevYear: function movePrevYear() {\n      this.yearIndex--;\n    },\n    moveNextYear: function moveNextYear() {\n      this.yearIndex++;\n    },\n    movePrevYearGroup: function movePrevYearGroup() {\n      this.yearGroupIndex--;\n    },\n    moveNextYearGroup: function moveNextYearGroup() {\n      this.yearGroupIndex++;\n    }\n  }\n};\nvar _hoisted_1 = {\n  class: \"vc-nav-container\",\n  ref: \"navContainer\"\n};\nvar _hoisted_2 = {\n  class: \"vc-nav-header\"\n};\nvar _hoisted_3 = {\n  class: \"vc-nav-items\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_svg_icon = resolveComponent(\"svg-icon\");\n\n  return openBlock(), createBlock(\"div\", _hoisted_1, [createVNode(\"div\", _hoisted_2, [createVNode(\"span\", {\n    role: \"button\",\n    class: [\"vc-nav-arrow is-left\", {\n      'is-disabled': !$options.prevItemsEnabled\n    }],\n    tabindex: $options.prevItemsEnabled ? 0 : undefined,\n    onClick: _cache[1] || (_cache[1] = function () {\n      return $options.movePrev.apply($options, arguments);\n    }),\n    onKeydown: _cache[2] || (_cache[2] = function (e) {\n      return $data.onSpaceOrEnter(e, $options.movePrev);\n    })\n  }, [renderSlot(_ctx.$slots, \"nav-left-button\", {}, function () {\n    return [createVNode(_component_svg_icon, {\n      name: \"left-arrow\",\n      width: \"20px\",\n      height: \"24px\"\n    })];\n  })], 42, [\"tabindex\"]), createVNode(\"span\", {\n    role: \"button\",\n    class: [\"vc-nav-title vc-grid-focus\", {\n      'is-disabled': !$options.nextItemsEnabled\n    }],\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    tabindex: $options.nextItemsEnabled ? 0 : undefined,\n    onClick: _cache[3] || (_cache[3] = function () {\n      return $options.toggleMode.apply($options, arguments);\n    }),\n    onKeydown: _cache[4] || (_cache[4] = function (e) {\n      return $data.onSpaceOrEnter(e, $options.toggleMode);\n    })\n  }, toDisplayString($options.title), 43, [\"tabindex\"]), createVNode(\"span\", {\n    role: \"button\",\n    class: \"vc-nav-arrow is-right\",\n    tabindex: \"0\",\n    onClick: _cache[5] || (_cache[5] = function () {\n      return $options.moveNext.apply($options, arguments);\n    }),\n    onKeydown: _cache[6] || (_cache[6] = function (e) {\n      return $data.onSpaceOrEnter(e, $options.moveNext);\n    })\n  }, [renderSlot(_ctx.$slots, \"nav-right-button\", {}, function () {\n    return [createVNode(_component_svg_icon, {\n      name: \"right-arrow\",\n      width: \"20px\",\n      height: \"24px\"\n    })];\n  })], 32)]), createVNode(\"div\", _hoisted_3, [(openBlock(true), createBlock(Fragment, null, renderList($options.activeItems, function (item) {\n    return openBlock(), createBlock(\"span\", {\n      key: item.label,\n      role: \"button\",\n      \"data-id\": item.id,\n      \"aria-label\": item.ariaLabel,\n      class: $options.getItemClasses(item),\n      tabindex: item.isDisabled ? undefined : 0,\n      onClick: item.click,\n      onKeydown: function onKeydown(e) {\n        return $data.onSpaceOrEnter(e, item.click);\n      }\n    }, toDisplayString(item.label), 43, [\"data-id\", \"aria-label\", \"tabindex\", \"onClick\", \"onKeydown\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 512);\n}\n\nvar css_248z = \".vc-nav-header {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-justify-content: space-between;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n.vc-nav-arrow {\\n  display: -webkit-flex;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-justify-content: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  line-height: var(--leading-snug);\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: transparent;\\n  border-radius: var(--rounded);\\n}\\n.vc-nav-arrow.is-left {\\n    margin-right: auto;\\n}\\n.vc-nav-arrow.is-right {\\n    margin-left: auto;\\n}\\n.vc-nav-arrow.is-disabled {\\n    opacity: 0.25;\\n    pointer-events: none;\\n    cursor: not-allowed;\\n}\\n.vc-nav-arrow:hover {\\n    background-color: var(--gray-900);\\n}\\n.vc-nav-arrow:focus {\\n    border-color: var(--accent-600);\\n}\\n.vc-nav-title {\\n  color: var(--accent-100);\\n  font-weight: var(--font-bold);\\n  line-height: var(--leading-snug);\\n  padding: 4px 8px;\\n  border-radius: var(--rounded);\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: transparent;\\n  -webkit-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.vc-nav-title:hover {\\n    background-color: var(--gray-900);\\n}\\n.vc-nav-title:focus {\\n    border-color: var(--accent-600);\\n}\\n.vc-nav-items {\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr);\\n  grid-row-gap: 2px;\\n  grid-column-gap: 5px;\\n}\\n.vc-nav-item {\\n  width: 48px;\\n  text-align: center;\\n  line-height: var(--leading-snug);\\n  font-weight: var(--font-semibold);\\n  padding: 4px 0;\\n  cursor: pointer;\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: transparent;\\n  border-radius: var(--rounded);\\n  -webkit-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n.vc-nav-item:hover {\\n    color: var(--white);\\n    background-color: var(--gray-900);\\n    box-shadow: var(--shadow-inner);\\n}\\n.vc-nav-item.is-active {\\n    color: var(--accent-900);\\n    background: var(--accent-100);\\n    font-weight: var(--font-bold);\\n    box-shadow: var(--shadow);\\n}\\n.vc-nav-item.is-current {\\n    color: var(--accent-100);\\n    font-weight: var(--bold);\\n    border-color: var(--accent-100);\\n}\\n.vc-nav-item:focus {\\n    border-color: var(--accent-600);\\n}\\n.vc-nav-item.is-disabled {\\n    opacity: 0.25;\\n    pointer-events: none;\\n}\\n.vc-is-dark .vc-nav-title {\\n    color: var(--gray-900);\\n}\\n.vc-is-dark .vc-nav-title:hover {\\n      background-color: var(--gray-200);\\n}\\n.vc-is-dark .vc-nav-title:focus {\\n      border-color: var(--accent-400);\\n}\\n.vc-is-dark .vc-nav-arrow:hover {\\n      background-color: var(--gray-200);\\n}\\n.vc-is-dark .vc-nav-arrow:focus {\\n      border-color: var(--accent-400);\\n}\\n.vc-is-dark .vc-nav-item:hover {\\n      color: var(--gray-900);\\n      background-color: var(--gray-200);\\n      box-shadow: none;\\n}\\n.vc-is-dark .vc-nav-item.is-active {\\n      color: var(--white);\\n      background: var(--accent-500);\\n}\\n.vc-is-dark .vc-nav-item.is-current {\\n      color: var(--accent-600);\\n      border-color: var(--accent-500);\\n}\\n.vc-is-dark .vc-nav-item:focus {\\n      border-color: var(--accent-400);\\n}\\n\";\nstyleInject(css_248z);\nscript.render = render;\nexport { head_1 as h, script as s };","map":null,"metadata":{},"sourceType":"module"}