{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VBanner/VBanner.sass\"; // Extensions\n\nimport VSheet from '../VSheet'; // Components\n\nimport VAvatar from '../VAvatar';\nimport VIcon from '../VIcon';\nimport { VExpandTransition } from '../transitions'; // Mixins\n\nimport Mobile from '../../mixins/mobile';\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(VSheet, Mobile, Toggleable).extend({\n  name: 'v-banner',\n  inheritAttrs: false,\n  props: {\n    app: Boolean,\n    icon: String,\n    iconColor: String,\n    singleLine: Boolean,\n    sticky: Boolean,\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VSheet.options.computed.classes.call(this)), {}, {\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.isSticky\n      });\n    },\n    hasIcon: function hasIcon() {\n      return Boolean(this.icon || this.$slots.icon);\n    },\n    isSticky: function isSticky() {\n      return this.sticky || this.app;\n    },\n    styles: function styles() {\n      var styles = _objectSpread({}, VSheet.options.computed.styles.call(this));\n\n      if (this.isSticky) {\n        var top = !this.app ? 0 : this.$vuetify.application.bar + this.$vuetify.application.top;\n        styles.top = convertToUnit(top);\n        styles.position = 'sticky';\n        styles.zIndex = 1;\n      }\n\n      return styles;\n    }\n  },\n  methods: {\n    /** @public */\n    toggle: function toggle() {\n      this.isActive = !this.isActive;\n    },\n    iconClick: function iconClick(e) {\n      this.$emit('click:icon', e);\n    },\n    genIcon: function genIcon() {\n      if (!this.hasIcon) return undefined;\n      var content;\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28\n          }\n        }, [this.icon]);\n      } else {\n        content = this.$slots.icon;\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40\n        },\n        on: {\n          click: this.iconClick\n        }\n      }, [content]);\n    },\n    genText: function genText() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text'\n      }, this.$slots.default);\n    },\n    genActions: function genActions() {\n      var _this = this;\n\n      var children = getSlot(this, 'actions', {\n        dismiss: function dismiss() {\n          return _this.isActive = false;\n        }\n      });\n      if (!children) return undefined;\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions'\n      }, children);\n    },\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content'\n      }, [this.genIcon(), this.genText()]);\n    },\n    genWrapper: function genWrapper() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper'\n      }, [this.genContent(), this.genActions()]);\n    }\n  },\n  render: function render(h) {\n    return h(VExpandTransition, [h('div', this.setBackgroundColor(this.color, {\n      staticClass: 'v-banner',\n      attrs: this.attrs$,\n      class: this.classes,\n      style: this.styles,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), [this.genWrapper()])]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}