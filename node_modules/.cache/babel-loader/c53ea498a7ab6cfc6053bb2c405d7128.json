{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'ParticipantSelectForm',\n  computed: _objectSpread({}, mapGetters('participants', ['participants'])),\n  data: function data() {\n    return {\n      selectedParticipants: []\n    };\n  },\n  created: function created() {\n    this.fetchParticipants();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('participants', ['fetchParticipants', 'createParticipant', 'deleteParticipant', 'updateParticipant'])), {}, {\n    addParticipants: function addParticipants() {\n      var _this = this;\n\n      var newParticipants = this.selectedParticipants.filter(function (p) {\n        return !_this.participants.some(function (pp) {\n          return pp.id === p.id;\n        });\n      });\n      newParticipants.forEach(function (p) {\n        return _this.createParticipant(p);\n      });\n    }\n  })\n};","map":{"version":3,"sources":["GuestSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAgBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,uBADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,cAAA,EAAA,CAAA,cAAA,CAAA,CADA,CAFA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,oBAAA,EAAA;AADA,KAAA;AAAA,GALA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,iBAAA;AACA,GAVA;AAWA,EAAA,OAAA,kCACA,UAAA,CAAA,cAAA,EAAA,CACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,mBAJA,CAAA,CADA;AAOA,IAAA,eAPA,6BAOA;AAAA;;AACA,UAAA,eAAA,GAAA,KAAA,oBAAA,CAAA,MAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,KAAA,CAAA,YAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AAAA,OADA,CAAA;AAGA,MAAA,eAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,eAAA,KAAA,CAAA,iBAAA,CAAA,CAAA,CAAA;AAAA,OAAA;AACA;AAZA;AAXA,CAAA","sourcesContent":["<template>\n  <v-autocomplete\n    v-model=\"selectedParticipants\"\n    :items=\"participants\"\n    item-text=\"name\"\n    item-value=\"id\"\n    label=\"参加者を追加\"\n    multiple\n    clearable\n    small-chips\n    color=\"primary\"\n    @input=\"addParticipants\"\n  ></v-autocomplete>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'ParticipantSelectForm',\n  computed: {\n    ...mapGetters('participants', ['participants'])\n  },\n  data: () => ({\n    selectedParticipants: []\n  }),\n  created() {\n    this.fetchParticipants();\n  },\n  methods: {\n    ...mapActions('participants', [\n      'fetchParticipants',\n      'createParticipant',\n      'deleteParticipant',\n      'updateParticipant'\n    ]),\n    addParticipants() {\n      const newParticipants = this.selectedParticipants.filter(\n        p => !this.participants.some(pp => pp.id === p.id)\n      );\n      newParticipants.forEach(p => this.createParticipant(p));\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}