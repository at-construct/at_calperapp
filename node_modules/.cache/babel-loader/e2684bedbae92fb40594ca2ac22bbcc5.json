{"ast":null,"code":"import axios from 'axios';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  groups: []\n};\nvar getters = {\n  groups: function groups(state) {\n    return state.groups;\n  }\n};\nvar mutations = {\n  setGroups: function setGroups(state, groups) {\n    state.groups = groups;\n  }\n};\nvar actions = {\n  fetchGroups: function fetchGroups(_ref, groupId) {\n    var commit = _ref.commit;\n    axios.get(\"\".concat(apiUrl, \"/groups\")).then(function (response) {\n      var _response$data = response.data,\n          calendars = _response$data.calendars,\n          users = _response$data.users;\n      var groups = [];\n      calendars.forEach(function (calendar) {\n        var group = {\n          id: calendar.group_id,\n          name: calendar.group_name,\n          calendars: [calendar],\n          users: []\n        };\n        groups.push(group);\n      });\n      groups.forEach(function (group) {\n        users.forEach(function (user) {\n          if (user.calendar_id === group.calendars[0].id) {\n            group.users.push(user);\n          }\n        });\n      });\n      commit('setGroups', groups);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  getters: getters,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/groups.js"],"names":["axios","apiUrl","state","groups","getters","mutations","setGroups","actions","fetchGroups","groupId","commit","get","then","response","data","calendars","users","forEach","calendar","group","id","group_id","name","group_name","push","user","calendar_id","error","console","log","namespaced"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG,yBAAf;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdD,EAAAA,MAAM,EAAE,gBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA;AADC,CAAhB;AAIA,IAAME,SAAS,GAAG;AAChBC,EAAAA,SADgB,qBACNJ,KADM,EACCC,MADD,EACS;AACvBD,IAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD;AAHe,CAAlB;AAMA,IAAMI,OAAO,GAAG;AACdC,EAAAA,WADc,6BACWC,OADX,EACoB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAChCV,IAAAA,KAAK,CAACW,GAAN,WAAaV,MAAb,cACGW,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,2BAA6BA,QAAQ,CAACC,IAAtC;AAAA,UAAQC,SAAR,kBAAQA,SAAR;AAAA,UAAmBC,KAAnB,kBAAmBA,KAAnB;AACA,UAAMb,MAAM,GAAG,EAAf;AACAY,MAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,QAAQ,EAAI;AAC5B,YAAMC,KAAK,GAAG;AACZC,UAAAA,EAAE,EAAEF,QAAQ,CAACG,QADD;AAEZC,UAAAA,IAAI,EAAEJ,QAAQ,CAACK,UAFH;AAGZR,UAAAA,SAAS,EAAE,CAACG,QAAD,CAHC;AAIZF,UAAAA,KAAK,EAAE;AAJK,SAAd;AAMAb,QAAAA,MAAM,CAACqB,IAAP,CAAYL,KAAZ;AACD,OARD;AASAhB,MAAAA,MAAM,CAACc,OAAP,CAAe,UAAAE,KAAK,EAAI;AACtBH,QAAAA,KAAK,CAACC,OAAN,CAAc,UAAAQ,IAAI,EAAI;AACpB,cAAIA,IAAI,CAACC,WAAL,KAAqBP,KAAK,CAACJ,SAAN,CAAgB,CAAhB,EAAmBK,EAA5C,EAAgD;AAC9CD,YAAAA,KAAK,CAACH,KAAN,CAAYQ,IAAZ,CAAiBC,IAAjB;AACD;AACF,SAJD;AAKD,OAND;AAOAf,MAAAA,MAAM,CAAC,WAAD,EAAcP,MAAd,CAAN;AACD,KArBH,WAsBS,UAAAwB,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAxBH;AAyBD;AA3Ba,CAAhB;AA8BA,eAAe;AACbG,EAAAA,UAAU,EAAE,IADC;AAEb1B,EAAAA,OAAO,EAAPA,OAFa;AAGbF,EAAAA,KAAK,EAALA,KAHa;AAIbG,EAAAA,SAAS,EAATA,SAJa;AAKbE,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  groups: [],\n};\n\nconst getters = {\n  groups: state => state.groups\n};\n\nconst mutations = {\n  setGroups(state, groups) {\n    state.groups = groups\n  }\n};\n\nconst actions = {\n  fetchGroups ({ commit }, groupId) {\n    axios.get(`${apiUrl}/groups`)\n      .then(response => {\n        const { calendars, users } = response.data\n        const groups = []\n        calendars.forEach(calendar => {\n          const group = {\n            id: calendar.group_id,\n            name: calendar.group_name,\n            calendars: [calendar],\n            users: []\n          }\n          groups.push(group)\n        })\n        groups.forEach(group => {\n          users.forEach(user => {\n            if (user.calendar_id === group.calendars[0].id) {\n              group.users.push(user)\n            }\n          })\n        })\n        commit('setGroups', groups)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n};\n\nexport default {\n  namespaced: true,\n  getters,\n  state,\n  mutations,\n  actions,\n};\n"]},"metadata":{},"sourceType":"module"}