{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from 'axios';\nimport { serializeCalendar } from '../../functions/serializers';\nvar apiUrl = 'http://localhost:5000';\nvar state = {\n  calendars: []\n};\nvar getters = {\n  calendars: function calendars(state) {\n    return state.calendars;\n  }\n};\nvar mutations = {\n  setCalendars: function setCalendars(state, calendars) {\n    return state.calendars = calendars;\n  }\n};\nvar actions = {\n  fetchCalendars: function fetchCalendars(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/calendars\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setCalendars', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/at19830906/projects/CalRailsVueApp/app/javascript/store/modules/calendars.js"],"names":["axios","serializeCalendar","apiUrl","state","calendars","getters","mutations","setCalendars","actions","fetchCalendars","commit","get","response","data","namespaced"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,IAAMC,MAAM,GAAG,uBAAf;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,SAAS,EAAE;AADC,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdD,EAAAA,SAAS,EAAE,mBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAV;AAAA;AADF,CAAhB;AAIA,IAAME,SAAS,GAAG;AAChBC,EAAAA,YAAY,EAAE,sBAACJ,KAAD,EAAQC,SAAR;AAAA,WAAuBD,KAAK,CAACC,SAAN,GAAkBA,SAAzC;AAAA;AADE,CAAlB;AAIA,IAAMI,OAAO,GAAG;AACRC,EAAAA,cADQ,gCACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACRV,KAAK,CAACW,GAAN,WAAaT,MAAb,gBADQ;;AAAA;AACzBU,cAAAA,QADyB;AAE/BF,cAAAA,MAAM,CAAC,cAAD,EAAiBE,QAAQ,CAACC,IAA1B,CAAN;;AAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhC;AAJa,CAAhB;AAOA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbX,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,SAAS,EAATA,SAJa;AAKbE,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import axios from 'axios';\nimport { serializeCalendar } from '../../functions/serializers';\n\nconst apiUrl = 'http://localhost:5000';\n\nconst state = {\n  calendars: [],\n};\n\nconst getters = {\n  calendars: state => state.calendars,\n};\n\nconst mutations = {\n  setCalendars: (state, calendars) => (state.calendars = calendars),\n};\n\nconst actions = {\n  async fetchCalendars({ commit }) {\n    const response = await axios.get(`${apiUrl}/calendars`);\n    commit('setCalendars', response.data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};"]},"metadata":{},"sourceType":"module"}