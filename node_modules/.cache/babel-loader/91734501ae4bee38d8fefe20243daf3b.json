{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'FacilitiesForm',\n  props: ['value'],\n  data: function data() {\n    return {\n      selectedFacility: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters('facilities', ['facilities'])), {}, {\n    filteredFacilities: function filteredFacilities() {\n      var allowedFacilityNames = ['会議室', '車']; // 選択可能な設備の名前\n\n      return this.facilities.filter(function (facility) {\n        return allowedFacilityNames.includes(facility.name);\n      });\n    }\n  }),\n  methods: {\n    filterFacilities: function filterFacilities(item, queryText, itemText) {\n      var allowedFacilityNames = ['会議室', '車'];\n      return itemText.toLowerCase().indexOf(queryText.toLowerCase()) > -1 && allowedFacilityNames.includes(itemText);\n    },\n    onInput: function onInput(value) {\n      this.selectedFacility = value;\n      this.$emit('input', value);\n    },\n    removeFacility: function removeFacility(item) {\n      this.selectedFacility = null;\n      this.$emit('input', null);\n    }\n  }\n};","map":{"version":3,"sources":["FacillitiesForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,kCACA,UAAA,CAAA,YAAA,EAAA,CAAA,YAAA,CAAA,CADA;AAEA,IAAA,kBAFA,gCAEA;AACA,UAAA,oBAAA,GAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CADA,CACA;;AACA,aAAA,KAAA,UAAA,CAAA,MAAA,CAAA,UAAA,QAAA;AAAA,eAAA,oBAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,OAAA,CAAA;AACA;AALA,IARA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,4BACA,IADA,EACA,SADA,EACA,QADA,EACA;AACA,UAAA,oBAAA,GAAA,CAAA,KAAA,EAAA,GAAA,CAAA;AACA,aAAA,QAAA,CAAA,WAAA,GAAA,OAAA,CAAA,SAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA,IAAA,oBAAA,CAAA,QAAA,CAAA,QAAA,CAAA;AACA,KAJA;AAKA,IAAA,OALA,mBAKA,KALA,EAKA;AACA,WAAA,gBAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,KARA;AASA,IAAA,cATA,0BASA,IATA,EASA;AACA,WAAA,gBAAA,GAAA,IAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA;AAZA;AAfA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"設備を選択\"\n          item-text=\"name\"\n          item-value=\"id\"\n          :value=\"selectedFacility\"\n          :items=\"filteredFacilities\"\n          @input=\"onInput\"\n          :filter=\"(item, queryText, itemText) => filterFacilities(item, queryText, itemText)\"\n          :multiple=\"false\"\n        >\n          <template v-slot:selection=\"{ item }\">\n            <v-chip\n              close\n              @click:close=\"removeFacility(item)\"\n            >\n              {{ item.name }}\n            </v-chip>\n          </template>\n          <template v-slot:item=\"{ item }\">\n            <div class=\"my-2\" :class=\"{ 'text-lg': $vuetify.breakpoint.smAndDown, 'text-xl': $vuetify.breakpoint.mdAndUp }\">{{ item.name }}</div>\n          </template>\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'FacilitiesForm',\n  props: ['value'],\n  data() {\n    return {\n      selectedFacility: null,\n    };\n  },\n  computed: {\n    ...mapGetters('facilities', ['facilities']),\n    filteredFacilities() {\n      const allowedFacilityNames = ['会議室', '車']; // 選択可能な設備の名前\n      return this.facilities.filter(facility => allowedFacilityNames.includes(facility.name));\n    },\n  },\n  methods: {\n    filterFacilities(item, queryText, itemText) {\n      const allowedFacilityNames = ['会議室', '車'];\n      return itemText.toLowerCase().indexOf(queryText.toLowerCase()) > -1 && allowedFacilityNames.includes(itemText);\n    },\n    onInput(value) {\n      this.selectedFacility = value;\n      this.$emit('input', value);\n    },\n    removeFacility(item) {\n      this.selectedFacility = null;\n      this.$emit('input', null);\n    },\n  },\n};\n</script>"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}