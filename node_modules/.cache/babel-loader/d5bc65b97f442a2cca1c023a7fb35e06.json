{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { format } from 'date-fns';\nimport { mapActions, mapGetters } from 'vuex';\nimport OtherDayEventList from '../events/OtherDayEventList';\nexport default {\n  name: 'OtherCalendar',\n  components: {\n    DayEventList: DayEventList\n  },\n  data: function data() {\n    return {\n      selectedCalendar: null,\n      value: format(new Date(), 'yyyy/MM/dd')\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters('calendars', ['calendars'])), mapGetters('events', ['events', 'clickedDate'])), {}, {\n    title: function title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    }\n  }),\n  created: function created() {\n    this.fetchCalendars();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['fetchCalendars'])), mapActions('events', ['fetchEvents', 'setClickedDate', 'showDayEvents'])), {}, {\n    setToday: function setToday() {\n      this.value = format(new Date(), 'yyyy/MM/dd');\n    },\n    closeDialog: function closeDialog() {\n      this.$emit('close'); // クローズイベントを親コンポーネントに通知\n\n      this.setClickedDate(null);\n    },\n    initEvent: function initEvent(_ref) {\n      var date = _ref.date;\n\n      if (this.clickedDate !== null || !date) {\n        // dateがnullの場合にもチェックする\n        return;\n      }\n\n      date = date.replace(/-/g, '/');\n\n      var _getDefaultStartAndEn = getDefaultStartAndEnd(date),\n          _getDefaultStartAndEn2 = _slicedToArray(_getDefaultStartAndEn, 2),\n          start = _getDefaultStartAndEn2[0],\n          end = _getDefaultStartAndEn2[1];\n\n      this.setEvent({\n        name: '',\n        start: start,\n        end: end,\n        timed: true\n      });\n    },\n    showDayEvents: function showDayEvents(_ref2) {\n      var date = _ref2.date;\n      date = date.replace(/-/g, '/');\n      this.setClickedDate(date);\n    }\n  })\n};","map":{"version":3,"sources":["OtherCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,SAAA,MAAA,QAAA,UAAA;AACA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,iBAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,MAAA,CAAA,IAAA,IAAA,EAAA,EAAA,YAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,QAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CAAA,WAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,CAFA;AAGA,IAAA,KAHA,mBAGA;AACA,aAAA,MAAA,CAAA,IAAA,IAAA,CAAA,KAAA,KAAA,CAAA,EAAA,UAAA,CAAA;AACA;AALA,IATA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,cAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CAAA,gBAAA,CAAA,CADA,GAEA,UAAA,CAAA,QAAA,EAAA,CAAA,aAAA,EAAA,gBAAA,EAAA,eAAA,CAAA,CAFA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,KAAA,GAAA,MAAA,CAAA,IAAA,IAAA,EAAA,EAAA,YAAA,CAAA;AACA,KANA;AAOA,IAAA,WAPA,yBAOA;AACA,WAAA,KAAA,CAAA,OAAA,EADA,CACA;;AACA,WAAA,cAAA,CAAA,IAAA;AACA,KAVA;AAWA,IAAA,SAXA,2BAWA;AAAA,UAAA,IAAA,QAAA,IAAA;;AACA,UAAA,KAAA,WAAA,KAAA,IAAA,IAAA,CAAA,IAAA,EAAA;AAAA;AACA;AACA;;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AACA,kCAAA,qBAAA,CAAA,IAAA,CAAA;AAAA;AAAA,UAAA,KAAA;AAAA,UAAA,GAAA;;AACA,WAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,KAAA;AAAA,QAAA,GAAA,EAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,KAlBA;AAmBA,IAAA,aAnBA,gCAmBA;AAAA,UAAA,IAAA,SAAA,IAAA;AACA,MAAA,IAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA;AACA,WAAA,cAAA,CAAA,IAAA;AACA;AAtBA;AAnBA,CAAA","sourcesContent":["<template>\n  <v-card style=\"width: 90%; height: 90%;\">\n    <v-card-text style=\"height: calc(100% - 64px);\">\n      <v-sheet max-height=\"10vh\">\n        <v-toolbar flat>\n          <v-btn icon @click=\"closeDialog\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n  \n          <v-btn icon class=\"ml-auto\" @click=\"$refs.calendar.prev()\">\n            <v-icon>mdi-chevron-left</v-icon>\n          </v-btn>\n  \n          <v-toolbar-title>\n            <v-toolbar-title style=\"font-size: 1.5em\">{{ title }} </v-toolbar-title>\n          </v-toolbar-title>\n  \n          <v-btn icon class=\"mr-auto\" @click=\"$refs.calendar.next()\">\n            <v-icon>mdi-chevron-right</v-icon>\n          </v-btn>\n  \n          <v-btn outlined x-small class=\"mr-auto\" @click=\"setToday\" style=\"font-size: 10px;\">\n            今日\n          </v-btn>\n        </v-toolbar>\n      </v-sheet>\n  \n      <v-calendar\n        ref=\"calendar\"\n        v-model=\"value\"\n        :events=\"events\"\n        @change=\"fetchEvents\"\n        style=\"height: 100%;\"\n        locale=\"ja-jp\"\n        :day-format=\"timestamp => new Date(timestamp.date).getDate()\"\n        :month-format=\"timestamp => new Date(timestamp.date).getMonth() + 1 + ' /'\"\n        @click:date=\"showDayEvents\"\n        @click:more=\"showDayEvents\"\n      ></v-calendar>\n\n      <!-- 日付クリック時のイベント一覧ダイアログ -->\n      <v-dialog\n        :value=\"clickedDate !== null\"\n        persistent\n        max-width=\"800\"\n        max-high=\"800\"\n      >\n        <OtherDayEventList />\n      </v-dialog>\n      \n    </v-card-text>\n  </v-card>\n</template>\n\n<script>\nimport { format } from 'date-fns';\nimport { mapActions, mapGetters } from 'vuex';\nimport OtherDayEventList from '../events/OtherDayEventList';\n\nexport default {\n  name: 'OtherCalendar',\n  components: { DayEventList },\n  data() {\n    return {\n      selectedCalendar: null,\n      value: format(new Date(), 'yyyy/MM/dd'),\n    }\n  },\n  computed: {\n    ...mapGetters('calendars', ['calendars']),\n    ...mapGetters('events', ['events', 'clickedDate']),\n    title() {\n      return format(new Date(this.value), 'yyyy年 M月');\n    },\n  },\n  created() {\n    this.fetchCalendars();\n  },\n  methods: {\n    ...mapActions('calendars', ['fetchCalendars']),\n    ...mapActions('events', ['fetchEvents','setClickedDate', 'showDayEvents']),\n\n    setToday() {\n      this.value = format(new Date(), 'yyyy/MM/dd');\n    },\n    closeDialog() {\n      this.$emit('close'); // クローズイベントを親コンポーネントに通知\n      this.setClickedDate(null);\n    },\n    initEvent({ date }) {\n      if (this.clickedDate !== null || !date) { // dateがnullの場合にもチェックする\n        return;\n      }\n      date = date.replace(/-/g, '/');\n      const [start, end] = getDefaultStartAndEnd(date);\n      this.setEvent({ name: '', start, end, timed: true });\n    },\n    showDayEvents({ date }) {\n      date = date.replace(/-/g, '/');\n      this.setClickedDate(date);\n    },\n  }\n};\n</script>\n\n<style>\n.saturday {\n  background: rgba(200, 200, 250, 0.2);\n}\n.sunday {\n  background: rgba(250, 200, 200, 0.2);\n}\n</style>"],"sourceRoot":"app/javascript/components/calendars"},"metadata":{},"sourceType":"module"}