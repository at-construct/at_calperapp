{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\nvar apiUrl = 'https://localhost:9292/';\nvar state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: []\n};\nvar getters = {\n  events: function events(state) {\n    return state.participants.map(function (participant) {\n      return _objectSpread(_objectSpread({}, participant), {}, {\n        start: new Date(participant.event.start),\n        end: new Date(participant.event.end)\n      });\n    });\n  }\n};\nvar mutations = {\n  setEvents: function setEvents(state, events) {\n    return state.events = events;\n  },\n  appendEvent: function appendEvent(state, event) {\n    return state.events = [].concat(_toConsumableArray(state.events), [event]);\n  },\n  setEvent: function setEvent(state, event) {\n    return state.event = event;\n  },\n  removeEvent: function removeEvent(state, event) {\n    return state.events = state.events.filter(function (e) {\n      return e.id !== event.id;\n    });\n  },\n  resetEvent: function resetEvent(state) {\n    return state.event = null;\n  },\n  updateEvent: function updateEvent(state, event) {\n    return state.events = state.events.map(function (e) {\n      return e.id === event.id ? event : e;\n    });\n  },\n  setEditMode: function setEditMode(state, bool) {\n    return state.isEditMode = bool;\n  },\n  setClickedDate: function setClickedDate(state, date) {\n    return state.clickedDate = date;\n  },\n  setParticipants: function setParticipants(state, participants) {\n    return state.participants = participants;\n  },\n  appendParticipant: function appendParticipant(state, participant) {\n    return state.participants = [].concat(_toConsumableArray(state.participants), [participant]);\n  },\n  removeParticipant: function removeParticipant(state, participant) {\n    return state.participants = state.participants.filter(function (p) {\n      return p.id !== participant.id;\n    });\n  },\n  updateParticipant: function updateParticipant(state, participant) {\n    return state.participants = state.participants.map(function (p) {\n      return p.id === participant.id ? participant : p;\n    });\n  }\n};\nvar actions = {\n  fetchEvents: function fetchEvents(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/events\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setEvents', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createEvent: function createEvent(_ref2, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              console.log('createEvent', event);\n              _context2.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/events\"), event);\n\n            case 4:\n              response = _context2.sent;\n              commit('appendEvent', response.data);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  deleteEvent: function deleteEvent(_ref3, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/events/\").concat(id));\n\n            case 3:\n              response = _context3.sent;\n              commit('removeEvent', response.data);\n              commit('resetEvent');\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  updateEvent: function updateEvent(_ref4, event) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/events/\").concat(event.id), event);\n\n            case 3:\n              response = _context4.sent;\n              commit('updateEvent', response.data);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  setEvent: function setEvent(_ref5, event) {\n    var commit = _ref5.commit;\n    commit('setEvent', event);\n  },\n  setEditMode: function setEditMode(_ref6, bool) {\n    var commit = _ref6.commit;\n    commit('setEditMode', bool);\n  },\n  setClickedDate: function setClickedDate(_ref7, date) {\n    var commit = _ref7.commit;\n    commit('setClickedDate', date);\n  },\n  fetchParticipants: function fetchParticipants(_ref8) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref8.commit;\n              _context5.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/participants\"));\n\n            case 3:\n              response = _context5.sent;\n              commit('setParticipants', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  createParticipant: function createParticipant(_ref9, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              commit = _ref9.commit;\n              console.log('createParticipant', participant);\n              _context6.next = 4;\n              return axios.post(\"\".concat(apiUrl, \"/participants\"), participant);\n\n            case 4:\n              response = _context6.sent;\n              commit('appendParticipant', response.data);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  deleteParticipant: function deleteParticipant(_ref10, participantId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              commit = _ref10.commit;\n              _context7.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/participants/\").concat(participantId));\n\n            case 3:\n              response = _context7.sent;\n              commit('removeParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  updateParticipant: function updateParticipant(_ref11, participant) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              commit = _ref11.commit;\n              _context8.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/participants/\").concat(participant.id), participant);\n\n            case 3:\n              response = _context8.sent;\n              commit('updateParticipant', response.data);\n\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/events.js"],"names":["axios","isDateWithinInterval","compareDates","serializeEvent","apiUrl","state","events","event","isEditMode","clickedDate","participants","getters","map","participant","start","Date","end","mutations","setEvents","appendEvent","setEvent","removeEvent","filter","e","id","resetEvent","updateEvent","setEditMode","bool","setClickedDate","date","setParticipants","appendParticipant","removeParticipant","p","updateParticipant","actions","fetchEvents","commit","get","response","data","createEvent","console","log","post","deleteEvent","put","fetchParticipants","createParticipant","deleteParticipant","participantId","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { isDateWithinInterval, compareDates } from '../../functions/datetime';\nimport { serializeEvent } from '../../functions/serializers';\n\nconst apiUrl = 'https://localhost:9292/';\n\nconst state = {\n  events: [],\n  event: null,\n  isEditMode: false,\n  clickedDate: null,\n  participants: [],\n};\n\nconst getters = {\n  events: state => state.participants.map(participant => {\n    return {\n      ...participant,\n      start: new Date(participant.event.start),\n      end: new Date(participant.event.end)\n    };\n  }),\n};\n\nconst mutations = {\n  setEvents: (state, events) => (state.events = events),\n  appendEvent: (state, event) => (state.events = [...state.events, event]),\n  setEvent: (state, event) => (state.event = event),\n  removeEvent: (state, event) =>\n    (state.events = state.events.filter(e => e.id !== event.id)),\n  resetEvent: state => (state.event = null),\n  updateEvent: (state, event) =>\n    (state.events = state.events.map(e => (e.id === event.id ? event : e))),\n  setEditMode: (state, bool) => (state.isEditMode = bool),\n  setClickedDate: (state, date) => (state.clickedDate = date),\n  setParticipants: (state, participants) => (state.participants = participants),\n  appendParticipant: (state, participant) =>\n    (state.participants = [...state.participants, participant]),\n  removeParticipant: (state, participant) =>\n    (state.participants = state.participants.filter(\n      p => p.id !== participant.id\n    )),\n  updateParticipant: (state, participant) =>\n    (state.participants = state.participants.map(p =>\n      p.id === participant.id ? participant : p\n    ))\n};\n\nconst actions = {\n  async fetchEvents({ commit }) {\n    const response = await axios.get(`${apiUrl}/events`);\n    commit('setEvents', response.data);\n  },\n  async createEvent({ commit }, event) {\n    console.log('createEvent', event);\n    const response = await axios.post(`${apiUrl}/events`, event);\n    commit('appendEvent', response.data);\n  },\n  async deleteEvent({ commit }, id) {\n    const response = await axios.delete(`${apiUrl}/events/${id}`);\n    commit('removeEvent', response.data);\n    commit('resetEvent');\n  },\n  async updateEvent({ commit }, event) {\n    const response = await axios.put(`${apiUrl}/events/${event.id}`, event);\n    commit('updateEvent', response.data);\n  },\n  setEvent({ commit }, event) {\n    commit('setEvent', event);\n  },\n  setEditMode({ commit }, bool) {\n    commit('setEditMode', bool);\n  },\n  setClickedDate({ commit }, date) {\n    commit('setClickedDate', date);\n  },\n  async fetchParticipants({ commit }) {\n    const response = await axios.get(`${apiUrl}/participants`);\n    commit('setParticipants', response.data);\n  },\n  async createParticipant({ commit }, participant) {\n    console.log('createParticipant', participant);\n    const response = await axios.post(`${apiUrl}/participants`, participant);\n    commit('appendParticipant', response.data);\n  },\n  async deleteParticipant({ commit }, participantId) {\n    const response = await axios.delete(\n      `${apiUrl}/participants/${participantId}`\n    );\n    commit('removeParticipant', response.data);\n  },\n  async updateParticipant({ commit }, participant) {\n    const response = await axios.put(\n      `${apiUrl}/participants/${participant.id}`,\n      participant\n    );\n    commit('updateParticipant', response.data);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}