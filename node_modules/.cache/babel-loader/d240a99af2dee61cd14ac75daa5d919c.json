{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport axios from 'axios';\nimport { serializeCalendar } from '../../functions/serializers';\nvar apiUrl = 'https://calcalappapp.herokuapp.com/';\nvar state = {\n  calendars: [],\n  calendar: null\n};\nvar getters = {\n  calendars: function calendars(state) {\n    return state.calendars.map(function (calendar) {\n      return serializeCalendar(calendar);\n    });\n  },\n  calendar: function calendar(state) {\n    return serializeCalendar(state.calendar);\n  }\n};\nvar mutations = {\n  setCalendars: function setCalendars(state, calendars) {\n    return state.calendars = calendars;\n  },\n  appendCalendar: function appendCalendar(state, calendar) {\n    return state.calendars = [].concat(_toConsumableArray(state.calendars), [calendar]);\n  },\n  updateCalendar: function updateCalendar(state, calendar) {\n    return state.calendars = state.calendars.map(function (c) {\n      return c.id === calendar.id ? calendar : c;\n    });\n  },\n  removeCalendar: function removeCalendar(state, calendar) {\n    return state.calendars = state.calendars.filter(function (c) {\n      return c.id !== calendar.id;\n    });\n  },\n  setCalendar: function setCalendar(state, calendar) {\n    return state.calendar = calendar;\n  }\n};\nvar actions = {\n  fetchCalendars: function fetchCalendars(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/calendars\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setCalendars', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  createCalendar: function createCalendar(_ref2, calendar) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post(\"\".concat(apiUrl, \"/calendars\"), calendar);\n\n            case 3:\n              response = _context2.sent;\n              commit('appendCalendar', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  updateCalendar: function updateCalendar(_ref3, calendar) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch = _ref3.dispatch, commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.put(\"\".concat(apiUrl, \"/calendars/\").concat(calendar.id), calendar);\n\n            case 3:\n              response = _context3.sent;\n              commit('updateCalendar', response.data);\n              dispatch('events/fetchEvents', null, {\n                root: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  deleteCalendar: function deleteCalendar(_ref4, id) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var dispatch, commit, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch = _ref4.dispatch, commit = _ref4.commit;\n              _context4.next = 3;\n              return axios[\"delete\"](\"\".concat(apiUrl, \"/calendars/\").concat(id));\n\n            case 3:\n              response = _context4.sent;\n              commit('removeCalendar', response.data);\n              dispatch('events/fetchEvents', null, {\n                root: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  setCalendar: function setCalendar(_ref5, calendar) {\n    var commit = _ref5.commit;\n    commit('setCalendar', calendar);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/calendars.js"],"names":["axios","serializeCalendar","apiUrl","state","calendars","calendar","getters","map","mutations","setCalendars","appendCalendar","updateCalendar","c","id","removeCalendar","filter","setCalendar","actions","fetchCalendars","commit","get","response","data","createCalendar","post","dispatch","put","root","deleteCalendar","namespaced"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { serializeCalendar } from '../../functions/serializers';\n\nconst apiUrl = 'https://calcalappapp.herokuapp.com/';\n\nconst state = {\n  calendars: [],\n  calendar: null\n};\n\nconst getters = {\n  calendars: state =>\n    state.calendars.map(calendar => serializeCalendar(calendar)),\n  calendar: state => serializeCalendar(state.calendar)\n};\n\nconst mutations = {\n  setCalendars: (state, calendars) => (state.calendars = calendars),\n  appendCalendar: (state, calendar) =>\n    (state.calendars = [...state.calendars, calendar]),\n  updateCalendar: (state, calendar) =>\n    (state.calendars = state.calendars.map(c =>\n      c.id === calendar.id ? calendar : c\n    )),\n  removeCalendar: (state, calendar) =>\n    (state.calendars = state.calendars.filter(c => c.id !== calendar.id)),\n  setCalendar: (state, calendar) => (state.calendar = calendar)\n};\n\nconst actions = {\n  async fetchCalendars({ commit }) {\n    const response = await axios.get(`${apiUrl}/calendars`);\n    commit('setCalendars', response.data);\n  },\n  async createCalendar({ commit }, calendar) {\n    const response = await axios.post(`${apiUrl}/calendars`, calendar);\n    commit('appendCalendar', response.data);\n  },\n  async updateCalendar({ dispatch, commit }, calendar) {\n    const response = await axios.put(\n      `${apiUrl}/calendars/${calendar.id}`,\n      calendar\n    );\n    commit('updateCalendar', response.data);\n    dispatch('events/fetchEvents', null, { root: true });\n  },\n  async deleteCalendar({ dispatch, commit }, id) {\n    const response = await axios.delete(`${apiUrl}/calendars/${id}`);\n    commit('removeCalendar', response.data);\n    dispatch('events/fetchEvents', null, { root: true });\n  },\n  setCalendar({ commit }, calendar) {\n    commit('setCalendar', calendar);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]},"metadata":{},"sourceType":"module"}