{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport GroupCheckBox from './GroupCheckBox';\nexport default {\n  name: 'GroupCheckBox',\n  props: ['value', 'label'],\n  components: {\n    GroupCheckBox: GroupCheckBox\n  },\n  data: function data() {\n    return {\n      selectedItem: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters('users', ['users', 'user'])),\n  created: function created() {\n    this.fetchUsers();\n  },\n  methods: _objectSpread(_objectSpread(_objectSpread({}, mapActions('calendars', ['createCalendar', 'updateCalendar', 'setCalendar'])), mapActions('users', ['fetchUsers', 'updateUser', 'deleteUser', 'setUser'])), {}, {\n    initUser: function initUser() {\n      this.setUser({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.setUser(null);\n    },\n    edit: function edit(user) {\n      this.setUser(user);\n    },\n    del: function del(user) {\n      this.deleteUser(user.id);\n    },\n    toggleVisibility: function toggleVisibility(user) {\n      this.updateUser(user);\n    }\n  })\n};","map":{"version":3,"sources":["GroupCheckBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GAHA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAAA,GAJA;AAOA,EAAA,QAAA,oBACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CADA,CAPA;AAUA,EAAA,OAVA,qBAUA;AACA,SAAA,UAAA;AACA,GAZA;AAaA,EAAA,OAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,EAEA,gBAFA,EAGA,aAHA,CAAA,CADA,GAMA,UAAA,CAAA,OAAA,EAAA,CACA,YADA,EAEA,YAFA,EAGA,YAHA,EAIA,SAJA,CAAA,CANA;AAYA,IAAA,QAZA,sBAYA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAjBA;AAkBA,IAAA,WAlBA,yBAkBA;AACA,WAAA,OAAA,CAAA,IAAA;AACA,KApBA;AAqBA,IAAA,IArBA,gBAqBA,IArBA,EAqBA;AACA,WAAA,OAAA,CAAA,IAAA;AACA,KAvBA;AAwBA,IAAA,GAxBA,eAwBA,IAxBA,EAwBA;AACA,WAAA,UAAA,CAAA,IAAA,CAAA,EAAA;AACA,KA1BA;AA2BA,IAAA,gBA3BA,4BA2BA,IA3BA,EA2BA;AACA,WAAA,UAAA,CAAA,IAAA;AACA;AA7BA;AAbA,CAAA","sourcesContent":["<template>\n  <v-list-group>\n    <template v-slot:activator>\n      <v-list-item-title>メンバー追加</v-list-item-title>\n    </template>\n      <v-list-item-group :value=\"selectedItem\">\n        <v-list-item v-for=\"user in users\" :key=\"user.id\">\n          <v-list-item-content class=\"pa-1\">\n            <v-checkbox\n              dense\n              :label=\"user.name\"\n              class=\"pb-2\"\n              hide-details=\"true\"\n            ></v-checkbox>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list-item-group>\n  </v-list-group>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport GroupCheckBox from './GroupCheckBox';\n\nexport default {\n  name: 'GroupCheckBox',\n  props: ['value', 'label'],\n  components: { GroupCheckBox },\n  data: () => ({\n    selectedItem: null,\n  }),\n  computed: {\n    ...mapGetters('users', ['users', 'user'])\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    ...mapActions('calendars', [\n      'createCalendar',\n      'updateCalendar',\n      'setCalendar'\n    ]),\n    ...mapActions('users', [\n      'fetchUsers',\n      'updateUser',\n      'deleteUser',\n      'setUser'\n    ]),\n    initUser() {\n      this.setUser({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog() {\n      this.setUser(null);\n    },\n    edit(user) {\n      this.setUser(user);\n    },\n    del(user) {\n      this.deleteUser(user.id);\n    },\n    toggleVisibility(user) {\n      this.updateUser(user);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}