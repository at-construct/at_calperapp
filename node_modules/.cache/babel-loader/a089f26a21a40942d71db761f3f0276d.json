{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  props: ['value'],\n  data: function data() {\n    return {\n      selectedUsers: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters('users', ['users', 'user'])),\n  created: function created() {\n    this.fetchUsers();\n    this.selectedUsers = this.value;\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('users', ['fetchUsers', 'addUsers', 'updateUser', 'deleteUser', 'setUser'])), {}, {\n    submit: function submit() {\n      this.$emit('input', this.selectedUsers);\n    }\n  })\n};","map":{"version":3,"sources":["GuestSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,aAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,QAAA,oBACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CADA,CARA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,UAAA;AACA,SAAA,aAAA,GAAA,KAAA,KAAA;AACA,GAdA;AAeA,EAAA,OAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CACA,YADA,EAEA,UAFA,EAGA,YAHA,EAIA,YAJA,EAKA,SALA,CAAA,CADA;AAQA,IAAA,MARA,oBAQA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,aAAA;AACA;AAVA;AAfA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          :items=\"users\"\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"参加者を追加\"\n          item-text=\"name\"\n          item-value=\"id\"\n          multiple\n          v-model=\"selectedUsers\"\n        >\n        </v-autocomplete>\n        <v-btn color=\"primary\" @click=\"submit\">送信</v-btn>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'GuestSelectForm',\n  props: ['value'],\n  data() {\n    return {\n      selectedUsers: []\n    };\n  },\n  computed: {\n    ...mapGetters('users', ['users', 'user'])\n  },\n  created() {\n    this.fetchUsers();\n    this.selectedUsers = this.value;\n  },\n  methods: {\n    ...mapActions('users', [\n      'fetchUsers',\n      'addUsers',\n      'updateUser',\n      'deleteUser',\n      'setUser'\n    ]),\n    submit() {\n      this.$emit('input', this.selectedUsers);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}