{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport GroupCheckBox from './GroupCheckBox';\nexport default {\n  name: 'GroupCheckBox',\n  components: {\n    GroupCheckBox: GroupCheckBox\n  },\n  data: function data() {\n    return {\n      selectedItem: null,\n      member1: [{\n        header: '会社1'\n      }, {\n        name: 'A子'\n      }, {\n        name: 'B太郎'\n      }, {\n        name: 'Cさん'\n      }, {\n        divider: true\n      }, {\n        header: '会社2'\n      }, {\n        name: 'Dさん'\n      }, {\n        name: 'Eさん'\n      }, {\n        name: 'Fさん'\n      }, {\n        divider: true\n      }, {\n        header: '会社3'\n      }, {\n        name: 'Gさん'\n      }, {\n        name: 'Hさん'\n      }, {\n        name: 'Jさん'\n      }],\n      selectedMember1: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters('users', ['users', 'user'])),\n  created: function created() {\n    this.fetchUsers();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('users', ['fetchUsers', 'updateUser', 'deleteUser', 'setUser'])), {}, {\n    initUser: function initUser() {\n      this.setUser({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.setUser(null);\n    },\n    edit: function edit(user) {\n      this.setUser(user);\n    },\n    del: function del(user) {\n      this.deleteUser(user.id);\n    },\n    toggleVisibility: function toggleVisibility(user) {\n      this.updateUser(user);\n    }\n  })\n};","map":{"version":3,"sources":["GroupCheckBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,MAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,OAAA,EAAA;AAAA,OALA,EAMA;AAAA,QAAA,MAAA,EAAA;AAAA,OANA,EAOA;AAAA,QAAA,IAAA,EAAA;AAAA,OAPA,EAQA;AAAA,QAAA,IAAA,EAAA;AAAA,OARA,EASA;AAAA,QAAA,IAAA,EAAA;AAAA,OATA,EAUA;AAAA,QAAA,OAAA,EAAA;AAAA,OAVA,EAWA;AAAA,QAAA,MAAA,EAAA;AAAA,OAXA,EAYA;AAAA,QAAA,IAAA,EAAA;AAAA,OAZA,EAaA;AAAA,QAAA,IAAA,EAAA;AAAA,OAbA,EAcA;AAAA,QAAA,IAAA,EAAA;AAAA,OAdA,CAFA;AAkBA,MAAA,eAAA,EAAA;AAlBA,KAAA;AAAA,GAHA;AAuBA,EAAA,QAAA,oBACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,CADA,CAvBA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,SAAA,UAAA;AACA,GA5BA;AA6BA,EAAA,OAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CACA,YADA,EAEA,YAFA,EAGA,YAHA,EAIA,SAJA,CAAA,CADA;AAOA,IAAA,QAPA,sBAOA;AACA,WAAA,OAAA,CAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,UAAA,EAAA;AAFA,OAAA;AAIA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,WAAA,OAAA,CAAA,IAAA;AACA,KAfA;AAgBA,IAAA,IAhBA,gBAgBA,IAhBA,EAgBA;AACA,WAAA,OAAA,CAAA,IAAA;AACA,KAlBA;AAmBA,IAAA,GAnBA,eAmBA,IAnBA,EAmBA;AACA,WAAA,UAAA,CAAA,IAAA,CAAA,EAAA;AACA,KArBA;AAsBA,IAAA,gBAtBA,4BAsBA,IAtBA,EAsBA;AACA,WAAA,UAAA,CAAA,IAAA;AACA;AAxBA;AA7BA,CAAA","sourcesContent":["\n<template>\n  <v-list>\n      <v-autocomplete\n          v-model=\"selectedMember1\"\n          :items=\"member1\"\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"メンバー追加\"\n          item-text=\"selectedItem\"\n          item-value=\"selectedItem\"\n          multiple\n      >\n        <template v-slot:selection=\"data\">\n          <v-chip\n            v-bind=\"data.attrs\"\n            :input-value=\"data.selected\"\n            close\n            @click=\"data.select\"\n            @click:close=\"remove(data.item)\"\n          >\n            {{ data.item.name }}\n          </v-chip>\n        </template>\n\n      </v-autocomplete>\n            <v-list-item-group :value=\"selectedItem\">\n              <v-list-item v-for=\"user in users\" :key=\"user.id\">\n                <v-list-item-content class=\"pa-1\">\n                  <v-checkbox\n                    dense\n                    v-model=\"user.visibility\"\n                    :label=\"user.name\"\n                    @click=\"toggleVisibility(user)\"\n                    class=\"pb-2\"\n                    hide-details=\"true\"\n                  ></v-checkbox>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list-item-group>\n\n  </v-list>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport GroupCheckBox from './GroupCheckBox';\n\nexport default {\n  name: 'GroupCheckBox',\n  components: { GroupCheckBox },\n  data: () => ({\n    selectedItem: null,\n    member1: [\n      { header: '会社1' },\n      { name: 'A子' },\n      { name: 'B太郎' },\n      { name: 'Cさん' },\n      { divider: true },\n      { header: '会社2' },\n      { name: 'Dさん' },\n      { name: 'Eさん' },\n      { name: 'Fさん' },\n      { divider: true },\n      { header: '会社3' },\n      { name: 'Gさん' },\n      { name: 'Hさん' },\n      { name: 'Jさん' }\n    ],\n    selectedMember1: []\n  }),\n  computed: {\n    ...mapGetters('users', ['users', 'user'])\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    ...mapActions('users', [\n      'fetchUsers',\n      'updateUser',\n      'deleteUser',\n      'setUser'\n    ]),\n    initUser() {\n      this.setUser({\n        name: '',\n        visibility: true\n      });\n    },\n    closeDialog() {\n      this.setUser(null);\n    },\n    edit(user) {\n      this.setUser(user);\n    },\n    del(user) {\n      this.deleteUser(user.id);\n    },\n    toggleVisibility(user) {\n      this.updateUser(user);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}