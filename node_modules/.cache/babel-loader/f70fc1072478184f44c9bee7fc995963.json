{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'TestParticipantForm',\n  computed: _objectSpread({}, mapGetters('participants', ['participants', 'participant'])),\n  created: function created() {\n    this.fetchParticipants();\n  },\n  methods: _objectSpread({}, mapActions('participants', ['fetchparticipants', 'updateParticipant', 'deleteParticipant', 'setParticipant']))\n};","map":{"version":3,"sources":["TestParticipantForm.vue"],"names":[],"mappings":";;;;;;;;;;;;AAOA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,qBADA;AAEA,EAAA,QAAA,oBACA,UAAA,CAAA,cAAA,EAAA,CAAA,cAAA,EAAA,aAAA,CAAA,CADA,CAFA;AAKA,EAAA,OALA,qBAKA;AACA,SAAA,iBAAA;AACA,GAPA;AAQA,EAAA,OAAA,oBACA,UAAA,CAAA,cAAA,EAAA,CACA,mBADA,EAEA,mBAFA,EAGA,mBAHA,EAIA,gBAJA,CAAA,CADA;AARA,CAAA","sourcesContent":["<template>\n  <button type=\"submit\" @click=\"fetchparticipants()\"\n  outline\n  >fetchEvents</button>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'TestParticipantForm',\n  computed: {\n    ...mapGetters('participants', ['participants', 'participant'])\n  },\n  created() {\n    this.fetchParticipants();\n  },\n  methods: {\n    ...mapActions('participants', [\n      'fetchparticipants',\n      'updateParticipant',\n      'deleteParticipant',\n      'setParticipant'\n    ])\n  }\n};\n</script>\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}