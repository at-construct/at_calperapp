{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport axios from 'axios';\nvar apiUrl = 'https://calcalappapp.herokuapp.com';\nvar state = {\n  groups: []\n};\nvar getters = {\n  groups: function groups(state) {\n    return state.groups;\n  }\n};\nvar mutations = {\n  setGroups: function setGroups(state, groups) {\n    state.groups = groups;\n  }\n};\nvar actions = {\n  fetchGroups: function fetchGroups(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var commit, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get(\"\".concat(apiUrl, \"/groups\"));\n\n            case 3:\n              response = _context.sent;\n              commit('setGroups', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nexport default {\n  namespaced: true,\n  getters: getters,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"sources":["/Users/aaattt/projects/CalRailsVueApp/app/javascript/store/modules/groups.js"],"names":["axios","apiUrl","state","groups","getters","mutations","setGroups","actions","fetchGroups","commit","get","response","data","namespaced"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG,oCAAf;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AADI,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdD,EAAAA,MAAM,EAAE,gBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA;AADC,CAAhB;AAIA,IAAME,SAAS,GAAG;AAChBC,EAAAA,SADgB,qBACNJ,KADM,EACCC,MADD,EACS;AACvBD,IAAAA,KAAK,CAACC,MAAN,GAAeA,MAAf;AACD;AAHe,CAAlB;AAMA,IAAMI,OAAO,GAAG;AACRC,EAAAA,WADQ,6BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,cAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,qBACHT,KAAK,CAACU,GAAN,WAAaT,MAAb,aADG;;AAAA;AACpBU,cAAAA,QADoB;AAE1BF,cAAAA,MAAM,CAAC,WAAD,EAAcE,QAAQ,CAACC,IAAvB,CAAN;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAG7B;AAJa,CAAhB;AAOA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbT,EAAAA,OAAO,EAAPA,OAFa;AAGbF,EAAAA,KAAK,EAALA,KAHa;AAIbG,EAAAA,SAAS,EAATA,SAJa;AAKbE,EAAAA,OAAO,EAAPA;AALa,CAAf","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = 'https://calcalappapp.herokuapp.com';\n\nconst state = {\n  groups: [],\n};\n\nconst getters = {\n  groups: state => state.groups\n};\n\nconst mutations = {\n  setGroups(state, groups) {\n    state.groups = groups\n  }\n};\n\nconst actions = {\n  async fetchGroups({ commit }) {\n      const response = await axios.get(`${apiUrl}/groups`);\n      commit('setGroups', response.data);\n  },\n};\n\nexport default {\n  namespaced: true,\n  getters,\n  state,\n  mutations,\n  actions,\n};\n"]},"metadata":{},"sourceType":"module"}