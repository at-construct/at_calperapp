{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nnew Vue({\n  el: '#app',\n  vuetify: new Vuetify(),\n  data: function data() {\n    return {\n      focus: '',\n      type: 'month',\n      typeToLabel: {\n        month: 'Month',\n        week: 'Week',\n        day: 'Day',\n        '4day': '4 Days'\n      },\n      selectedEvent: {},\n      selectedElement: null,\n      selectedOpen: false,\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n    };\n  },\n  mounted: function mounted() {\n    this.$refs.calendar.checkChange();\n  },\n  methods: {\n    viewDay: function viewDay(_ref) {\n      var date = _ref.date;\n      this.focus = date;\n      this.type = 'day';\n    },\n    getEventColor: function getEventColor(event) {\n      return event.color;\n    },\n    setToday: function setToday() {\n      this.focus = '';\n    },\n    prev: function prev() {\n      this.$refs.calendar.prev();\n    },\n    next: function next() {\n      this.$refs.calendar.next();\n    },\n    showEvent: function showEvent(_ref2) {\n      var _this = this;\n\n      var nativeEvent = _ref2.nativeEvent,\n          event = _ref2.event;\n\n      var open = function open() {\n        _this.selectedEvent = event;\n        _this.selectedElement = nativeEvent.target;\n        requestAnimationFrame(function () {\n          return requestAnimationFrame(function () {\n            return _this.selectedOpen = true;\n          });\n        });\n      };\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false;\n        requestAnimationFrame(function () {\n          return requestAnimationFrame(function () {\n            return open();\n          });\n        });\n      } else {\n        open();\n      }\n\n      nativeEvent.stopPropagation();\n    },\n    updateRange: function updateRange(_ref3) {\n      var start = _ref3.start,\n          end = _ref3.end;\n      var events = [];\n      var min = new Date(\"\".concat(start.date, \"T00:00:00\"));\n      var max = new Date(\"\".concat(end.date, \"T23:59:59\"));\n      var days = (max.getTime() - min.getTime()) / 86400000;\n      var eventCount = this.rnd(days, days + 20);\n\n      for (var i = 0; i < eventCount; i++) {\n        var allDay = this.rnd(0, 3) === 0;\n        var firstTimestamp = this.rnd(min.getTime(), max.getTime());\n        var first = new Date(firstTimestamp - firstTimestamp % 900000);\n        var secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\n        var second = new Date(first.getTime() + secondTimestamp);\n        events.push({\n          name: this.names[this.rnd(0, this.names.length - 1)],\n          start: first,\n          end: second,\n          color: this.colors[this.rnd(0, this.colors.length - 1)],\n          timed: !allDay\n        });\n      }\n\n      this.events = events;\n    },\n    rnd: function rnd(a, b) {\n      return Math.floor((b - a + 1) * Math.random()) + a;\n    }\n  }\n});","map":{"version":3,"sources":["app.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"64\">\n        <v-toolbar\n          flat\n        >\n          <v-btn\n            outlined\n            class=\"mr-4\"\n            color=\"grey darken-2\"\n            @click=\"setToday\"\n          >\n            Today\n          </v-btn>\n          <v-btn\n            fab\n            text\n            small\n            color=\"grey darken-2\"\n            @click=\"prev\"\n          >\n            <v-icon small>\n              mdi-chevron-left\n            </v-icon>\n          </v-btn>\n          <v-btn\n            fab\n            text\n            small\n            color=\"grey darken-2\"\n            @click=\"next\"\n          >\n            <v-icon small>\n              mdi-chevron-right\n            </v-icon>\n          </v-btn>\n          <v-toolbar-title v-if=\"$refs.calendar\">\n            {{ $refs.calendar.title }}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-menu\n            bottom\n            right\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn\n                outlined\n                color=\"grey darken-2\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                <span>{{ typeToLabel[type] }}</span>\n                <v-icon right>\n                  mdi-menu-down\n                </v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"type = 'day'\">\n                <v-list-item-title>Day</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'week'\">\n                <v-list-item-title>Week</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = 'month'\">\n                <v-list-item-title>Month</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"type = '4day'\">\n                <v-list-item-title>4 days</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-toolbar>\n      </v-sheet>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"focus\"\n          color=\"primary\"\n          :events=\"events\"\n          :event-color=\"getEventColor\"\n          :type=\"type\"\n          @click:event=\"showEvent\"\n          @click:more=\"viewDay\"\n          @click:date=\"viewDay\"\n          @change=\"updateRange\"\n        ></v-calendar>\n        <v-menu\n          v-model=\"selectedOpen\"\n          :close-on-content-click=\"false\"\n          :activator=\"selectedElement\"\n          offset-x\n        >\n          <v-card\n            color=\"grey lighten-4\"\n            min-width=\"350px\"\n            flat\n          >\n            <v-toolbar\n              :color=\"selectedEvent.color\"\n              dark\n            >\n              <v-btn icon>\n                <v-icon>mdi-pencil</v-icon>\n              </v-btn>\n              <v-toolbar-title v-html=\"selectedEvent.name\"></v-toolbar-title>\n              <v-spacer></v-spacer>\n              <v-btn icon>\n                <v-icon>mdi-heart</v-icon>\n              </v-btn>\n              <v-btn icon>\n                <v-icon>mdi-dots-vertical</v-icon>\n              </v-btn>\n            </v-toolbar>\n            <v-card-text>\n              <span v-html=\"selectedEvent.details\"></span>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn\n                text\n                color=\"secondary\"\n                @click=\"selectedOpen = false\"\n              >\n                Cancel\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-menu>\n      </v-sheet>\n    </v-col>\n  </v-row>\n</template>\n\n\n<script>\nnew Vue({\n  el: '#app',\n  vuetify: new Vuetify(),\n  data: () => ({\n    focus: '',\n    type: 'month',\n    typeToLabel: {\n      month: 'Month',\n      week: 'Week',\n      day: 'Day',\n      '4day': '4 Days',\n    },\n    selectedEvent: {},\n    selectedElement: null,\n    selectedOpen: false,\n    events: [],\n    colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n    names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n  }),\n  mounted () {\n    this.$refs.calendar.checkChange()\n  },\n  methods: {\n    viewDay ({ date }) {\n      this.focus = date\n      this.type = 'day'\n    },\n    getEventColor (event) {\n      return event.color\n    },\n    setToday () {\n      this.focus = ''\n    },\n    prev () {\n      this.$refs.calendar.prev()\n    },\n    next () {\n      this.$refs.calendar.next()\n    },\n    showEvent ({ nativeEvent, event }) {\n      const open = () => {\n        this.selectedEvent = event\n        this.selectedElement = nativeEvent.target\n        requestAnimationFrame(() => requestAnimationFrame(() => this.selectedOpen = true))\n      }\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false\n        requestAnimationFrame(() => requestAnimationFrame(() => open()))\n      } else {\n        open()\n      }\n\n      nativeEvent.stopPropagation()\n    },\n    updateRange ({ start, end }) {\n      const events = []\n\n      const min = new Date(`${start.date}T00:00:00`)\n      const max = new Date(`${end.date}T23:59:59`)\n      const days = (max.getTime() - min.getTime()) / 86400000\n      const eventCount = this.rnd(days, days + 20)\n\n      for (let i = 0; i < eventCount; i++) {\n        const allDay = this.rnd(0, 3) === 0\n        const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n        const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n        const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n        const second = new Date(first.getTime() + secondTimestamp)\n\n        events.push({\n          name: this.names[this.rnd(0, this.names.length - 1)],\n          start: first,\n          end: second,\n          color: this.colors[this.rnd(0, this.colors.length - 1)],\n          timed: !allDay,\n        })\n      }\n\n      this.events = events\n    },\n    rnd (a, b) {\n      return Math.floor((b - a + 1) * Math.random()) + a\n    },\n  },\n})\n</script>\n\n\n"],"sourceRoot":"app/javascript"},"metadata":{},"sourceType":"module"}