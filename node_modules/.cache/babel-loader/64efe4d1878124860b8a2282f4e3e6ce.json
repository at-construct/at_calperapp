{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport DialogSection from './DialogSection';\nimport DateForm from './DateForm';\nimport TimeForm from './TimeForm';\nexport default {\n  name: 'EventFormDialog',\n  components: {\n    DialogSection: DialogSection,\n    DateForm: DateForm,\n    TimeForm: TimeForm\n  },\n  data: function data() {\n    return {\n      name: '',\n      startDate: null,\n      startTime: null,\n      endDate: null,\n      endTime: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters('events', ['event'])),\n  created: function created() {\n    this.startDate = this.event.startDate;\n    this.startTime = this.event.startTime;\n    this.endDate = this.event.endDate;\n    this.endTime = this.event.endTime;\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions('events', ['setEvent', 'setEditMode', 'createEvent'])), {}, {\n    closeDialog: function closeDialog() {\n      this.setEvent(null);\n    },\n    submit: function submit() {\n      var params = {\n        name: this.name,\n        start: \"\".concat(this.startDate, \" \").concat(this.startTime || ''),\n        end: \"\".concat(this.endDate, \" \").concat(this.endTime || '')\n      };\n      this.createEvent(params);\n      this.closeDialog();\n    }\n  })\n};","map":{"version":3,"sources":["EventFormDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,QAAA,MAAA,YAAA;AACA,OAAA,QAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,aAAA,EAAA,aADA;AAEA,IAAA,QAAA,EAAA,QAFA;AAGA,IAAA,QAAA,EAAA;AAHA,GAFA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,OAAA,EAAA;AALA,KAAA;AAAA,GAPA;AAcA,EAAA,QAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CAAA,OAAA,CAAA,CADA,CAdA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACA,SAAA,SAAA,GAAA,KAAA,KAAA,CAAA,SAAA;AACA,SAAA,OAAA,GAAA,KAAA,KAAA,CAAA,OAAA;AACA,SAAA,OAAA,GAAA,KAAA,KAAA,CAAA,OAAA;AACA,GAtBA;AAuBA,EAAA,OAAA,kCACA,UAAA,CAAA,QAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,aAAA,CAAA,CADA;AAEA,IAAA,WAFA,yBAEA;AACA,WAAA,QAAA,CAAA,IAAA;AACA,KAJA;AAKA,IAAA,MALA,oBAKA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,IAAA,EAAA,KAAA,IADA;AAEA,QAAA,KAAA,YAAA,KAAA,SAAA,cAAA,KAAA,SAAA,IAAA,EAAA,CAFA;AAGA,QAAA,GAAA,YAAA,KAAA,OAAA,cAAA,KAAA,OAAA,IAAA,EAAA;AAHA,OAAA;AAKA,WAAA,WAAA,CAAA,MAAA;AACA,WAAA,WAAA;AACA;AAbA;AAvBA,CAAA","sourcesContent":["<template>\n  <v-card class=\"pb-12\">\n    <v-card-actions class=\"d-flex justify-end pa-2\">\n      <v-btn icon @click=\"closeDialog\">\n        <v-icon size=\"20px\">mdi-close</v-icon>\n      </v-btn>\n    </v-card-actions>\n    <v-card-text>\n      <DialogSection icon=\"mdi-square\" :color=\"event.color\">\n        <v-text-field v-model=\"name\" label=\"タイトル\"></v-text-field>\n      </DialogSection>\n      <DialogSection icon=\"mdi-clock-outline\">\n      <DateForm v-model=\"startDate\" />\n      <TimeForm v-model=\"startTime\" />\n      <DateForm v-model=\"endDate\" />\n      <TimeForm v-model=\"endTime\" />\n      </DialogSection>\n    </v-card-text>\n    <v-card-actions class=\"d-flex justify-end\">\n      <v-btn @click=\"submit\">保存</v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex';\nimport DialogSection from './DialogSection';\nimport DateForm from './DateForm';\nimport TimeForm from './TimeForm';\n\nexport default {\n  name: 'EventFormDialog',\n  components: {\n    DialogSection,\n    DateForm,\n    TimeForm,\n  },\n  data: () => ({\n    name: '',\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n  }),\n  computed: {\n    ...mapGetters('events', ['event']),\n  },\n  created() {\n    this.startDate = this.event.startDate;\n    this.startTime = this.event.startTime;\n    this.endDate = this.event.endDate;\n    this.endTime = this.event.endTime;\n  },\n  methods: {\n    ...mapActions('events', ['setEvent', 'setEditMode', 'createEvent']),\n    closeDialog() {\n      this.setEvent(null);\n    },\n    submit() {\n      const params = {\n        name: this.name,\n        start: `${this.startDate} ${this.startTime || ''}`,\n        end: `${this.endDate} ${this.endTime || ''}`,\n      };\n      this.createEvent(params);\n      this.closeDialog();\n    },\n  },\n};\n</script>"],"sourceRoot":"app/javascript/components"},"metadata":{},"sourceType":"module"}