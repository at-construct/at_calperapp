{"ast":null,"code":"/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nimport DaySpanVuetify from 'dayspan-vuetify';\nimport App from './App.vue';\nimport 'vuetify/dist/vuetify.min.css';\nimport 'material-design-icons-iconfont/dist/material-design-icons.css';\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css';\nVue.config.productionTip = false;\nVue.use(Vuetify);\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: function getDefaultEventColor() {\n      return '#1976d2';\n    }\n  }\n});\nnew Vue({\n  el: '#app',\n  render: function render(h) {\n    return h(App);\n  }\n}); // The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })","map":{"version":3,"sources":["/Users/at19830906/projects/CalRailsVueApp/app/javascript/packs/hello_vue.js"],"names":["Vue","Vuetify","DaySpanVuetify","App","config","productionTip","use","methods","getDefaultEventColor","el","render","h"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,OAAO,8BAAP;AACA,OAAO,+DAAP;AACA,OAAO,kDAAP;AAEAH,GAAG,CAACI,MAAJ,CAAWC,aAAX,GAA2B,KAA3B;AAEAL,GAAG,CAACM,GAAJ,CAAQL,OAAR;AAEAD,GAAG,CAACM,GAAJ,CAAQJ,cAAR,EAAwB;AACtBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,oBAAoB,EAAE;AAAA,aAAM,SAAN;AAAA;AADf;AADa,CAAxB;AAMA,IAAIR,GAAJ,CAAQ;AACNS,EAAAA,EAAE,EAAE,MADE;AAENC,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACR,GAAD,CAAL;AAAA;AAFH,CAAR,E,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint no-console: 0 */\n// Run this example by adding <%= javascript_pack_tag 'hello_vue' %> (and\n// <%= stylesheet_pack_tag 'hello_vue' %> if you have styles in your component)\n// to the head of your layout file,\n// like app/views/layouts/application.html.erb.\n// All it does is render <div>Hello Vue</div> at the bottom of the page.\n\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport DaySpanVuetify from 'dayspan-vuetify'\nimport App from './App.vue'\n\nimport 'vuetify/dist/vuetify.min.css'\nimport 'material-design-icons-iconfont/dist/material-design-icons.css'\nimport 'dayspan-vuetify/dist/lib/dayspan-vuetify.min.css'\n\nVue.config.productionTip = false\n\nVue.use(Vuetify);\n\nVue.use(DaySpanVuetify, {\n  methods: {\n    getDefaultEventColor: () => '#1976d2'\n  }\n});\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\n\n// The above code uses Vue without the compiler, which means you cannot\n// use Vue to target elements in your existing html templates. You would\n// need to always use single file components.\n// To be able to target elements in your existing html/erb templates,\n// comment out the above code and uncomment the below\n// Add <%= javascript_pack_tag 'hello_vue' %> to your layout\n// Then add this markup to your html template:\n//\n// <div id='hello'>\n//   {{message}}\n//   <app></app>\n// </div>\n\n\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// document.addEventListener('DOMContentLoaded', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: {\n//       message: \"Can you say hello?\"\n//     },\n//     components: { App }\n//   })\n// })\n//\n//\n//\n// If the project is using turbolinks, install 'vue-turbolinks':\n//\n// yarn add vue-turbolinks\n//\n// Then uncomment the code block below:\n//\n// import TurbolinksAdapter from 'vue-turbolinks'\n// import Vue from 'vue/dist/vue.esm'\n// import App from '../app.vue'\n//\n// Vue.use(TurbolinksAdapter)\n//\n// document.addEventListener('turbolinks:load', () => {\n//   const app = new Vue({\n//     el: '#hello',\n//     data: () => {\n//       return {\n//         message: \"Can you say hello?\"\n//       }\n//     },\n//     components: { App }\n//   })\n// })\n"]},"metadata":{},"sourceType":"module"}