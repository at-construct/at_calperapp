{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  watch: {\n    search: function search(val) {\n      var _this = this;\n\n      // すでに読み込み済みの場合は、何もしない\n      if (this.items.length > 0) return; // 読み込み中の場合も、何もしない\n\n      if (this.isLoading) return;\n      this.isLoading = true; // APIから、選択肢をfetchする\n\n      axios.get('https://api.publicapis.org/entries').then(function (res) {\n        var _res$data = res.data,\n            count = _res$data.count,\n            entries = _res$data.entries;\n        _this.count = count;\n        _this.entries = entries;\n      })[\"catch\"](function (err) {\n        console.log(err); //読み込みが完了したので、loadingをfalseに\n      })[\"finally\"](function () {\n        return _this.isLoading = false;\n      });\n    }\n  },\n  data: function data() {\n    return {\n      selectedItem: null,\n      member1: [{\n        name: 'A子'\n      }],\n      selectedMember1: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters('events', ['events', 'event'])),\n  created: function created() {\n    this.fetchEvents();\n  },\n  methods: _objectSpread({}, mapActions('events', ['fetchEvents', 'updateEvent', 'deleteEvent', 'setEvent']))\n};","map":{"version":3,"sources":["TestUserSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AAAA;;AACA;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA,OAFA,CAGA;;AACA,UAAA,KAAA,SAAA,EAAA;AAEA,WAAA,SAAA,GAAA,IAAA,CANA,CAQA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,oCAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,wBAGA,GAAA,CAAA,IAHA;AAAA,YACA,KADA,aACA,KADA;AAAA,YAEA,OAFA,aAEA,OAFA;AAIA,QAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,OAAA;AACA,OAPA,WAOA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EADA,CAEA;AACA,OAVA,aAUA;AAAA,eAAA,KAAA,CAAA,SAAA,GAAA,KAAA;AAAA,OAVA;AAWA;AArBA,GAFA;AAyBA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,YAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA,CAFA;AAKA,MAAA,eAAA,EAAA;AALA,KAAA;AAAA,GAzBA;AAgCA,EAAA,QAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CAAA,QAAA,EAAA,OAAA,CAAA,CADA,CAhCA;AAmCA,EAAA,OAnCA,qBAmCA;AACA,SAAA,WAAA;AACA,GArCA;AAsCA,EAAA,OAAA,oBACA,UAAA,CAAA,QAAA,EAAA,CACA,aADA,EAEA,aAFA,EAGA,aAHA,EAIA,UAJA,CAAA,CADA;AAtCA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n<v-autocomplete\n    v-model=\"model\"\n    :items=\"items\"\n    :loading=\"isLoading\"\n    :search-input.sync=\"search\"\n    color=\"white\"\n    item-text=\"Description\"\n    item-value=\"API\"\n    cache-items\n    hide-no-data\n    hide-selected\n    placeholder=\"入力できます\"\n    prepend-icon=\"mdi-database-search\"\n    return-object\n></v-autocomplete>\n\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\n\nexport default {\n  name: 'GuestSelectForm',\n  watch: {\n    search(val) {\n        // すでに読み込み済みの場合は、何もしない\n        if (this.items.length > 0) return\n        // 読み込み中の場合も、何もしない\n        if (this.isLoading) return\n\n        this.isLoading = true\n\n        // APIから、選択肢をfetchする\n        axios.get('https://api.publicapis.org/entries').then(res => {\n            const {\n                count,\n                entries\n            } = res.data\n            this.count = count\n            this.entries = entries\n        }).catch(err => {\n            console.log(err)\n        //読み込みが完了したので、loadingをfalseに\n        }).finally(() => (this.isLoading = false))\n    }\n  },\n  data: () => ({\n    selectedItem: null,\n    member1: [\n      { name: 'A子' },\n    ],\n    selectedMember1: []\n  }),\n  computed: {\n    ...mapGetters('events', ['events', 'event']),\n  },\n  created() {\n    this.fetchEvents();\n  },\n  methods: {\n    ...mapActions('events', [\n      'fetchEvents',\n      'updateEvent',\n      'deleteEvent',\n      'setEvent'\n    ]),\n  },\n};\n</script>\n\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}