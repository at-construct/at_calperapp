{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'GuestSelectForm',\n  props: ['value'],\n  computed: _objectSpread(_objectSpread({}, mapGetters('users', ['users'])), {}, {\n    user: {\n      get: function get() {\n        if (this.value === undefined || this.value === null) {\n          this.$emit('input', this.users[0]);\n          return this.users[0];\n        }\n\n        return this.value;\n      },\n      set: function set(value) {\n        this.$emit('input', value);\n      }\n    }\n  })\n};","map":{"version":3,"sources":["GuestSelectForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,QAAA,kCACA,UAAA,CAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CADA;AAEA,IAAA,IAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,YAAA,KAAA,KAAA,KAAA,SAAA,IAAA,KAAA,KAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,CAAA,OAAA,EAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA,iBAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA;;AACA,eAAA,KAAA,KAAA;AACA,OAPA;AAQA,MAAA,GARA,eAQA,KARA,EAQA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AAVA;AAFA;AAHA,CAAA","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row align=\"center\">\n      <v-col cols=\"12\" md=\"6\">\n        <v-autocomplete\n          v-model=\"selectedMember1\"\n          :items=\"member1\"\n          small-chips\n          clearable\n          color=\"grey\"\n          label=\"参加者を追加\"\n          item-text=\"name\"\n          item-value=\"name\"\n          multiple\n        >\n          <template v-slot:selection=\"data\">\n            <v-chip\n              v-bind=\"data.attrs\"\n              :input-value=\"data.selected\"\n              close\n              @click=\"data.select\"\n              @click:close=\"remove(data.item)\"\n            >\n              {{ data.item.name }}\n            </v-chip>\n          </template>\n        </v-autocomplete>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n  <script>\n  import { mapGetters } from 'vuex';\n\n  export default {\n    name: 'GuestSelectForm',\n    props: ['value'],\n    computed: {\n      ...mapGetters('users', ['users']),\n      user: {\n        get() {\n          if (this.value === undefined || this.value === null) {\n            this.$emit('input', this.users[0]);\n            return this.users[0];\n          }\n          return this.value;\n        },\n        set(value) {\n          this.$emit('input', value);\n        },\n      },\n    },\n  };\n  </script>\n\n\n"],"sourceRoot":"app/javascript/components/forms"},"metadata":{},"sourceType":"module"}